/* This code is generated by pOt. */
#line 43 "texts.mod"

#line 43 "texts.mod"
#include <pOtRTL.h>
#line 43 "texts.mod"
#include "Files.h"
#line 43 "texts.mod"
#include "Reals.h"
#line 43 "texts.mod"

#line 43 "texts.mod"
#include "hi.Texts"
#line 43 "texts.mod"

#line 43 "texts.mod"
typedef pOt_File_Files pOt_Text_Texts;
#line 43 "texts.mod"
typedef struct pOt__tag_1_Texts *pOt_Buffer_Texts;
#line 43 "texts.mod"
typedef struct pOt__tag_1_Texts pOt_BufDesc_Texts;
#line 43 "texts.mod"
typedef struct pOt__tag_2_Texts pOt_Reader_Texts;
#line 43 "texts.mod"
typedef struct pOt__tag_4_Texts pOt_Scanner_Texts;
#line 43 "texts.mod"
typedef struct pOt__tag_5_Texts pOt_Writer_Texts;
#line 43 "texts.mod"

#line 43 "texts.mod"
struct pOt__tag_0_Texts {
#line 43 "texts.mod"
  pOt__ArrTypDsc *td;
#line 43 "texts.mod"
  pOt_CHAR arr[0x200L];
#line 43 "texts.mod"
} ;
#line 43 "texts.mod"
pOt__ArrTypDsc pOt__td_0_Texts= {
#line 43 "texts.mod"
  1,
#line 43 "texts.mod"
  0x200L, sizeof(pOt_CHAR)
#line 43 "texts.mod"
};
#line 43 "texts.mod"
struct pOt__tag_1_Texts {
#line 43 "texts.mod"
  pOt__RecTypDsc *td;
#line 43 "texts.mod"
  pOt_Buffer_Texts pOt_next;
#line 43 "texts.mod"
  pOt_LONGINT pOt_len;
#line 43 "texts.mod"
  struct pOt__tag_0_Texts pOt_data;
#line 43 "texts.mod"
} ;
#line 43 "texts.mod"
struct {
#line 43 "texts.mod"
  pOt_INTEGER mode;
#line 43 "texts.mod"
  pOt_LONGINT size;
#line 43 "texts.mod"
  pOt_INTEGER extlev, nstr, nptr, npro;
#line 43 "texts.mod"
  pOt__RecTypDsc *base_td[pOt__MaxExts];
#line 43 "texts.mod"
  struct {pOt_LONGINT poffs; pOt__TypDsc *fld_td;} tab[0x2];
#line 43 "texts.mod"
} pOt__td_1_Texts= {
#line 43 "texts.mod"
  0,
#line 43 "texts.mod"
  sizeof(struct pOt__tag_1_Texts),
#line 43 "texts.mod"
  0x0, 0x1, 0x1, 0x0,
#line 43 "texts.mod"
  {pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL},
#line 43 "texts.mod"
  {
#line 43 "texts.mod"
    {(pOt_LONGINT)&((struct pOt__tag_1_Texts*)0)->pOt_data, (pOt__TypDsc*)&pOt__td_0_Texts},
#line 43 "texts.mod"
    {(pOt_LONGINT)&((struct pOt__tag_1_Texts*)0)->pOt_next, pOt_NIL}
#line 43 "texts.mod"
  }
#line 43 "texts.mod"
};
#line 43 "texts.mod"
struct pOt__tag_2_Texts {
#line 43 "texts.mod"
  struct pOt__tag_2_Files base;
#line 43 "texts.mod"
  pOt_LONGINT pOt_org;
#line 43 "texts.mod"
  pOt_BOOLEAN pOt_eot;
#line 43 "texts.mod"
} ;
#line 43 "texts.mod"
struct {
#line 43 "texts.mod"
  pOt_INTEGER mode;
#line 43 "texts.mod"
  pOt_LONGINT size;
#line 43 "texts.mod"
  pOt_INTEGER extlev, nstr, nptr, npro;
#line 43 "texts.mod"
  pOt__RecTypDsc *base_td[pOt__MaxExts];
#line 43 "texts.mod"
} pOt__td_2_Texts= {
#line 43 "texts.mod"
  0,
#line 43 "texts.mod"
  sizeof(struct pOt__tag_2_Texts),
#line 43 "texts.mod"
  0x1, 0x0, 0x0, 0x0,
#line 43 "texts.mod"
  {(pOt__RecTypDsc*)&pOt__td_2_Files, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL}
#line 43 "texts.mod"
};
#line 43 "texts.mod"
struct pOt__tag_3_Texts {
#line 43 "texts.mod"
  pOt__ArrTypDsc *td;
#line 43 "texts.mod"
  pOt_CHAR arr[0x20L];
#line 43 "texts.mod"
} ;
#line 43 "texts.mod"
pOt__ArrTypDsc pOt__td_3_Texts= {
#line 43 "texts.mod"
  1,
#line 43 "texts.mod"
  0x20L, sizeof(pOt_CHAR)
#line 43 "texts.mod"
};
#line 43 "texts.mod"
struct pOt__tag_4_Texts {
#line 43 "texts.mod"
  struct pOt__tag_2_Texts base;
#line 43 "texts.mod"
  pOt_CHAR pOt_nextCh;
#line 43 "texts.mod"
  pOt_INTEGER pOt_line, pOt_class;
#line 43 "texts.mod"
  pOt_LONGINT pOt_i;
#line 43 "texts.mod"
  pOt_REAL pOt_x;
#line 43 "texts.mod"
  pOt_LONGREAL pOt_y;
#line 43 "texts.mod"
  pOt_CHAR pOt_c;
#line 43 "texts.mod"
  pOt_SHORTINT pOt_len;
#line 43 "texts.mod"
  struct pOt__tag_3_Texts pOt_s;
#line 43 "texts.mod"
} ;
#line 43 "texts.mod"
struct {
#line 43 "texts.mod"
  pOt_INTEGER mode;
#line 43 "texts.mod"
  pOt_LONGINT size;
#line 43 "texts.mod"
  pOt_INTEGER extlev, nstr, nptr, npro;
#line 43 "texts.mod"
  pOt__RecTypDsc *base_td[pOt__MaxExts];
#line 43 "texts.mod"
  struct {pOt_LONGINT poffs; pOt__TypDsc *fld_td;} tab[0x1];
#line 43 "texts.mod"
} pOt__td_4_Texts= {
#line 43 "texts.mod"
  0,
#line 43 "texts.mod"
  sizeof(struct pOt__tag_4_Texts),
#line 43 "texts.mod"
  0x2, 0x1, 0x0, 0x0,
#line 43 "texts.mod"
  {(pOt__RecTypDsc*)&pOt__td_2_Files, (pOt__RecTypDsc*)&pOt__td_2_Texts, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL},
#line 43 "texts.mod"
  {
#line 43 "texts.mod"
    {(pOt_LONGINT)&((struct pOt__tag_4_Texts*)0)->pOt_s, (pOt__TypDsc*)&pOt__td_3_Texts}
#line 43 "texts.mod"
  }
#line 43 "texts.mod"
};
#line 43 "texts.mod"
struct pOt__tag_5_Texts {
#line 43 "texts.mod"
  pOt__RecTypDsc *td;
#line 43 "texts.mod"
  pOt_Buffer_Texts pOt_buf;
#line 43 "texts.mod"
} ;
#line 43 "texts.mod"
struct {
#line 43 "texts.mod"
  pOt_INTEGER mode;
#line 43 "texts.mod"
  pOt_LONGINT size;
#line 43 "texts.mod"
  pOt_INTEGER extlev, nstr, nptr, npro;
#line 43 "texts.mod"
  pOt__RecTypDsc *base_td[pOt__MaxExts];
#line 43 "texts.mod"
  struct {pOt_LONGINT poffs; pOt__TypDsc *fld_td;} tab[0x1];
#line 43 "texts.mod"
} pOt__td_5_Texts= {
#line 43 "texts.mod"
  0,
#line 43 "texts.mod"
  sizeof(struct pOt__tag_5_Texts),
#line 43 "texts.mod"
  0x0, 0x0, 0x1, 0x0,
#line 43 "texts.mod"
  {pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL, pOt_NIL},
#line 43 "texts.mod"
  {
#line 43 "texts.mod"
    {(pOt_LONGINT)&((struct pOt__tag_5_Texts*)0)->pOt_buf, pOt_NIL}
#line 43 "texts.mod"
  }
#line 43 "texts.mod"
};
#line 43 "texts.mod"

#line 43 "texts.mod"

#line 43 "texts.mod"
static struct {void *next, *vars[0x1];} pOt__gc_ptrs = {pOt_NIL,{
#line 43 "texts.mod"
  pOt_NIL
#line 43 "texts.mod"
}};
#line 43 "texts.mod"
static struct {void *next, *vars[0x1];} pOt__gc_strs = {&pOt__gc_ptrs,{
#line 43 "texts.mod"
  pOt_NIL
#line 43 "texts.mod"
}};
#line 43 "texts.mod"

#line 43 "texts.mod"

#line 45 "texts.mod"

#line 45 "texts.mod"

#line 45 "texts.mod"
static void pOt_RdString_Texts
#line 45 "texts.mod"
#if pOt__ANSI_C
#line 45 "texts.mod"
  (struct pOt__tag_2_Files *pOt_r, pOt__DynArr *pOt_s)
#line 45 "texts.mod"
#else
#line 45 "texts.mod"
  (pOt_r, pOt_s)
#line 45 "texts.mod"
  struct pOt__tag_2_Files *pOt_r;
#line 45 "texts.mod"
  pOt__DynArr *pOt_s;
#line 45 "texts.mod"

#line 45 "texts.mod"
#endif
#line 45 "texts.mod"
{
#line 45 "texts.mod"
  pOt_INTEGER pOt_i;
#line 45 "texts.mod"
  pOt_CHAR pOt_ch;
#line 45 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 45 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 45 "texts.mod"

#line 45 "texts.mod"
  pOt_i=(pOt_INTEGER)(0);
#line 45 "texts.mod"
  for(;;) {
    pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_ch);
#line 46 "texts.mod"
    (*((pOt_CHAR*)(((char *)pOt_s+sizeof(pOt__ArrTypDsc*)+sizeof(pOt_CHAR)*pOt__inxchk(__FILE__,__LINE__,(*(pOt_s))->nofel,pOt_i)))))=pOt_ch;
#line 46 "texts.mod"
    pOt_i+=(1);
#line 46 "texts.mod"
    if(((((unsigned char)pOt_ch==(unsigned char)'\0'))||((((pOt_LONGINT)(pOt_i))==(*((pOt__ArrTypDsc**)&(*pOt_s)+0))->nofel)))) break;
#line 46 "texts.mod"
  }
#line 46 "texts.mod"
  for(;;) {
    if((!(*pOt_r).pOt_eof&&(((unsigned char)pOt_ch!=(unsigned char)'\0')))); else break;
#line 47 "texts.mod"
    pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_ch);
#line 47 "texts.mod"
  }
#line 47 "texts.mod"
  (*((pOt_CHAR*)(((char *)pOt_s+sizeof(pOt__ArrTypDsc*)+sizeof(pOt_CHAR)*pOt__inxchk(__FILE__,__LINE__,(*(pOt_s))->nofel,pOt_i)))))='\0';
#line 49 "texts.mod"

#line 49 "texts.mod"
pOt__Epilogue:;
#line 49 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 49 "texts.mod"
}
#line 49 "texts.mod"

#line 49 "texts.mod"

#line 53 "texts.mod"

#line 53 "texts.mod"

#line 53 "texts.mod"
static void pOt_RdInt_Texts
#line 53 "texts.mod"
#if pOt__ANSI_C
#line 53 "texts.mod"
  (struct pOt__tag_2_Files *pOt_r, pOt_INTEGER *pOt_n)
#line 53 "texts.mod"
#else
#line 53 "texts.mod"
  (pOt_r, pOt_n)
#line 53 "texts.mod"
  struct pOt__tag_2_Files *pOt_r;
#line 53 "texts.mod"
  pOt_INTEGER *pOt_n;
#line 53 "texts.mod"

#line 53 "texts.mod"
#endif
#line 53 "texts.mod"
{
#line 53 "texts.mod"
  pOt_CHAR pOt_c0;
#line 53 "texts.mod"
  pOt_SHORTINT pOt_s1;
#line 53 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 53 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 53 "texts.mod"

#line 53 "texts.mod"
  pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_c0);
#line 53 "texts.mod"
  pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_s1);
#line 53 "texts.mod"
  (*pOt_n)=(pOt_INTEGER)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_SHORTINT)(pOt_s1)),(pOt_LONGINT)(256),5)),(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_c0)),5));
#line 55 "texts.mod"

#line 55 "texts.mod"
pOt__Epilogue:;
#line 55 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 55 "texts.mod"
}
#line 55 "texts.mod"

#line 55 "texts.mod"

#line 59 "texts.mod"

#line 59 "texts.mod"

#line 59 "texts.mod"
static void pOt_RdLong_Texts
#line 59 "texts.mod"
#if pOt__ANSI_C
#line 59 "texts.mod"
  (struct pOt__tag_2_Files *pOt_r, pOt_LONGINT *pOt_n)
#line 59 "texts.mod"
#else
#line 59 "texts.mod"
  (pOt_r, pOt_n)
#line 59 "texts.mod"
  struct pOt__tag_2_Files *pOt_r;
#line 59 "texts.mod"
  pOt_LONGINT *pOt_n;
#line 59 "texts.mod"

#line 59 "texts.mod"
#endif
#line 59 "texts.mod"
{
#line 59 "texts.mod"
  pOt_CHAR pOt_c0, pOt_c1, pOt_c2;
#line 59 "texts.mod"
  pOt_SHORTINT pOt_s3;
#line 59 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 59 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 59 "texts.mod"

#line 59 "texts.mod"
  pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_c0);
#line 59 "texts.mod"
  pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_c1);
#line 59 "texts.mod"
  pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_c2);
#line 59 "texts.mod"
  pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_BYTE_SYSTEM*)&pOt_s3);
#line 59 "texts.mod"
  (*pOt_n)=(pOt_LONGINT)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)(((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)(((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_SHORTINT)(pOt_s3)),(pOt_LONGINT)(256),5)),(pOt_LONGINT)((pOt_INTEGER)((pOt_INTEGER)((unsigned char)pOt_c2))),6))),(pOt_LONGINT)(256),6)),(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_c1)),6))),(pOt_LONGINT)(256),6)),(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_c0)),6));
#line 61 "texts.mod"

#line 61 "texts.mod"
pOt__Epilogue:;
#line 61 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 61 "texts.mod"
}
#line 61 "texts.mod"

#line 61 "texts.mod"

#line 66 "texts.mod"

#line 66 "texts.mod"

#line 66 "texts.mod"
static void pOt_WrtString_Texts
#line 66 "texts.mod"
#if pOt__ANSI_C
#line 66 "texts.mod"
  (struct pOt__tag_2_Files *pOt_r, pOt__DynArr *pOt_s)
#line 66 "texts.mod"
#else
#line 66 "texts.mod"
  (pOt_r, pOt_s)
#line 66 "texts.mod"
  struct pOt__tag_2_Files *pOt_r;
#line 66 "texts.mod"
  pOt__DynArr *pOt_s;
#line 66 "texts.mod"

#line 66 "texts.mod"
#endif
#line 66 "texts.mod"
{
#line 66 "texts.mod"
  pOt_INTEGER pOt_i;
#line 66 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 66 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 66 "texts.mod"

#line 66 "texts.mod"
  pOt_i=(pOt_INTEGER)(0);
#line 66 "texts.mod"
  for(;;) {
    pOt_i+=(1);
#line 67 "texts.mod"
    if(((unsigned char) (*((pOt_CHAR*)(((char *)pOt_s+sizeof(pOt__ArrTypDsc*)+sizeof(pOt_CHAR)*pOt__inxchk(__FILE__,__LINE__,(*(pOt_s))->nofel,pOt_i)))))==(unsigned char)'\0')) break;
#line 67 "texts.mod"
  }
#line 67 "texts.mod"
  pOt_WriteBytes_Files((struct pOt__tag_2_Files*)&(*pOt_r),pOt__make_byte_arr((void*)&(*pOt_s),1,0),(pOt_LONGINT)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(1),5)));
#line 69 "texts.mod"

#line 69 "texts.mod"
pOt__Epilogue:;
#line 69 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 69 "texts.mod"
}
#line 69 "texts.mod"

#line 69 "texts.mod"

#line 72 "texts.mod"

#line 72 "texts.mod"

#line 72 "texts.mod"
static void pOt_WrtInt_Texts
#line 72 "texts.mod"
#if pOt__ANSI_C
#line 72 "texts.mod"
  (struct pOt__tag_2_Files *pOt_r, pOt_INTEGER pOt_n)
#line 72 "texts.mod"
#else
#line 72 "texts.mod"
  (pOt_r, pOt_n)
#line 72 "texts.mod"
  struct pOt__tag_2_Files *pOt_r;
#line 72 "texts.mod"
  pOt_INTEGER pOt_n;
#line 72 "texts.mod"

#line 72 "texts.mod"
#endif
#line 72 "texts.mod"
{
#line 72 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 72 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 72 "texts.mod"

#line 72 "texts.mod"
  pOt_Write_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(256),5))));
#line 72 "texts.mod"
  pOt_Write_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_INTEGER)pOt__rngchk_si(__FILE__,__LINE__,(pOt_INTEGER)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(256),5)));

#line 73 "texts.mod"
pOt__Epilogue:;
#line 73 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 73 "texts.mod"
}
#line 73 "texts.mod"

#line 73 "texts.mod"

#line 76 "texts.mod"

#line 76 "texts.mod"

#line 76 "texts.mod"
static void pOt_WrtLong_Texts
#line 76 "texts.mod"
#if pOt__ANSI_C
#line 76 "texts.mod"
  (struct pOt__tag_2_Files *pOt_r, pOt_LONGINT pOt_n)
#line 76 "texts.mod"
#else
#line 76 "texts.mod"
  (pOt_r, pOt_n)
#line 76 "texts.mod"
  struct pOt__tag_2_Files *pOt_r;
#line 76 "texts.mod"
  pOt_LONGINT pOt_n;
#line 76 "texts.mod"

#line 76 "texts.mod"
#endif
#line 76 "texts.mod"
{
#line 76 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 76 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 76 "texts.mod"

#line 76 "texts.mod"
  pOt_Write_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(256),6))));
#line 76 "texts.mod"
  pOt_Write_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(256),6)),(pOt_LONGINT)(256),6))));
#line 76 "texts.mod"
  pOt_Write_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(65536L),6)),(pOt_LONGINT)(256),6))));
  pOt_Write_Files((struct pOt__tag_2_Files*)&(*pOt_r),(pOt_INTEGER)pOt__rngchk_si(__FILE__,__LINE__,(pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(16777216L),6)))));

#line 78 "texts.mod"
pOt__Epilogue:;
#line 78 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 78 "texts.mod"
}
#line 78 "texts.mod"

#line 78 "texts.mod"

#line 83 "texts.mod"

#line 83 "texts.mod"

#line 83 "texts.mod"
extern void pOt_OpenBuf_Texts
#line 83 "texts.mod"
#if pOt__ANSI_C
#line 83 "texts.mod"
  (pOt_Buffer_Texts *pOt_B)
#line 83 "texts.mod"
#else
#line 83 "texts.mod"
  (pOt_B)
#line 83 "texts.mod"
  pOt_Buffer_Texts *pOt_B;
#line 83 "texts.mod"

#line 83 "texts.mod"
#endif
#line 83 "texts.mod"
{
#line 83 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 83 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 83 "texts.mod"

#line 83 "texts.mod"
  pOt__new(__FILE__,__LINE__,(pOt__TypDsc***)&(*pOt_B),(pOt__TypDsc*)&pOt__td_1_Texts);
#line 83 "texts.mod"
  (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_next=(struct pOt__tag_1_Texts*)(pOt_NIL);
#line 83 "texts.mod"
  (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_len=(pOt_LONGINT)(0);

#line 84 "texts.mod"
pOt__Epilogue:;
#line 84 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 84 "texts.mod"
}
#line 84 "texts.mod"

#line 84 "texts.mod"

#line 89 "texts.mod"

#line 89 "texts.mod"
static pOt_File_Files (*pOt_T_Append_Texts);
#line 89 "texts.mod"
static pOt_Buffer_Texts *pOt_B_Append_Texts;
#line 89 "texts.mod"
static struct pOt__tag_2_Files (*pOt_R_Append_Texts);
#line 89 "texts.mod"

#line 89 "texts.mod"
extern void pOt_Append_Texts pOt__ARGS((pOt_File_Files , pOt_Buffer_Texts *));
#line 89 "texts.mod"

#line 89 "texts.mod"

#line 91 "texts.mod"

#line 91 "texts.mod"

#line 91 "texts.mod"
static void pOt_Invert_Append_Texts()
#line 91 "texts.mod"
{
#line 91 "texts.mod"
  pOt_Buffer_Texts pOt_b1, pOt_b2;
#line 91 "texts.mod"
  struct {void *next, *vars[0x3];} pOt__gc_ptrs;
#line 91 "texts.mod"
  struct {void *next, *vars[0x1];} pOt__gc_strs;
#line 91 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 91 "texts.mod"
  pOt__gc_strs.next = &pOt__gc_ptrs;
#line 91 "texts.mod"
  pOt__gc_ptrs.vars[0x2]=pOt_NIL;
#line 91 "texts.mod"
  pOt__gc_strs.vars[0x0]=pOt_NIL;
#line 91 "texts.mod"
  pOt__gc_ptrs.vars[0x1]=&pOt_b1;
#line 91 "texts.mod"
  pOt__gc_ptrs.vars[0x0]=&pOt_b2;
#line 91 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
#line 91 "texts.mod"
  pOt_b1=pOt_NIL;
#line 91 "texts.mod"
  pOt_b2=pOt_NIL;
#line 91 "texts.mod"

#line 91 "texts.mod"
  pOt_b1=(struct pOt__tag_1_Texts*)(pOt_NIL);
#line 91 "texts.mod"
  for(;;) {
    pOt_b2=(struct pOt__tag_1_Texts*)(pOt_b1);
#line 92 "texts.mod"
    pOt_b1=(struct pOt__tag_1_Texts*)((*pOt_B_Append_Texts));
#line 92 "texts.mod"
    (*pOt_B_Append_Texts)=(struct pOt__tag_1_Texts*)((*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B_Append_Texts)))).pOt_next);
#line 92 "texts.mod"
    (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,pOt_b1))).pOt_next=(struct pOt__tag_1_Texts*)(pOt_b2);
#line 92 "texts.mod"
    if(( (*pOt_B_Append_Texts)==pOt_NIL)) break;
#line 92 "texts.mod"
  }
#line 92 "texts.mod"
  (*pOt_B_Append_Texts)=(struct pOt__tag_1_Texts*)(pOt_b1);
#line 94 "texts.mod"

#line 94 "texts.mod"
pOt__Epilogue:;
#line 94 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 94 "texts.mod"
}
#line 94 "texts.mod"

#line 94 "texts.mod"
extern void pOt_Append_Texts
#line 96 "texts.mod"
#if pOt__ANSI_C
#line 96 "texts.mod"
  (pOt_File_Files pOt_T, pOt_Buffer_Texts *pOt_B)
#line 96 "texts.mod"
#else
#line 96 "texts.mod"
  (pOt_T, pOt_B)
#line 96 "texts.mod"
  pOt_File_Files pOt_T;
#line 96 "texts.mod"
  pOt_Buffer_Texts *pOt_B;
#line 96 "texts.mod"

#line 96 "texts.mod"
#endif
#line 96 "texts.mod"
{
#line 96 "texts.mod"
  pOt_File_Files (*pOt_T_);
#line 96 "texts.mod"
  pOt_Buffer_Texts *pOt_B_;
#line 96 "texts.mod"
  struct pOt__tag_2_Files pOt_R, (*pOt_R_);
#line 96 "texts.mod"
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
#line 96 "texts.mod"
  struct {void *next, *vars[0x2];} pOt__gc_strs;
#line 96 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 96 "texts.mod"
  pOt__gc_strs.next = &pOt__gc_ptrs;
#line 96 "texts.mod"
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
#line 96 "texts.mod"
  pOt__gc_strs.vars[0x1]=pOt_NIL;
#line 96 "texts.mod"
  pOt__gc_ptrs.vars[0x0]=&pOt_T;
#line 96 "texts.mod"
  pOt__gc_strs.vars[0x0]=&pOt_R;
#line 96 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
#line 96 "texts.mod"
  pOt_T_=pOt_T_Append_Texts;
#line 96 "texts.mod"
  pOt_T_Append_Texts=&pOt_T;
#line 96 "texts.mod"
  pOt_B_=pOt_B_Append_Texts;
#line 96 "texts.mod"
  pOt_B_Append_Texts=pOt_B;
#line 96 "texts.mod"
  pOt_R_=pOt_R_Append_Texts;
#line 96 "texts.mod"
  pOt_R_Append_Texts=&pOt_R;
#line 96 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_R,(pOt__TypDsc*)&pOt__td_2_Files);
#line 96 "texts.mod"

#line 96 "texts.mod"
  pOt_Set_Files((struct pOt__tag_2_Files*)&pOt_R,(struct pOt__tag_1_Files*)(pOt_T),(pOt_LONGINT)(pOt_Length_Files((struct pOt__tag_1_Files*)(pOt_T))));
#line 96 "texts.mod"
  pOt_Invert_Append_Texts();
#line 96 "texts.mod"
  for(;;) {
    if(( (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_len==((pOt_LONGINT)(0)))) {
#line 97 "texts.mod"
      goto pOt__LoopLabel_1;
#line 97 "texts.mod"
    }
#line 97 "texts.mod"
    pOt_WriteBytes_Files((struct pOt__tag_2_Files*)&pOt_R,pOt__make_byte_arr((void*)&(*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_data,1,0),(pOt_LONGINT)((*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_len));
    if(( (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_next==pOt_NIL)) {
      (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_len=(pOt_LONGINT)(0);
#line 99 "texts.mod"
      goto pOt__LoopLabel_1;
#line 99 "texts.mod"
    }
#line 99 "texts.mod"
    (*pOt_B)=(struct pOt__tag_1_Texts*)((*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_B)))).pOt_next);
#line 101 "texts.mod"
  }
#line 101 "texts.mod"
pOt__LoopLabel_1:;
#line 101 "texts.mod"
  pOt_Set_Files((struct pOt__tag_2_Files*)&pOt_R,(struct pOt__tag_1_Files*)(pOt_T),(pOt_LONGINT)(pOt_Pos_Files((struct pOt__tag_2_Files*)&pOt_R)));
#line 103 "texts.mod"

#line 103 "texts.mod"
pOt__Epilogue:;
#line 103 "texts.mod"
  pOt_T_Append_Texts=pOt_T_;
#line 103 "texts.mod"
  pOt_B_Append_Texts=pOt_B_;
#line 103 "texts.mod"
  pOt_R_Append_Texts=pOt_R_;
#line 103 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 103 "texts.mod"
}
#line 103 "texts.mod"

#line 103 "texts.mod"

#line 108 "texts.mod"

#line 108 "texts.mod"

#line 108 "texts.mod"
extern void pOt_OpenReader_Texts
#line 108 "texts.mod"
#if pOt__ANSI_C
#line 108 "texts.mod"
  (struct pOt__tag_2_Texts *pOt_R, pOt_File_Files pOt_T, pOt_LONGINT pOt_pos)
#line 108 "texts.mod"
#else
#line 108 "texts.mod"
  (pOt_R, pOt_T, pOt_pos)
#line 108 "texts.mod"
  struct pOt__tag_2_Texts *pOt_R;
#line 108 "texts.mod"
  pOt_File_Files pOt_T;
#line 108 "texts.mod"
  pOt_LONGINT pOt_pos;
#line 108 "texts.mod"

#line 108 "texts.mod"
#endif
#line 108 "texts.mod"
{
#line 108 "texts.mod"
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
#line 108 "texts.mod"
  struct {void *next, *vars[0x1];} pOt__gc_strs;
#line 108 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 108 "texts.mod"
  pOt__gc_strs.next = &pOt__gc_ptrs;
#line 108 "texts.mod"
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
#line 108 "texts.mod"
  pOt__gc_strs.vars[0x0]=pOt_NIL;
#line 108 "texts.mod"
  pOt__gc_ptrs.vars[0x0]=&pOt_T;
#line 108 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
#line 108 "texts.mod"

#line 108 "texts.mod"
  pOt_Set_Files((struct pOt__tag_2_Files*)&(*pOt_R),(struct pOt__tag_1_Files*)(pOt_T),(pOt_LONGINT)(pOt_pos));
#line 108 "texts.mod"
  (*pOt_R).pOt_eot=(pOt_BOOLEAN)0;
#line 108 "texts.mod"
  (*pOt_R).pOt_org=(pOt_LONGINT)(pOt_pos);

#line 109 "texts.mod"
pOt__Epilogue:;
#line 109 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 109 "texts.mod"
}
#line 109 "texts.mod"

#line 109 "texts.mod"

#line 112 "texts.mod"

#line 112 "texts.mod"

#line 112 "texts.mod"
extern void pOt_Read_Texts
#line 112 "texts.mod"
#if pOt__ANSI_C
#line 112 "texts.mod"
  (struct pOt__tag_2_Texts *pOt_R, pOt_CHAR *pOt_ch)
#line 112 "texts.mod"
#else
#line 112 "texts.mod"
  (pOt_R, pOt_ch)
#line 112 "texts.mod"
  struct pOt__tag_2_Texts *pOt_R;
#line 112 "texts.mod"
  pOt_CHAR *pOt_ch;
#line 112 "texts.mod"

#line 112 "texts.mod"
#endif
#line 112 "texts.mod"
{
#line 112 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 112 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 112 "texts.mod"

#line 112 "texts.mod"
  pOt_Read_Files((struct pOt__tag_2_Files*)&(*pOt_R),(pOt_BYTE_SYSTEM*)&(*pOt_ch));
#line 112 "texts.mod"
  (*pOt_R).pOt_eot=((*pOt_R).base.pOt_eof||(((unsigned char)(*pOt_ch)==(unsigned char)'\0')));

#line 113 "texts.mod"
pOt__Epilogue:;
#line 113 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 113 "texts.mod"
}
#line 113 "texts.mod"

#line 113 "texts.mod"

#line 116 "texts.mod"

#line 116 "texts.mod"

#line 116 "texts.mod"
extern pOt_LONGINT pOt_Pos_Texts
#line 116 "texts.mod"
#if pOt__ANSI_C
#line 116 "texts.mod"
  (struct pOt__tag_2_Texts *pOt_R)
#line 116 "texts.mod"
#else
#line 116 "texts.mod"
  (pOt_R)
#line 116 "texts.mod"
  struct pOt__tag_2_Texts *pOt_R;
#line 116 "texts.mod"

#line 116 "texts.mod"
#endif
#line 116 "texts.mod"
{
#line 116 "texts.mod"
  pOt_LONGINT pOt__retval;
#line 116 "texts.mod"
  int pOt__gc_enabled_prev;
#line 116 "texts.mod"
  pOt__gc_enabled_prev=pOt__gc_enabled;
#line 116 "texts.mod"
  pOt__gc_enabled=0;
#line 116 "texts.mod"

#line 116 "texts.mod"
  pOt__retval =(pOt_LONGINT)((pOt_LONGINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_Pos_Files((struct pOt__tag_2_Files*)&(*pOt_R))),(pOt_LONGINT)((*pOt_R).pOt_org),6));
  goto pOt__Epilogue;
#line 117 "texts.mod"

#line 117 "texts.mod"
  pOt__halt(__FILE__,__LINE__,0x11);
#line 117 "texts.mod"
pOt__Epilogue:;
#line 117 "texts.mod"
  pOt__gc_enabled=pOt__gc_enabled_prev;
#line 117 "texts.mod"
  return pOt__retval;
#line 117 "texts.mod"
}
#line 117 "texts.mod"

#line 117 "texts.mod"

#line 122 "texts.mod"

#line 122 "texts.mod"

#line 122 "texts.mod"
extern void pOt_OpenScanner_Texts
#line 122 "texts.mod"
#if pOt__ANSI_C
#line 122 "texts.mod"
  (struct pOt__tag_4_Texts *pOt_S, pOt_File_Files pOt_T, pOt_LONGINT pOt_pos)
#line 122 "texts.mod"
#else
#line 122 "texts.mod"
  (pOt_S, pOt_T, pOt_pos)
#line 122 "texts.mod"
  struct pOt__tag_4_Texts *pOt_S;
#line 122 "texts.mod"
  pOt_File_Files pOt_T;
#line 122 "texts.mod"
  pOt_LONGINT pOt_pos;
#line 122 "texts.mod"

#line 122 "texts.mod"
#endif
#line 122 "texts.mod"
{
#line 122 "texts.mod"
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
#line 122 "texts.mod"
  struct {void *next, *vars[0x1];} pOt__gc_strs;
#line 122 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 122 "texts.mod"
  pOt__gc_strs.next = &pOt__gc_ptrs;
#line 122 "texts.mod"
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
#line 122 "texts.mod"
  pOt__gc_strs.vars[0x0]=pOt_NIL;
#line 122 "texts.mod"
  pOt__gc_ptrs.vars[0x0]=&pOt_T;
#line 122 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
#line 122 "texts.mod"

#line 122 "texts.mod"
  pOt_OpenReader_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),(struct pOt__tag_1_Files*)(pOt_T),(pOt_LONGINT)(pOt_pos));
#line 122 "texts.mod"
  (*pOt_S).pOt_line=(pOt_INTEGER)(0);
#line 122 "texts.mod"
  (*pOt_S).pOt_nextCh=' ';

#line 123 "texts.mod"
pOt__Epilogue:;
#line 123 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 123 "texts.mod"
}
#line 123 "texts.mod"

#line 123 "texts.mod"

#line 138 "texts.mod"
struct pOt__tag_6_Texts {
#line 138 "texts.mod"
  pOt__ArrTypDsc *td;
#line 138 "texts.mod"
  pOt_CHAR arr[0x20L];
#line 138 "texts.mod"
} ;
#line 138 "texts.mod"
static pOt__ArrTypDsc pOt__td_6_Texts= {
#line 138 "texts.mod"
  1,
#line 138 "texts.mod"
  0x20L, sizeof(pOt_CHAR)
#line 138 "texts.mod"
};
#line 138 "texts.mod"

#line 138 "texts.mod"
static struct pOt__tag_4_Texts *pOt_S_Scan_Texts;
#line 138 "texts.mod"
static pOt_CHAR (*pOt_ch_Scan_Texts), (*pOt_term_Scan_Texts);
#line 138 "texts.mod"
static pOt_BOOLEAN (*pOt_neg_Scan_Texts), (*pOt_negE_Scan_Texts), (*pOt_hex_Scan_Texts);
#line 138 "texts.mod"
static pOt_SHORTINT (*pOt_i_Scan_Texts), (*pOt_j_Scan_Texts), (*pOt_h_Scan_Texts);
#line 138 "texts.mod"
static pOt_INTEGER (*pOt_e_Scan_Texts);
#line 138 "texts.mod"
static pOt_LONGINT (*pOt_k_Scan_Texts);
#line 138 "texts.mod"
static pOt_REAL (*pOt_x_Scan_Texts), (*pOt_f_Scan_Texts);
#line 138 "texts.mod"
static pOt_LONGREAL (*pOt_y_Scan_Texts), (*pOt_g_Scan_Texts);
#line 138 "texts.mod"
static struct pOt__tag_6_Texts (*pOt_d_Scan_Texts);
#line 138 "texts.mod"

#line 138 "texts.mod"
extern void pOt_Scan_Texts pOt__ARGS((struct pOt__tag_4_Texts *));
#line 138 "texts.mod"

#line 138 "texts.mod"


#line 139 "texts.mod"

#line 139 "texts.mod"
static void pOt_ReadScaleFactor_Scan_Texts()
#line 139 "texts.mod"
{
#line 139 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 139 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 139 "texts.mod"

#line 139 "texts.mod"
  pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S_Scan_Texts),&(*pOt_ch_Scan_Texts));
#line 139 "texts.mod"
  if(((unsigned char) (*pOt_ch_Scan_Texts)==(unsigned char)'-')) {
    (*pOt_negE_Scan_Texts)=(pOt_BOOLEAN)1;
#line 140 "texts.mod"
    pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S_Scan_Texts),&(*pOt_ch_Scan_Texts));
  } else {
#line 141 "texts.mod"
    (*pOt_negE_Scan_Texts)=(pOt_BOOLEAN)0;
#line 141 "texts.mod"
    if(((unsigned char) (*pOt_ch_Scan_Texts)==(unsigned char)'+')) {
      pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S_Scan_Texts),&(*pOt_ch_Scan_Texts));
#line 142 "texts.mod"
    }
#line 142 "texts.mod"
  }
  for(;;) {
    if(((((unsigned char)'0'<=(unsigned char)(*pOt_ch_Scan_Texts)))&&(((unsigned char)(*pOt_ch_Scan_Texts)<=(unsigned char)'9')))); else break;
#line 144 "texts.mod"
    (*pOt_e_Scan_Texts)=(pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_e_Scan_Texts)),(pOt_LONGINT)(10),5)),(pOt_LONGINT)((pOt_INTEGER)((unsigned char)(*pOt_ch_Scan_Texts))),5)),(pOt_LONGINT)(48),5));
    pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S_Scan_Texts),&(*pOt_ch_Scan_Texts));
  }
#line 146 "texts.mod"

pOt__Epilogue:;
#line 147 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 147 "texts.mod"
}
#line 147 "texts.mod"

#line 147 "texts.mod"
extern void pOt_Scan_Texts
#line 149 "texts.mod"
#if pOt__ANSI_C
#line 149 "texts.mod"
  (struct pOt__tag_4_Texts *pOt_S)
#line 149 "texts.mod"
#else
#line 149 "texts.mod"
  (pOt_S)
#line 149 "texts.mod"
  struct pOt__tag_4_Texts *pOt_S;
#line 149 "texts.mod"

#line 149 "texts.mod"
#endif
#line 149 "texts.mod"
{
#line 149 "texts.mod"
  struct pOt__tag_4_Texts *pOt_S_;
#line 149 "texts.mod"
  pOt_CHAR pOt_ch, (*pOt_ch_), pOt_term, (*pOt_term_);
#line 149 "texts.mod"
  pOt_BOOLEAN pOt_neg, (*pOt_neg_), pOt_negE, (*pOt_negE_), pOt_hex, (*pOt_hex_);
#line 149 "texts.mod"
  pOt_SHORTINT pOt_i, (*pOt_i_), pOt_j, (*pOt_j_), pOt_h, (*pOt_h_);
#line 149 "texts.mod"
  pOt_INTEGER pOt_e, (*pOt_e_);
#line 149 "texts.mod"
  pOt_LONGINT pOt_k, (*pOt_k_);
#line 149 "texts.mod"
  pOt_REAL pOt_x, (*pOt_x_), pOt_f, (*pOt_f_);
#line 149 "texts.mod"
  pOt_LONGREAL pOt_y, (*pOt_y_), pOt_g, (*pOt_g_);
#line 149 "texts.mod"
  struct pOt__tag_6_Texts pOt_d, (*pOt_d_);
#line 149 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 149 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 149 "texts.mod"
  pOt_S_=pOt_S_Scan_Texts;
#line 149 "texts.mod"
  pOt_S_Scan_Texts=pOt_S;
#line 149 "texts.mod"
  pOt_ch_=pOt_ch_Scan_Texts;
#line 149 "texts.mod"
  pOt_ch_Scan_Texts=&pOt_ch;
#line 149 "texts.mod"
  pOt_term_=pOt_term_Scan_Texts;
#line 149 "texts.mod"
  pOt_term_Scan_Texts=&pOt_term;
#line 149 "texts.mod"
  pOt_neg_=pOt_neg_Scan_Texts;
#line 149 "texts.mod"
  pOt_neg_Scan_Texts=&pOt_neg;
#line 149 "texts.mod"
  pOt_negE_=pOt_negE_Scan_Texts;
#line 149 "texts.mod"
  pOt_negE_Scan_Texts=&pOt_negE;
#line 149 "texts.mod"
  pOt_hex_=pOt_hex_Scan_Texts;
#line 149 "texts.mod"
  pOt_hex_Scan_Texts=&pOt_hex;
#line 149 "texts.mod"
  pOt_i_=pOt_i_Scan_Texts;
#line 149 "texts.mod"
  pOt_i_Scan_Texts=&pOt_i;
#line 149 "texts.mod"
  pOt_j_=pOt_j_Scan_Texts;
#line 149 "texts.mod"
  pOt_j_Scan_Texts=&pOt_j;
#line 149 "texts.mod"
  pOt_h_=pOt_h_Scan_Texts;
#line 149 "texts.mod"
  pOt_h_Scan_Texts=&pOt_h;
#line 149 "texts.mod"
  pOt_e_=pOt_e_Scan_Texts;
#line 149 "texts.mod"
  pOt_e_Scan_Texts=&pOt_e;
#line 149 "texts.mod"
  pOt_k_=pOt_k_Scan_Texts;
#line 149 "texts.mod"
  pOt_k_Scan_Texts=&pOt_k;
#line 149 "texts.mod"
  pOt_x_=pOt_x_Scan_Texts;
#line 149 "texts.mod"
  pOt_x_Scan_Texts=&pOt_x;
#line 149 "texts.mod"
  pOt_f_=pOt_f_Scan_Texts;
#line 149 "texts.mod"
  pOt_f_Scan_Texts=&pOt_f;
#line 149 "texts.mod"
  pOt_y_=pOt_y_Scan_Texts;
#line 149 "texts.mod"
  pOt_y_Scan_Texts=&pOt_y;
#line 149 "texts.mod"
  pOt_g_=pOt_g_Scan_Texts;
#line 149 "texts.mod"
  pOt_g_Scan_Texts=&pOt_g;
#line 149 "texts.mod"
  pOt_d_=pOt_d_Scan_Texts;
#line 149 "texts.mod"
  pOt_d_Scan_Texts=&pOt_d;
#line 149 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_d,(pOt__TypDsc*)&pOt__td_6_Texts);
#line 149 "texts.mod"

#line 149 "texts.mod"
  pOt_ch=(*pOt_S).pOt_nextCh;
#line 149 "texts.mod"
  pOt_i=0;
#line 149 "texts.mod"
  for(;;) {
#line 151 "texts.mod"
    if(((unsigned char) pOt_ch==(unsigned char)'\12')) {
#line 151 "texts.mod"
      (*pOt_S).pOt_line+=(1);
    } else if(((((unsigned char)pOt_ch!=(unsigned char)' '))&&(((unsigned char)pOt_ch!=(unsigned char)'\11')))) {
#line 152 "texts.mod"
      goto pOt__LoopLabel_1;
    }
#line 153 "texts.mod"
    pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 155 "texts.mod"
  }
#line 155 "texts.mod"
pOt__LoopLabel_1:;
#line 155 "texts.mod"
  if(((((unsigned char)'A'<=(unsigned char)pOt__cap((unsigned char)pOt_ch)))&&(((unsigned char)pOt__cap((unsigned char)pOt_ch)<=(unsigned char)'Z')))) {
#line 157 "texts.mod"
    for(;;) {
#line 157 "texts.mod"
      (*pOt_S).pOt_s.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_i)]=pOt_ch;
#line 157 "texts.mod"
      pOt_i+=(1);
#line 157 "texts.mod"
      pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
      if(((((((unsigned char)pOt__cap((unsigned char)pOt_ch)>(unsigned char)'Z'))||((((unsigned char)'A'>(unsigned char)pOt__cap((unsigned char)pOt_ch)))&&(((unsigned char)pOt_ch>(unsigned char)'9'))))||((((unsigned char)'0'>(unsigned char)pOt_ch))&&(((unsigned char)pOt_ch!=(unsigned char)'.'))))||((pOt_i==31)))) break;
#line 161 "texts.mod"
    }
#line 161 "texts.mod"
    (*pOt_S).pOt_s.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_i)]='\0';
    (*pOt_S).pOt_len=pOt_i;
#line 162 "texts.mod"
    (*pOt_S).pOt_class=(pOt_INTEGER)(1);
  } else if(((unsigned char) pOt_ch==(unsigned char)'\"')) {
    pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 164 "texts.mod"
    for(;;) {
      if((((((unsigned char)pOt_ch!=(unsigned char)'\"'))&&(((unsigned char)pOt_ch>=(unsigned char)' ')))&&((pOt_i!=31)))); else break;
#line 165 "texts.mod"
      (*pOt_S).pOt_s.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_i)]=pOt_ch;
      pOt_i+=(1);
#line 166 "texts.mod"
      pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
    }
#line 167 "texts.mod"
    (*pOt_S).pOt_s.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_i)]='\0';
    (*pOt_S).pOt_len=(pOt_SHORTINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(1),4);
#line 168 "texts.mod"
    pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 168 "texts.mod"
    (*pOt_S).pOt_class=(pOt_INTEGER)(2);
  } else {
    if(((unsigned char) pOt_ch==(unsigned char)'-')) {
#line 170 "texts.mod"
      pOt_neg=(pOt_BOOLEAN)1;
#line 170 "texts.mod"
      pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 170 "texts.mod"
    } else {
#line 170 "texts.mod"
      pOt_neg=(pOt_BOOLEAN)0;
#line 170 "texts.mod"
    }
#line 170 "texts.mod"
    if(((((unsigned char)'0'<=(unsigned char)pOt_ch))&&(((unsigned char)pOt_ch<=(unsigned char)'9')))) {
#line 172 "texts.mod"
      pOt_hex=(pOt_BOOLEAN)0;
#line 172 "texts.mod"
      pOt_j=0;
#line 172 "texts.mod"
      for(;;) {
        pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_i)]=pOt_ch;
#line 173 "texts.mod"
        pOt_i+=(1);
#line 173 "texts.mod"
        pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 173 "texts.mod"
        if(((unsigned char) pOt_ch<(unsigned char)'0')) {
          goto pOt__LoopLabel_2;
#line 174 "texts.mod"
        }
#line 174 "texts.mod"
        if(((unsigned char) '9'<(unsigned char)pOt_ch)) {
#line 176 "texts.mod"
          if(((((unsigned char)'A'<=(unsigned char)pOt_ch))&&(((unsigned char)pOt_ch<=(unsigned char)'F')))) {
#line 176 "texts.mod"
            pOt_hex=(pOt_BOOLEAN)1;
#line 176 "texts.mod"
            pOt_ch=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_ch)),(pOt_LONGINT)(7),5)));
          } else if(((((unsigned char)'a'<=(unsigned char)pOt_ch))&&(((unsigned char)pOt_ch<=(unsigned char)'f')))) {
#line 177 "texts.mod"
            pOt_hex=(pOt_BOOLEAN)1;
#line 177 "texts.mod"
            pOt_ch=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_ch)),(pOt_LONGINT)(39),5)));
          } else {
#line 178 "texts.mod"
            goto pOt__LoopLabel_2;
          }
#line 179 "texts.mod"
        }
      }
    pOt__LoopLabel_2:;
#line 181 "texts.mod"
      if(((unsigned char) pOt_ch==(unsigned char)'H')) {
#line 183 "texts.mod"
        pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 183 "texts.mod"
        (*pOt_S).pOt_class=(pOt_INTEGER)(3);
#line 183 "texts.mod"
        if(( (pOt_SHORTINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(pOt_j),4)>8)) {
          pOt_j=(pOt_SHORTINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(8),4);
#line 184 "texts.mod"
        }
#line 184 "texts.mod"
        pOt_k=(pOt_LONGINT)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_j)])),(pOt_LONGINT)(48),5));
        pOt_j+=(1);
#line 185 "texts.mod"
        if(((((pOt_SHORTINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(pOt_j),4)==7))&&((pOt_k>=((pOt_LONGINT)(8)))))) {
          pOt_k-=(16);
#line 186 "texts.mod"
        }
#line 186 "texts.mod"
        for(;;) {
          if(( pOt_j<pOt_i)); else break;
#line 187 "texts.mod"
          pOt_k=(pOt_LONGINT)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(16),6)),(pOt_LONGINT)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_j)])),(pOt_LONGINT)(48),5))),6));
#line 187 "texts.mod"
          pOt_j+=(1);
#line 187 "texts.mod"
        }
#line 187 "texts.mod"
        if(pOt_neg) {
          (*pOt_S).pOt_i=(pOt_LONGINT)(-pOt_k);
#line 188 "texts.mod"
        } else {
#line 188 "texts.mod"
          (*pOt_S).pOt_i=(pOt_LONGINT)(pOt_k);
#line 188 "texts.mod"
        }
#line 188 "texts.mod"
      } else if(((unsigned char) pOt_ch==(unsigned char)'.')) {
#line 190 "texts.mod"
        pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 190 "texts.mod"
        pOt_h=pOt_i;
#line 190 "texts.mod"
        for(;;) {
          if(((((unsigned char)'0'<=(unsigned char)pOt_ch))&&(((unsigned char)pOt_ch<=(unsigned char)'9')))); else break;
#line 191 "texts.mod"
          pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_i)]=pOt_ch;
#line 191 "texts.mod"
          pOt_i+=(1);
#line 191 "texts.mod"
          pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 191 "texts.mod"
        }
#line 191 "texts.mod"
        if(((unsigned char) pOt_ch==(unsigned char)'D')) {
#line 193 "texts.mod"
          pOt_e=(pOt_INTEGER)(0);
#line 193 "texts.mod"
          pOt_y=(pOt_LONGREAL)(0);
#line 193 "texts.mod"
          pOt_g=(pOt_LONGREAL)(1);
#line 193 "texts.mod"
          for(;;) {
            pOt_y=(pOt_LONGREAL)(pOt_y*((pOt_LONGREAL)(10))+((pOt_LONGREAL)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_j)])),(pOt_LONGINT)(48),5)))));
#line 194 "texts.mod"
            pOt_j+=(1);
#line 194 "texts.mod"
            if(( pOt_j==pOt_h)) break;
#line 194 "texts.mod"
          }
#line 194 "texts.mod"
          for(;;) {
            if(( pOt_j<pOt_i)); else break;
#line 195 "texts.mod"
            pOt_g=(pOt_LONGREAL)(pOt_g/((pOt_LONGREAL)(10)));
#line 195 "texts.mod"
            pOt_y=(pOt_LONGREAL)(((pOt_LONGREAL)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_j)])),(pOt_LONGINT)(48),5))))*pOt_g+pOt_y);
#line 195 "texts.mod"
            pOt_j+=(1);
#line 195 "texts.mod"
          }
#line 195 "texts.mod"
          pOt_ReadScaleFactor_Scan_Texts();
          if(pOt_negE) {
#line 198 "texts.mod"
            if(( pOt_e<=308)) {
#line 198 "texts.mod"
              pOt_y=(pOt_LONGREAL)(pOt_y/pOt_TenL_Reals((pOt_INTEGER)(pOt_e)));
#line 198 "texts.mod"
            } else {
#line 198 "texts.mod"
              pOt_y=(pOt_LONGREAL)(0);
#line 198 "texts.mod"
            }
#line 198 "texts.mod"
          } else if(( pOt_e>((pOt_INTEGER)(0)))) {
#line 200 "texts.mod"
            if(( pOt_e<=308)) {
#line 200 "texts.mod"
              pOt_y=(pOt_LONGREAL)(pOt_TenL_Reals((pOt_INTEGER)(pOt_e))*pOt_y);
#line 200 "texts.mod"
            } else {
#line 200 "texts.mod"
              pOt__halt(__FILE__,__LINE__,40);
#line 200 "texts.mod"
            }
#line 200 "texts.mod"
          }
          if(pOt_neg) {
            pOt_y=(pOt_LONGREAL)(-pOt_y);
#line 202 "texts.mod"
          }
#line 202 "texts.mod"
          (*pOt_S).pOt_class=(pOt_INTEGER)(5);
          (*pOt_S).pOt_y=(pOt_LONGREAL)(pOt_y);
        } else {
#line 204 "texts.mod"
          pOt_e=(pOt_INTEGER)(0);
#line 204 "texts.mod"
          pOt_x=(pOt_REAL)(0);
#line 204 "texts.mod"
          pOt_f=(pOt_REAL)(1);
#line 204 "texts.mod"
          for(;;) {
            pOt_x=(pOt_REAL)(pOt_x*((pOt_REAL)(10))+((pOt_REAL)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_j)])),(pOt_LONGINT)(48),5)))));
#line 205 "texts.mod"
            pOt_j+=(1);
#line 205 "texts.mod"
            if(( pOt_j==pOt_h)) break;
#line 205 "texts.mod"
          }
#line 205 "texts.mod"
          for(;;) {
            if(( pOt_j<pOt_i)); else break;
#line 206 "texts.mod"
            pOt_f=(pOt_REAL)(pOt_f/((pOt_REAL)(10)));
#line 206 "texts.mod"
            pOt_x=(pOt_REAL)(((pOt_REAL)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_j)])),(pOt_LONGINT)(48),5))))*pOt_f+pOt_x);
#line 206 "texts.mod"
            pOt_j+=(1);
#line 206 "texts.mod"
          }
#line 206 "texts.mod"
          if(((unsigned char) pOt_ch==(unsigned char)'E')) {
            pOt_ReadScaleFactor_Scan_Texts();
#line 207 "texts.mod"
          }
#line 207 "texts.mod"
          if(pOt_negE) {
#line 209 "texts.mod"
            if(( pOt_e<=((pOt_INTEGER)(38)))) {
#line 209 "texts.mod"
              pOt_x=(pOt_REAL)(pOt_x/pOt_Ten_Reals((pOt_INTEGER)(pOt_e)));
#line 209 "texts.mod"
            } else {
#line 209 "texts.mod"
              pOt_x=(pOt_REAL)(0);
#line 209 "texts.mod"
            }
#line 209 "texts.mod"
          } else if(( pOt_e>((pOt_INTEGER)(0)))) {
#line 211 "texts.mod"
            if(( pOt_e<=((pOt_INTEGER)(38)))) {
#line 211 "texts.mod"
              pOt_x=(pOt_REAL)(pOt_Ten_Reals((pOt_INTEGER)(pOt_e))*pOt_x);
#line 211 "texts.mod"
            } else {
#line 211 "texts.mod"
              pOt__halt(__FILE__,__LINE__,40);
#line 211 "texts.mod"
            }
#line 211 "texts.mod"
          }
          if(pOt_neg) {
            pOt_x=(pOt_REAL)(-pOt_x);
#line 213 "texts.mod"
          }
#line 213 "texts.mod"
          (*pOt_S).pOt_class=(pOt_INTEGER)(4);
          (*pOt_S).pOt_x=(pOt_REAL)(pOt_x);
        }
#line 215 "texts.mod"
        if(pOt_hex) {
          (*pOt_S).pOt_class=(pOt_INTEGER)(0);
#line 216 "texts.mod"
        }
#line 216 "texts.mod"
      } else {
#line 218 "texts.mod"
        (*pOt_S).pOt_class=(pOt_INTEGER)(3);
#line 218 "texts.mod"
        pOt_k=(pOt_LONGINT)(0);
#line 218 "texts.mod"
        for(;;) {
          pOt_k=(pOt_LONGINT)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(10),6)),(pOt_LONGINT)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x20, pOt_j)])),(pOt_LONGINT)(48),5))),6));
#line 219 "texts.mod"
          pOt_j+=(1);
#line 219 "texts.mod"
          if(( pOt_j==pOt_i)) break;
#line 219 "texts.mod"
        }
#line 219 "texts.mod"
        if(pOt_neg) {
          (*pOt_S).pOt_i=(pOt_LONGINT)(-pOt_k);
#line 220 "texts.mod"
        } else {
#line 220 "texts.mod"
          (*pOt_S).pOt_i=(pOt_LONGINT)(pOt_k);
#line 220 "texts.mod"
        }
#line 220 "texts.mod"
        if(pOt_hex) {
          (*pOt_S).pOt_class=(pOt_INTEGER)(0);
#line 221 "texts.mod"
        } else {
#line 221 "texts.mod"
          (*pOt_S).pOt_class=(pOt_INTEGER)(3);
#line 221 "texts.mod"
        }
#line 221 "texts.mod"
      }
    } else {
      (*pOt_S).pOt_class=(pOt_INTEGER)(6);
#line 223 "texts.mod"
      if(pOt_neg) {
        (*pOt_S).pOt_c='-';
#line 224 "texts.mod"
      } else {
#line 224 "texts.mod"
        (*pOt_S).pOt_c=pOt_ch;
#line 224 "texts.mod"
        pOt_Read_Texts((struct pOt__tag_2_Texts*)&(*pOt_S),&pOt_ch);
#line 224 "texts.mod"
      }
#line 224 "texts.mod"
    }
  }
  (*pOt_S).pOt_nextCh=pOt_ch;
#line 228 "texts.mod"

#line 228 "texts.mod"
pOt__Epilogue:;
#line 228 "texts.mod"
  pOt_S_Scan_Texts=pOt_S_;
#line 228 "texts.mod"
  pOt_ch_Scan_Texts=pOt_ch_;
#line 228 "texts.mod"
  pOt_term_Scan_Texts=pOt_term_;
#line 228 "texts.mod"
  pOt_neg_Scan_Texts=pOt_neg_;
#line 228 "texts.mod"
  pOt_negE_Scan_Texts=pOt_negE_;
#line 228 "texts.mod"
  pOt_hex_Scan_Texts=pOt_hex_;
#line 228 "texts.mod"
  pOt_i_Scan_Texts=pOt_i_;
#line 228 "texts.mod"
  pOt_j_Scan_Texts=pOt_j_;
#line 228 "texts.mod"
  pOt_h_Scan_Texts=pOt_h_;
#line 228 "texts.mod"
  pOt_e_Scan_Texts=pOt_e_;
#line 228 "texts.mod"
  pOt_k_Scan_Texts=pOt_k_;
#line 228 "texts.mod"
  pOt_x_Scan_Texts=pOt_x_;
#line 228 "texts.mod"
  pOt_f_Scan_Texts=pOt_f_;
#line 228 "texts.mod"
  pOt_y_Scan_Texts=pOt_y_;
#line 228 "texts.mod"
  pOt_g_Scan_Texts=pOt_g_;
#line 228 "texts.mod"
  pOt_d_Scan_Texts=pOt_d_;
#line 228 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 228 "texts.mod"
}
#line 228 "texts.mod"

#line 228 "texts.mod"

#line 233 "texts.mod"

#line 233 "texts.mod"

#line 233 "texts.mod"
extern void pOt_OpenWriter_Texts
#line 233 "texts.mod"
#if pOt__ANSI_C
#line 233 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W)
#line 233 "texts.mod"
#else
#line 233 "texts.mod"
  (pOt_W)
#line 233 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 233 "texts.mod"

#line 233 "texts.mod"
#endif
#line 233 "texts.mod"
{
#line 233 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 233 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 233 "texts.mod"

#line 233 "texts.mod"
  pOt_OpenBuf_Texts(&(*pOt_W).pOt_buf);

#line 234 "texts.mod"
pOt__Epilogue:;
#line 234 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 234 "texts.mod"
}
#line 234 "texts.mod"

#line 234 "texts.mod"

#line 238 "texts.mod"

#line 238 "texts.mod"

#line 238 "texts.mod"
extern void pOt_Write_Texts
#line 238 "texts.mod"
#if pOt__ANSI_C
#line 238 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_CHAR pOt_ch)
#line 238 "texts.mod"
#else
#line 238 "texts.mod"
  (pOt_W, pOt_ch)
#line 238 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 238 "texts.mod"
  pOt_CHAR pOt_ch;
#line 238 "texts.mod"

#line 238 "texts.mod"
#endif
#line 238 "texts.mod"
{
#line 238 "texts.mod"
  pOt_Buffer_Texts pOt_B;
#line 238 "texts.mod"
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
#line 238 "texts.mod"
  struct {void *next, *vars[0x1];} pOt__gc_strs;
#line 238 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 238 "texts.mod"
  pOt__gc_strs.next = &pOt__gc_ptrs;
#line 238 "texts.mod"
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
#line 238 "texts.mod"
  pOt__gc_strs.vars[0x0]=pOt_NIL;
#line 238 "texts.mod"
  pOt__gc_ptrs.vars[0x0]=&pOt_B;
#line 238 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
#line 238 "texts.mod"
  pOt_B=pOt_NIL;
#line 238 "texts.mod"

#line 238 "texts.mod"
  if(( (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_W).pOt_buf))).pOt_len==((pOt_LONGINT)(512)))) {
#line 238 "texts.mod"
    pOt_OpenBuf_Texts(&pOt_B);
#line 238 "texts.mod"
    (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,pOt_B))).pOt_next=(struct pOt__tag_1_Texts*)((*pOt_W).pOt_buf);
#line 238 "texts.mod"
    (*pOt_W).pOt_buf=(struct pOt__tag_1_Texts*)(pOt_B);
#line 238 "texts.mod"
  }
#line 238 "texts.mod"
  (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_W).pOt_buf))).pOt_data.arr[pOt__inxchk(__FILE__,__LINE__,0x200, (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_W).pOt_buf))).pOt_len)]=pOt_ch;
  (*((struct pOt__tag_1_Texts*)pOt__nilchk(__FILE__,__LINE__,(*pOt_W).pOt_buf))).pOt_len+=(1);

#line 240 "texts.mod"
pOt__Epilogue:;
#line 240 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 240 "texts.mod"
}
#line 240 "texts.mod"

#line 240 "texts.mod"

#line 243 "texts.mod"

#line 243 "texts.mod"

#line 243 "texts.mod"
extern void pOt_WriteLn_Texts
#line 243 "texts.mod"
#if pOt__ANSI_C
#line 243 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W)
#line 243 "texts.mod"
#else
#line 243 "texts.mod"
  (pOt_W)
#line 243 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 243 "texts.mod"

#line 243 "texts.mod"
#endif
#line 243 "texts.mod"
{
#line 243 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 243 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 243 "texts.mod"

#line 243 "texts.mod"
  pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'\12');

#line 244 "texts.mod"
pOt__Epilogue:;
#line 244 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 244 "texts.mod"
}
#line 244 "texts.mod"

#line 244 "texts.mod"

#line 248 "texts.mod"

#line 248 "texts.mod"

#line 248 "texts.mod"
extern void pOt_WriteString_Texts
#line 248 "texts.mod"
#if pOt__ANSI_C
#line 248 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt__DynArr *pOt_s)
#line 248 "texts.mod"
#else
#line 248 "texts.mod"
  (pOt_W, pOt_s)
#line 248 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 248 "texts.mod"
  pOt__DynArr *pOt_s;
#line 248 "texts.mod"

#line 248 "texts.mod"
#endif
#line 248 "texts.mod"
{
#line 248 "texts.mod"
  pOt_INTEGER pOt_i;
#line 248 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 248 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 248 "texts.mod"

#line 248 "texts.mod"
  pOt_i=(pOt_INTEGER)(0);
#line 248 "texts.mod"
  for(;;) {
    if(((unsigned char) (*((pOt_CHAR*)(((char *)pOt_s+sizeof(pOt__ArrTypDsc*)+sizeof(pOt_CHAR)*pOt__inxchk(__FILE__,__LINE__,(*(pOt_s))->nofel,pOt_i)))))>=(unsigned char)' ')); else break;
#line 249 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),(*((pOt_CHAR*)(((char *)pOt_s+sizeof(pOt__ArrTypDsc*)+sizeof(pOt_CHAR)*pOt__inxchk(__FILE__,__LINE__,(*(pOt_s))->nofel,pOt_i))))));
#line 249 "texts.mod"
    pOt_i+=(1);
#line 249 "texts.mod"
  }
#line 249 "texts.mod"

pOt__Epilogue:;
#line 250 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 250 "texts.mod"
  pOt__rm_par((pOt__TypDsc**)pOt_s);
#line 250 "texts.mod"
}
#line 250 "texts.mod"

#line 250 "texts.mod"

#line 255 "texts.mod"
struct pOt__tag_7_Texts {
#line 255 "texts.mod"
  pOt__ArrTypDsc *td;
#line 255 "texts.mod"
  pOt_CHAR arr[0xBL];
#line 255 "texts.mod"
} ;
#line 255 "texts.mod"
static pOt__ArrTypDsc pOt__td_7_Texts= {
#line 255 "texts.mod"
  1,
#line 255 "texts.mod"
  0xBL, sizeof(pOt_CHAR)
#line 255 "texts.mod"
};
#line 255 "texts.mod"

#line 255 "texts.mod"

#line 255 "texts.mod"
extern void pOt_WriteInt_Texts
#line 255 "texts.mod"
#if pOt__ANSI_C
#line 255 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_LONGINT pOt_x, pOt_LONGINT pOt_n)
#line 255 "texts.mod"
#else
#line 255 "texts.mod"
  (pOt_W, pOt_x, pOt_n)
#line 255 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 255 "texts.mod"
  pOt_LONGINT pOt_x, pOt_n;
#line 255 "texts.mod"

#line 255 "texts.mod"
#endif
#line 255 "texts.mod"
{
#line 255 "texts.mod"
  pOt_INTEGER pOt_i;
#line 255 "texts.mod"
  pOt_LONGINT pOt_x0;
#line 255 "texts.mod"
  struct pOt__tag_7_Texts pOt_a;
#line 255 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 255 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 255 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_a,(pOt__TypDsc*)&pOt__td_7_Texts);
#line 255 "texts.mod"

#line 255 "texts.mod"
  pOt_i=(pOt_INTEGER)(0);
#line 255 "texts.mod"
  if(( pOt_x<((pOt_LONGINT)(0)))) {
#line 257 "texts.mod"
    if(( pOt_x==(pOt_LONGINT)0x80000000L)) {
#line 257 "texts.mod"
      pOt_WriteString_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x0L],&pOt__str_td[0xC]))));
#line 257 "texts.mod"
      goto pOt__Epilogue;
    } else {
#line 258 "texts.mod"
      pOt_n-=(1);
#line 258 "texts.mod"
      pOt_x0=(pOt_LONGINT)(-pOt_x);
    }
#line 259 "texts.mod"
  } else {
    pOt_x0=(pOt_LONGINT)(pOt_x);
  }
#line 261 "texts.mod"
  for(;;) {
#line 263 "texts.mod"
    pOt_a.arr[pOt__inxchk(__FILE__,__LINE__,0xB, pOt_i)]=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_x0),(pOt_LONGINT)(10),6)),(pOt_LONGINT)(48),6)));
#line 263 "texts.mod"
    pOt_x0=(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_x0),(pOt_LONGINT)(10),6));
#line 263 "texts.mod"
    pOt_i+=(1);
    if(( pOt_x0==((pOt_LONGINT)(0)))) break;
#line 264 "texts.mod"
  }
#line 264 "texts.mod"
  for(;;) {
    if(( pOt_n>((pOt_LONGINT)(pOt_i)))); else break;
#line 265 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 265 "texts.mod"
    pOt_n-=(1);
#line 265 "texts.mod"
  }
#line 265 "texts.mod"
  if(( pOt_x<((pOt_LONGINT)(0)))) {
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'-');
#line 266 "texts.mod"
  }
#line 266 "texts.mod"
  for(;;) {
    pOt_i-=(1);
#line 267 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_a.arr[pOt__inxchk(__FILE__,__LINE__,0xB, pOt_i)]);
#line 267 "texts.mod"
    if(( pOt_i==((pOt_INTEGER)(0)))) break;
  }
#line 268 "texts.mod"

#line 268 "texts.mod"
pOt__Epilogue:;
#line 268 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 268 "texts.mod"
}
#line 268 "texts.mod"

#line 268 "texts.mod"

#line 273 "texts.mod"
struct pOt__tag_8_Texts {
#line 273 "texts.mod"
  pOt__ArrTypDsc *td;
#line 273 "texts.mod"
  pOt_CHAR arr[0xAL];
#line 273 "texts.mod"
} ;
#line 273 "texts.mod"
static pOt__ArrTypDsc pOt__td_8_Texts= {
#line 273 "texts.mod"
  1,
#line 273 "texts.mod"
  0xAL, sizeof(pOt_CHAR)
#line 273 "texts.mod"
};
#line 273 "texts.mod"

#line 273 "texts.mod"

#line 273 "texts.mod"
extern void pOt_WriteHex_Texts
#line 273 "texts.mod"
#if pOt__ANSI_C
#line 273 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_LONGINT pOt_x)
#line 273 "texts.mod"
#else
#line 273 "texts.mod"
  (pOt_W, pOt_x)
#line 273 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 273 "texts.mod"
  pOt_LONGINT pOt_x;
#line 273 "texts.mod"

#line 273 "texts.mod"
#endif
#line 273 "texts.mod"
{
#line 273 "texts.mod"
  pOt_INTEGER pOt_i;
#line 273 "texts.mod"
  pOt_LONGINT pOt_y;
#line 273 "texts.mod"
  struct pOt__tag_8_Texts pOt_a;
#line 273 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 273 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 273 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_a,(pOt__TypDsc*)&pOt__td_8_Texts);
#line 273 "texts.mod"

#line 273 "texts.mod"
  pOt_i=(pOt_INTEGER)(0);
#line 273 "texts.mod"
  pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 273 "texts.mod"
  for(;;) {
    pOt_y=(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_x),(pOt_LONGINT)(16),6));
#line 274 "texts.mod"
    if(( pOt_y<((pOt_LONGINT)(10)))) {
      pOt_a.arr[pOt__inxchk(__FILE__,__LINE__,0xA, pOt_i)]=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_y),(pOt_LONGINT)(48),6)));
#line 275 "texts.mod"
    } else {
#line 275 "texts.mod"
      pOt_a.arr[pOt__inxchk(__FILE__,__LINE__,0xA, pOt_i)]=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_y),(pOt_LONGINT)(55),6)));
#line 275 "texts.mod"
    }
#line 275 "texts.mod"
    pOt_x=(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_x),(pOt_LONGINT)(16),6));
    pOt_i+=(1);
    if(( pOt_i==((pOt_INTEGER)(8)))) break;
#line 277 "texts.mod"
  }
#line 277 "texts.mod"
  for(;;) {
    pOt_i-=(1);
#line 278 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_a.arr[pOt__inxchk(__FILE__,__LINE__,0xA, pOt_i)]);
#line 278 "texts.mod"
    if(( pOt_i==((pOt_INTEGER)(0)))) break;
  }
#line 279 "texts.mod"

#line 279 "texts.mod"
pOt__Epilogue:;
#line 279 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 279 "texts.mod"
}
#line 279 "texts.mod"

#line 279 "texts.mod"

#line 284 "texts.mod"
struct pOt__tag_9_Texts {
#line 284 "texts.mod"
  pOt__ArrTypDsc *td;
#line 284 "texts.mod"
  pOt_CHAR arr[0x9L];
#line 284 "texts.mod"
} ;
#line 284 "texts.mod"
static pOt__ArrTypDsc pOt__td_9_Texts= {
#line 284 "texts.mod"
  1,
#line 284 "texts.mod"
  0x9L, sizeof(pOt_CHAR)
#line 284 "texts.mod"
};
#line 284 "texts.mod"

#line 284 "texts.mod"

#line 284 "texts.mod"
extern void pOt_WriteReal_Texts
#line 284 "texts.mod"
#if pOt__ANSI_C
#line 284 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_REAL pOt_x, pOt_INTEGER pOt_n)
#line 284 "texts.mod"
#else
#line 284 "texts.mod"
  (pOt_W, pOt_x, pOt_n)
#line 284 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 284 "texts.mod"
  pOt_REAL pOt_x;
#line 284 "texts.mod"
  pOt_INTEGER pOt_n;
#line 284 "texts.mod"

#line 284 "texts.mod"
#endif
#line 284 "texts.mod"
{
#line 284 "texts.mod"
  pOt_INTEGER pOt_e;
#line 284 "texts.mod"
  pOt_REAL pOt_x0;
#line 284 "texts.mod"
  struct pOt__tag_9_Texts pOt_d;
#line 284 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 284 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 284 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_d,(pOt__TypDsc*)&pOt__td_9_Texts);
#line 284 "texts.mod"

#line 284 "texts.mod"
  pOt_e=(pOt_INTEGER)(pOt_Expo_Reals((pOt_REAL)(pOt_x)));
#line 284 "texts.mod"
  if(( pOt_e==((pOt_INTEGER)(0)))) {
#line 286 "texts.mod"
    pOt_WriteString_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x14L],&pOt__str_td[0x3]))));
#line 286 "texts.mod"
    for(;;) {
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 287 "texts.mod"
      pOt_n-=(1);
#line 287 "texts.mod"
      if(( pOt_n<=((pOt_INTEGER)(3)))) break;
    }
#line 288 "texts.mod"
  } else if(( pOt_e==255)) {
    pOt_WriteString_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1CL],&pOt__str_td[0x4]))));
#line 289 "texts.mod"
    for(;;) {
      if(( pOt_n>((pOt_INTEGER)(4)))); else break;
#line 290 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 290 "texts.mod"
      pOt_n-=(1);
#line 290 "texts.mod"
    }
#line 290 "texts.mod"
  } else {
#line 292 "texts.mod"
    if(( pOt_n<=((pOt_INTEGER)(9)))) {
#line 292 "texts.mod"
      pOt_n=(pOt_INTEGER)(3);
#line 292 "texts.mod"
    } else {
#line 292 "texts.mod"
      pOt_n-=(6);
#line 292 "texts.mod"
    }
#line 292 "texts.mod"
    for(;;) {
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 293 "texts.mod"
      pOt_n-=(1);
#line 293 "texts.mod"
      if(( pOt_n<=((pOt_INTEGER)(8)))) break;
#line 293 "texts.mod"
    }
#line 293 "texts.mod"
    if(( pOt_x<(pOt_REAL)0.0)) {
#line 295 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'-');
#line 295 "texts.mod"
      pOt_x=(pOt_REAL)(-pOt_x);
#line 295 "texts.mod"
    } else {
#line 295 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 295 "texts.mod"
    }
#line 295 "texts.mod"
    pOt_e=(pOt_INTEGER)((pOt_INTEGER)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(127),5))),(pOt_LONGINT)(77),5)),(pOt_LONGINT)(256),5));
    if(( pOt_e>=((pOt_INTEGER)(0)))) {
      pOt_x=(pOt_REAL)(pOt_x/pOt_Ten_Reals((pOt_INTEGER)(pOt_e)));
#line 297 "texts.mod"
    } else {
#line 297 "texts.mod"
      pOt_x=(pOt_REAL)(pOt_Ten_Reals((pOt_INTEGER)(-pOt_e))*pOt_x);
#line 297 "texts.mod"
    }
#line 297 "texts.mod"
    if(( pOt_x>=(pOt_REAL)1.0000000E1)) {
      pOt_x=(pOt_REAL)((pOt_REAL)1.0000000E-1*pOt_x);
#line 298 "texts.mod"
      pOt_e+=(1);
#line 298 "texts.mod"
    }
#line 298 "texts.mod"
    pOt_x0=(pOt_REAL)(pOt_Ten_Reals((pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(1),5))));
    pOt_x=(pOt_REAL)(pOt_x0*pOt_x+(pOt_REAL)5.0000000E-1);
#line 299 "texts.mod"
    if(( pOt_x>=(pOt_REAL)1.0000000E1*pOt_x0)) {
      pOt_x=(pOt_REAL)(pOt_x*(pOt_REAL)1.0000000E-1);
#line 300 "texts.mod"
      pOt_e+=(1);
#line 300 "texts.mod"
    }
#line 300 "texts.mod"
    pOt_Convert_Reals((pOt_REAL)(pOt_x),(pOt_INTEGER)(pOt_n),(pOt__ArrTypDsc**)&pOt_d);
    pOt_n-=(1);
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x9, pOt_n)]);
#line 302 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'.');
#line 302 "texts.mod"
    for(;;) {
      pOt_n-=(1);
#line 303 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x9, pOt_n)]);
#line 303 "texts.mod"
      if(( pOt_n==((pOt_INTEGER)(0)))) break;
#line 303 "texts.mod"
    }
#line 303 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'E');
    if(( pOt_e<((pOt_INTEGER)(0)))) {
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'-');
#line 305 "texts.mod"
      pOt_e=(pOt_INTEGER)(-pOt_e);
#line 305 "texts.mod"
    } else {
#line 305 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'+');
#line 305 "texts.mod"
    }
#line 305 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(10),5)),(pOt_LONGINT)(48),5))));
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(10),5)),(pOt_LONGINT)(48),5))));
  }
#line 307 "texts.mod"

pOt__Epilogue:;
#line 308 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 308 "texts.mod"
}
#line 308 "texts.mod"

#line 308 "texts.mod"

#line 314 "texts.mod"
struct pOt__tag_A_Texts {
#line 314 "texts.mod"
  pOt__ArrTypDsc *td;
#line 314 "texts.mod"
  pOt_CHAR arr[0x9L];
#line 314 "texts.mod"
} ;
#line 314 "texts.mod"
static pOt__ArrTypDsc pOt__td_A_Texts= {
#line 314 "texts.mod"
  1,
#line 314 "texts.mod"
  0x9L, sizeof(pOt_CHAR)
#line 314 "texts.mod"
};
#line 314 "texts.mod"

#line 314 "texts.mod"
static struct pOt__tag_5_Texts *pOt_W_WriteRealFix_Texts;
#line 314 "texts.mod"
static pOt_REAL (*pOt_x_WriteRealFix_Texts);
#line 314 "texts.mod"
static pOt_INTEGER (*pOt_n_WriteRealFix_Texts), (*pOt_k_WriteRealFix_Texts), (*pOt_e_WriteRealFix_Texts), (*pOt_i_WriteRealFix_Texts);
#line 314 "texts.mod"
static pOt_CHAR (*pOt_sign_WriteRealFix_Texts);
#line 314 "texts.mod"
static pOt_REAL (*pOt_x0_WriteRealFix_Texts);
#line 314 "texts.mod"
static struct pOt__tag_A_Texts (*pOt_d_WriteRealFix_Texts);
#line 314 "texts.mod"

#line 314 "texts.mod"
extern void pOt_WriteRealFix_Texts pOt__ARGS((struct pOt__tag_5_Texts *, pOt_REAL , pOt_INTEGER , pOt_INTEGER ));
#line 314 "texts.mod"

#line 314 "texts.mod"


#line 315 "texts.mod"

#line 315 "texts.mod"
static void pOt_seq_WriteRealFix_Texts
#line 315 "texts.mod"
#if pOt__ANSI_C
#line 315 "texts.mod"
  (pOt_CHAR pOt_ch, pOt_INTEGER pOt_n)
#line 315 "texts.mod"
#else
#line 315 "texts.mod"
  (pOt_ch, pOt_n)
#line 315 "texts.mod"
  pOt_CHAR pOt_ch;
#line 315 "texts.mod"
  pOt_INTEGER pOt_n;
#line 315 "texts.mod"

#line 315 "texts.mod"
#endif
#line 315 "texts.mod"
{
#line 315 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 315 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 315 "texts.mod"

#line 315 "texts.mod"
  for(;;) {
#line 315 "texts.mod"
    if(( pOt_n>((pOt_INTEGER)(0)))); else break;
#line 315 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W_WriteRealFix_Texts),pOt_ch);
#line 315 "texts.mod"
    pOt_n-=(1);
#line 315 "texts.mod"
  }
#line 315 "texts.mod"

pOt__Epilogue:;
#line 316 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 316 "texts.mod"
}
#line 316 "texts.mod"

#line 316 "texts.mod"

#line 319 "texts.mod"

#line 319 "texts.mod"

#line 319 "texts.mod"
static void pOt_dig_WriteRealFix_Texts
#line 319 "texts.mod"
#if pOt__ANSI_C
#line 319 "texts.mod"
  (pOt_INTEGER pOt_n)
#line 319 "texts.mod"
#else
#line 319 "texts.mod"
  (pOt_n)
#line 319 "texts.mod"
  pOt_INTEGER pOt_n;
#line 319 "texts.mod"

#line 319 "texts.mod"
#endif
#line 319 "texts.mod"
{
#line 319 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 319 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 319 "texts.mod"

#line 319 "texts.mod"
  for(;;) {
    if(( pOt_n>((pOt_INTEGER)(0)))); else break;
#line 320 "texts.mod"
    (*pOt_i_WriteRealFix_Texts)-=(1);
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W_WriteRealFix_Texts),(*pOt_d_WriteRealFix_Texts).arr[pOt__inxchk(__FILE__,__LINE__,0x9, (*pOt_i_WriteRealFix_Texts))]);
#line 321 "texts.mod"
    pOt_n-=(1);
  }
#line 322 "texts.mod"

pOt__Epilogue:;
#line 323 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 323 "texts.mod"
}
#line 323 "texts.mod"

#line 323 "texts.mod"
extern void pOt_WriteRealFix_Texts
#line 325 "texts.mod"
#if pOt__ANSI_C
#line 325 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_REAL pOt_x, pOt_INTEGER pOt_n, pOt_INTEGER pOt_k)
#line 325 "texts.mod"
#else
#line 325 "texts.mod"
  (pOt_W, pOt_x, pOt_n, pOt_k)
#line 325 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 325 "texts.mod"
  pOt_REAL pOt_x;
#line 325 "texts.mod"
  pOt_INTEGER pOt_n, pOt_k;
#line 325 "texts.mod"

#line 325 "texts.mod"
#endif
#line 325 "texts.mod"
{
#line 325 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W_;
#line 325 "texts.mod"
  pOt_REAL (*pOt_x_);
#line 325 "texts.mod"
  pOt_INTEGER (*pOt_n_), (*pOt_k_), pOt_e, (*pOt_e_), pOt_i, (*pOt_i_);
#line 325 "texts.mod"
  pOt_CHAR pOt_sign, (*pOt_sign_);
#line 325 "texts.mod"
  pOt_REAL pOt_x0, (*pOt_x0_);
#line 325 "texts.mod"
  struct pOt__tag_A_Texts pOt_d, (*pOt_d_);
#line 325 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 325 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 325 "texts.mod"
  pOt_W_=pOt_W_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_W_WriteRealFix_Texts=pOt_W;
#line 325 "texts.mod"
  pOt_x_=pOt_x_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_x_WriteRealFix_Texts=&pOt_x;
#line 325 "texts.mod"
  pOt_n_=pOt_n_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_n_WriteRealFix_Texts=&pOt_n;
#line 325 "texts.mod"
  pOt_k_=pOt_k_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_k_WriteRealFix_Texts=&pOt_k;
#line 325 "texts.mod"
  pOt_e_=pOt_e_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_e_WriteRealFix_Texts=&pOt_e;
#line 325 "texts.mod"
  pOt_i_=pOt_i_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_i_WriteRealFix_Texts=&pOt_i;
#line 325 "texts.mod"
  pOt_sign_=pOt_sign_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_sign_WriteRealFix_Texts=&pOt_sign;
#line 325 "texts.mod"
  pOt_x0_=pOt_x0_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_x0_WriteRealFix_Texts=&pOt_x0;
#line 325 "texts.mod"
  pOt_d_=pOt_d_WriteRealFix_Texts;
#line 325 "texts.mod"
  pOt_d_WriteRealFix_Texts=&pOt_d;
#line 325 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_d,(pOt__TypDsc*)&pOt__td_A_Texts);
#line 325 "texts.mod"

#line 325 "texts.mod"
  pOt_e=(pOt_INTEGER)(pOt_Expo_Reals((pOt_REAL)(pOt_x)));
#line 325 "texts.mod"
  if(( pOt_k<((pOt_INTEGER)(0)))) {
    pOt_k=(pOt_INTEGER)(0);
#line 326 "texts.mod"
  }
#line 326 "texts.mod"
  if(( pOt_e==((pOt_INTEGER)(0)))) {
    pOt_seq_WriteRealFix_Texts(' ',(pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(pOt_k),5)),(pOt_LONGINT)(2),5)));
#line 327 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'0');
#line 327 "texts.mod"
    pOt_seq_WriteRealFix_Texts(' ',(pOt_INTEGER)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(1),5)));
  } else if(( pOt_e==255)) {
#line 328 "texts.mod"
    pOt_WriteString_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1CL],&pOt__str_td[0x4]))));
#line 328 "texts.mod"
    pOt_seq_WriteRealFix_Texts(' ',(pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(4),5)));
  } else {
#line 329 "texts.mod"
    pOt_e=(pOt_INTEGER)((pOt_INTEGER)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)(((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(127),5))),(pOt_LONGINT)(77),5)),(pOt_LONGINT)(256),5));
#line 329 "texts.mod"
    if(( pOt_x<((pOt_REAL)(0)))) {
      pOt_sign='-';
#line 330 "texts.mod"
      pOt_x=(pOt_REAL)(-pOt_x);
#line 330 "texts.mod"
    } else {
#line 330 "texts.mod"
      pOt_sign=' ';
#line 330 "texts.mod"
    }
#line 330 "texts.mod"
    if(( pOt_e>=((pOt_INTEGER)(0)))) {
      pOt_x=(pOt_REAL)(pOt_x/pOt_Ten_Reals((pOt_INTEGER)(pOt_e)));
    } else {
#line 332 "texts.mod"
      pOt_x=(pOt_REAL)(pOt_Ten_Reals((pOt_INTEGER)(-pOt_e))*pOt_x);
    }
#line 333 "texts.mod"
    if(( pOt_x>=(pOt_REAL)1.0000000E1)) {
      pOt_x=(pOt_REAL)((pOt_REAL)1.0000000E-1*pOt_x);
#line 334 "texts.mod"
      pOt_e+=(1);
#line 334 "texts.mod"
    }
#line 334 "texts.mod"
    if(( (pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(pOt_e),5)>=((pOt_INTEGER)(8)))) {
#line 336 "texts.mod"
      pOt_k=(pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_SHORTINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(9),(pOt_LONGINT)(1),4)),(pOt_LONGINT)(pOt_e),5));
    } else if(( (pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(pOt_e),5)<((pOt_INTEGER)(0)))) {
#line 337 "texts.mod"
      pOt_k=(pOt_INTEGER)(-pOt_e);
#line 337 "texts.mod"
      pOt_x=(pOt_REAL)((pOt_REAL)0.0);
    }
#line 338 "texts.mod"
    pOt_x0=(pOt_REAL)(pOt_Ten_Reals((pOt_INTEGER)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(pOt_e),5))));
    pOt_x=(pOt_REAL)(pOt_x0*pOt_x+(pOt_REAL)5.0000000E-1);
#line 339 "texts.mod"
    if(( pOt_x>=(pOt_REAL)1.0000000E1*pOt_x0)) {
      pOt_e+=(1);
#line 340 "texts.mod"
    }
#line 340 "texts.mod"
    pOt_e+=(1);
#line 342 "texts.mod"
    pOt_i=(pOt_INTEGER)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(pOt_e),5));
#line 342 "texts.mod"
    pOt_Convert_Reals((pOt_REAL)(pOt_x),(pOt_INTEGER)(pOt_i),(pOt__ArrTypDsc**)&pOt_d);
#line 342 "texts.mod"
    if(( pOt_e>((pOt_INTEGER)(0)))) {
#line 344 "texts.mod"
      pOt_seq_WriteRealFix_Texts(' ',(pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(pOt_e),5)),(pOt_LONGINT)(pOt_k),5)),(pOt_LONGINT)(2),5)));
#line 344 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_sign);
#line 344 "texts.mod"
      pOt_dig_WriteRealFix_Texts((pOt_INTEGER)(pOt_e));
#line 344 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'.');
      pOt_dig_WriteRealFix_Texts((pOt_INTEGER)(pOt_k));
    } else {
#line 346 "texts.mod"
      pOt_seq_WriteRealFix_Texts(' ',(pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(pOt_k),5)),(pOt_LONGINT)(3),5)));
#line 346 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_sign);
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'0');
#line 347 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'.');
#line 347 "texts.mod"
      pOt_seq_WriteRealFix_Texts('0',(pOt_INTEGER)(-pOt_e));
      pOt_dig_WriteRealFix_Texts((pOt_INTEGER)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_k),(pOt_LONGINT)(pOt_e),5)));
    }
#line 349 "texts.mod"
  }

pOt__Epilogue:;
#line 351 "texts.mod"
  pOt_W_WriteRealFix_Texts=pOt_W_;
#line 351 "texts.mod"
  pOt_x_WriteRealFix_Texts=pOt_x_;
#line 351 "texts.mod"
  pOt_n_WriteRealFix_Texts=pOt_n_;
#line 351 "texts.mod"
  pOt_k_WriteRealFix_Texts=pOt_k_;
#line 351 "texts.mod"
  pOt_e_WriteRealFix_Texts=pOt_e_;
#line 351 "texts.mod"
  pOt_i_WriteRealFix_Texts=pOt_i_;
#line 351 "texts.mod"
  pOt_sign_WriteRealFix_Texts=pOt_sign_;
#line 351 "texts.mod"
  pOt_x0_WriteRealFix_Texts=pOt_x0_;
#line 351 "texts.mod"
  pOt_d_WriteRealFix_Texts=pOt_d_;
#line 351 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 351 "texts.mod"
}
#line 351 "texts.mod"

#line 351 "texts.mod"

#line 356 "texts.mod"
struct pOt__tag_B_Texts {
#line 356 "texts.mod"
  pOt__ArrTypDsc *td;
#line 356 "texts.mod"
  pOt_CHAR arr[0x8L];
#line 356 "texts.mod"
} ;
#line 356 "texts.mod"
static pOt__ArrTypDsc pOt__td_B_Texts= {
#line 356 "texts.mod"
  1,
#line 356 "texts.mod"
  0x8L, sizeof(pOt_CHAR)
#line 356 "texts.mod"
};
#line 356 "texts.mod"

#line 356 "texts.mod"

#line 356 "texts.mod"
extern void pOt_WriteRealHex_Texts
#line 356 "texts.mod"
#if pOt__ANSI_C
#line 356 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_REAL pOt_x)
#line 356 "texts.mod"
#else
#line 356 "texts.mod"
  (pOt_W, pOt_x)
#line 356 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 356 "texts.mod"
  pOt_REAL pOt_x;
#line 356 "texts.mod"

#line 356 "texts.mod"
#endif
#line 356 "texts.mod"
{
#line 356 "texts.mod"
  pOt_INTEGER pOt_i;
#line 356 "texts.mod"
  struct pOt__tag_B_Texts pOt_d;
#line 356 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 356 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 356 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_d,(pOt__TypDsc*)&pOt__td_B_Texts);
#line 356 "texts.mod"

#line 356 "texts.mod"
  pOt_ConvertH_Reals((pOt_REAL)(pOt_x),(pOt__ArrTypDsc**)&pOt_d);
#line 356 "texts.mod"
  pOt_i=(pOt_INTEGER)(0);
#line 356 "texts.mod"
  for(;;) {
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x8, pOt_i)]);
#line 357 "texts.mod"
    pOt_i+=(1);
#line 357 "texts.mod"
    if(( pOt_i==((pOt_INTEGER)(8)))) break;
  }
#line 358 "texts.mod"

#line 358 "texts.mod"
pOt__Epilogue:;
#line 358 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 358 "texts.mod"
}
#line 358 "texts.mod"

#line 358 "texts.mod"

#line 364 "texts.mod"
struct pOt__tag_C_Texts {
#line 364 "texts.mod"
  pOt__ArrTypDsc *td;
#line 364 "texts.mod"
  pOt_CHAR arr[0x10L];
#line 364 "texts.mod"
} ;
#line 364 "texts.mod"
static pOt__ArrTypDsc pOt__td_C_Texts= {
#line 364 "texts.mod"
  1,
#line 364 "texts.mod"
  0x10L, sizeof(pOt_CHAR)
#line 364 "texts.mod"
};
#line 364 "texts.mod"

#line 364 "texts.mod"

#line 364 "texts.mod"
extern void pOt_WriteLongReal_Texts
#line 364 "texts.mod"
#if pOt__ANSI_C
#line 364 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_LONGREAL pOt_x, pOt_INTEGER pOt_n)
#line 364 "texts.mod"
#else
#line 364 "texts.mod"
  (pOt_W, pOt_x, pOt_n)
#line 364 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 364 "texts.mod"
  pOt_LONGREAL pOt_x;
#line 364 "texts.mod"
  pOt_INTEGER pOt_n;
#line 364 "texts.mod"

#line 364 "texts.mod"
#endif
#line 364 "texts.mod"
{
#line 364 "texts.mod"
  pOt_INTEGER pOt_e;
#line 364 "texts.mod"
  pOt_LONGREAL pOt_x0;
#line 364 "texts.mod"
  struct pOt__tag_C_Texts pOt_d;
#line 364 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 364 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 364 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_d,(pOt__TypDsc*)&pOt__td_C_Texts);
#line 364 "texts.mod"

#line 364 "texts.mod"
  pOt_e=(pOt_INTEGER)(pOt_ExpoL_Reals((pOt_LONGREAL)(pOt_x)));
#line 364 "texts.mod"
  if(( pOt_e==((pOt_INTEGER)(0)))) {
#line 366 "texts.mod"
    pOt_WriteString_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x14L],&pOt__str_td[0x3]))));
#line 366 "texts.mod"
    for(;;) {
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 367 "texts.mod"
      pOt_n-=(1);
#line 367 "texts.mod"
      if(( pOt_n<=((pOt_INTEGER)(3)))) break;
    }
#line 368 "texts.mod"
  } else if(( pOt_e==2047)) {
    pOt_WriteString_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1CL],&pOt__str_td[0x4]))));
#line 369 "texts.mod"
    for(;;) {
      if(( pOt_n>((pOt_INTEGER)(4)))); else break;
#line 370 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 370 "texts.mod"
      pOt_n-=(1);
#line 370 "texts.mod"
    }
#line 370 "texts.mod"
  } else {
#line 372 "texts.mod"
    if(( pOt_n<=((pOt_INTEGER)(10)))) {
#line 372 "texts.mod"
      pOt_n=(pOt_INTEGER)(3);
#line 372 "texts.mod"
    } else {
#line 372 "texts.mod"
      pOt_n-=(7);
#line 372 "texts.mod"
    }
#line 372 "texts.mod"
    for(;;) {
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 373 "texts.mod"
      pOt_n-=(1);
#line 373 "texts.mod"
      if(( pOt_n<=((pOt_INTEGER)(16)))) break;
#line 373 "texts.mod"
    }
#line 373 "texts.mod"
    if(( pOt_x<((pOt_LONGREAL)(0)))) {
#line 375 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'-');
#line 375 "texts.mod"
      pOt_x=(pOt_LONGREAL)(-pOt_x);
#line 375 "texts.mod"
    } else {
#line 375 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),' ');
#line 375 "texts.mod"
    }
#line 375 "texts.mod"
    pOt_e=(pOt_INTEGER)((pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,(pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(1023),5))),(pOt_LONGINT)(77),6)),(pOt_LONGINT)(256),6)));
    if(( pOt_e>=((pOt_INTEGER)(0)))) {
      pOt_x=(pOt_LONGREAL)(pOt_x/pOt_TenL_Reals((pOt_INTEGER)(pOt_e)));
#line 377 "texts.mod"
    } else {
#line 377 "texts.mod"
      pOt_x=(pOt_LONGREAL)(pOt_TenL_Reals((pOt_INTEGER)(-pOt_e))*pOt_x);
#line 377 "texts.mod"
    }
#line 377 "texts.mod"
    if(( pOt_x>=1.000000000000000E1)) {
      pOt_x=(pOt_LONGREAL)(1.000000000000000E-1*pOt_x);
#line 378 "texts.mod"
      pOt_e+=(1);
#line 378 "texts.mod"
    }
#line 378 "texts.mod"
    pOt_x0=(pOt_LONGREAL)(pOt_TenL_Reals((pOt_INTEGER)((pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_n),(pOt_LONGINT)(1),5))));
    pOt_x=(pOt_LONGREAL)(pOt_x0*pOt_x+5.000000000000000E-1);
#line 379 "texts.mod"
    if(( pOt_x>=1.000000000000000E1*pOt_x0)) {
      pOt_x=(pOt_LONGREAL)(1.000000000000000E-1*pOt_x);
#line 380 "texts.mod"
      pOt_e+=(1);
#line 380 "texts.mod"
    }
#line 380 "texts.mod"
    pOt_ConvertL_Reals((pOt_LONGREAL)(pOt_x),(pOt_INTEGER)(pOt_n),(pOt__ArrTypDsc**)&pOt_d);
    pOt_n-=(1);
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x10, pOt_n)]);
#line 382 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'.');
#line 382 "texts.mod"
    for(;;) {
      pOt_n-=(1);
#line 383 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x10, pOt_n)]);
#line 383 "texts.mod"
      if(( pOt_n==((pOt_INTEGER)(0)))) break;
#line 383 "texts.mod"
    }
#line 383 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'D');
    if(( pOt_e<((pOt_INTEGER)(0)))) {
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'-');
#line 385 "texts.mod"
      pOt_e=(pOt_INTEGER)(-pOt_e);
#line 385 "texts.mod"
    } else {
#line 385 "texts.mod"
      pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),'+');
#line 385 "texts.mod"
    }
#line 385 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(100),5)),(pOt_LONGINT)(48),5))));
    pOt_e=(pOt_INTEGER)((pOt_INTEGER)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(100),5));
#line 386 "texts.mod"
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(10),5)),(pOt_LONGINT)(48),5))));
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_e),(pOt_LONGINT)(10),5)),(pOt_LONGINT)(48),5))));
#line 389 "texts.mod"
  }
#line 389 "texts.mod"

pOt__Epilogue:;
#line 390 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 390 "texts.mod"
}
#line 390 "texts.mod"

#line 390 "texts.mod"

#line 395 "texts.mod"
struct pOt__tag_D_Texts {
#line 395 "texts.mod"
  pOt__ArrTypDsc *td;
#line 395 "texts.mod"
  pOt_CHAR arr[0x10L];
#line 395 "texts.mod"
} ;
#line 395 "texts.mod"
static pOt__ArrTypDsc pOt__td_D_Texts= {
#line 395 "texts.mod"
  1,
#line 395 "texts.mod"
  0x10L, sizeof(pOt_CHAR)
#line 395 "texts.mod"
};
#line 395 "texts.mod"

#line 395 "texts.mod"

#line 395 "texts.mod"
extern void pOt_WriteLongRealHex_Texts
#line 395 "texts.mod"
#if pOt__ANSI_C
#line 395 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_LONGREAL pOt_x)
#line 395 "texts.mod"
#else
#line 395 "texts.mod"
  (pOt_W, pOt_x)
#line 395 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 395 "texts.mod"
  pOt_LONGREAL pOt_x;
#line 395 "texts.mod"

#line 395 "texts.mod"
#endif
#line 395 "texts.mod"
{
#line 395 "texts.mod"
  pOt_INTEGER pOt_i;
#line 395 "texts.mod"
  struct pOt__tag_D_Texts pOt_d;
#line 395 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 395 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 395 "texts.mod"
  pOt__init_var((pOt__TypDsc**)&pOt_d,(pOt__TypDsc*)&pOt__td_D_Texts);
#line 395 "texts.mod"

#line 395 "texts.mod"
  pOt_ConvertHL_Reals((pOt_LONGREAL)(pOt_x),(pOt__ArrTypDsc**)&pOt_d);
#line 395 "texts.mod"
  pOt_i=(pOt_INTEGER)(0);
#line 395 "texts.mod"
  for(;;) {
    pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W),pOt_d.arr[pOt__inxchk(__FILE__,__LINE__,0x10, pOt_i)]);
#line 396 "texts.mod"
    pOt_i+=(1);
#line 396 "texts.mod"
    if(( pOt_i==((pOt_INTEGER)(16)))) break;
  }
#line 397 "texts.mod"

#line 397 "texts.mod"
pOt__Epilogue:;
#line 397 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 397 "texts.mod"
}
#line 397 "texts.mod"

#line 397 "texts.mod"

#line 401 "texts.mod"

#line 401 "texts.mod"
static struct pOt__tag_5_Texts *pOt_W_WriteDate_Texts;
#line 401 "texts.mod"
static pOt_LONGINT (*pOt_t_WriteDate_Texts), (*pOt_d_WriteDate_Texts);
#line 401 "texts.mod"

#line 401 "texts.mod"
extern void pOt_WriteDate_Texts pOt__ARGS((struct pOt__tag_5_Texts *, pOt_LONGINT , pOt_LONGINT ));
#line 401 "texts.mod"

#line 401 "texts.mod"


#line 402 "texts.mod"

#line 402 "texts.mod"
static void pOt_WritePair_WriteDate_Texts
#line 402 "texts.mod"
#if pOt__ANSI_C
#line 402 "texts.mod"
  (pOt_CHAR pOt_ch, pOt_LONGINT pOt_x)
#line 402 "texts.mod"
#else
#line 402 "texts.mod"
  (pOt_ch, pOt_x)
#line 402 "texts.mod"
  pOt_CHAR pOt_ch;
#line 402 "texts.mod"
  pOt_LONGINT pOt_x;
#line 402 "texts.mod"

#line 402 "texts.mod"
#endif
#line 402 "texts.mod"
{
#line 402 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 402 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 402 "texts.mod"

#line 402 "texts.mod"
  pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W_WriteDate_Texts),pOt_ch);
#line 402 "texts.mod"
  pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W_WriteDate_Texts),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_x),(pOt_LONGINT)(10),6)),(pOt_LONGINT)(48),6))));
  pOt_Write_Texts((struct pOt__tag_5_Texts*)&(*pOt_W_WriteDate_Texts),(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_x),(pOt_LONGINT)(10),6)),(pOt_LONGINT)(48),6))));

#line 404 "texts.mod"
pOt__Epilogue:;
#line 404 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 404 "texts.mod"
}
#line 404 "texts.mod"

#line 404 "texts.mod"
extern void pOt_WriteDate_Texts
#line 406 "texts.mod"
#if pOt__ANSI_C
#line 406 "texts.mod"
  (struct pOt__tag_5_Texts *pOt_W, pOt_LONGINT pOt_t, pOt_LONGINT pOt_d)
#line 406 "texts.mod"
#else
#line 406 "texts.mod"
  (pOt_W, pOt_t, pOt_d)
#line 406 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W;
#line 406 "texts.mod"
  pOt_LONGINT pOt_t, pOt_d;
#line 406 "texts.mod"

#line 406 "texts.mod"
#endif
#line 406 "texts.mod"
{
#line 406 "texts.mod"
  struct pOt__tag_5_Texts *pOt_W_;
#line 406 "texts.mod"
  pOt_LONGINT (*pOt_t_), (*pOt_d_);
#line 406 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 406 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 406 "texts.mod"
  pOt_W_=pOt_W_WriteDate_Texts;
#line 406 "texts.mod"
  pOt_W_WriteDate_Texts=pOt_W;
#line 406 "texts.mod"
  pOt_t_=pOt_t_WriteDate_Texts;
#line 406 "texts.mod"
  pOt_t_WriteDate_Texts=&pOt_t;
#line 406 "texts.mod"
  pOt_d_=pOt_d_WriteDate_Texts;
#line 406 "texts.mod"
  pOt_d_WriteDate_Texts=&pOt_d;
#line 406 "texts.mod"

#line 406 "texts.mod"
  pOt_WritePair_WriteDate_Texts(' ',(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_d),(pOt_LONGINT)(32),6)));
  pOt_WritePair_WriteDate_Texts('.',(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_d),(pOt_LONGINT)(32),6)),(pOt_LONGINT)(16),6)));
#line 407 "texts.mod"
  pOt_WritePair_WriteDate_Texts('.',(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_d),(pOt_LONGINT)(512),6)),(pOt_LONGINT)(128),6)));
#line 407 "texts.mod"
  pOt_WritePair_WriteDate_Texts(' ',(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_t),(pOt_LONGINT)(4096),6)),(pOt_LONGINT)(32),6)));
  pOt_WritePair_WriteDate_Texts(':',(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_t),(pOt_LONGINT)(64),6)),(pOt_LONGINT)(64),6)));
#line 408 "texts.mod"
  pOt_WritePair_WriteDate_Texts(':',(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_t),(pOt_LONGINT)(64),6)));

#line 409 "texts.mod"
pOt__Epilogue:;
#line 409 "texts.mod"
  pOt_W_WriteDate_Texts=pOt_W_;
#line 409 "texts.mod"
  pOt_t_WriteDate_Texts=pOt_t_;
#line 409 "texts.mod"
  pOt_d_WriteDate_Texts=pOt_d_;
#line 409 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 409 "texts.mod"
}
#line 409 "texts.mod"

#line 409 "texts.mod"

#line 412 "texts.mod"

#line 412 "texts.mod"

#line 412 "texts.mod"
extern void pOt_Open_Texts
#line 412 "texts.mod"
#if pOt__ANSI_C
#line 412 "texts.mod"
  (pOt_File_Files *pOt_T, pOt__DynArr *pOt_name)
#line 412 "texts.mod"
#else
#line 412 "texts.mod"
  (pOt_T, pOt_name)
#line 412 "texts.mod"
  pOt_File_Files *pOt_T;
#line 412 "texts.mod"
  pOt__DynArr *pOt_name;
#line 412 "texts.mod"

#line 412 "texts.mod"
#endif
#line 412 "texts.mod"
{
#line 412 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 412 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 412 "texts.mod"

#line 412 "texts.mod"
  (*pOt_T)=(struct pOt__tag_1_Files*)(pOt_Old_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_name))));
#line 412 "texts.mod"
  if(( (*pOt_T)==pOt_NIL)) {
    (*pOt_T)=(struct pOt__tag_1_Files*)(pOt_New_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_name))));
#line 413 "texts.mod"
  }
#line 413 "texts.mod"

pOt__Epilogue:;
#line 414 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 414 "texts.mod"
  pOt__rm_par((pOt__TypDsc**)pOt_name);
#line 414 "texts.mod"
}
#line 414 "texts.mod"

#line 414 "texts.mod"

#line 417 "texts.mod"

#line 417 "texts.mod"

#line 417 "texts.mod"
extern void pOt_Create_Texts
#line 417 "texts.mod"
#if pOt__ANSI_C
#line 417 "texts.mod"
  (pOt_File_Files *pOt_T, pOt__DynArr *pOt_name)
#line 417 "texts.mod"
#else
#line 417 "texts.mod"
  (pOt_T, pOt_name)
#line 417 "texts.mod"
  pOt_File_Files *pOt_T;
#line 417 "texts.mod"
  pOt__DynArr *pOt_name;
#line 417 "texts.mod"

#line 417 "texts.mod"
#endif
#line 417 "texts.mod"
{
#line 417 "texts.mod"
  struct {void*next;} pOt__gc_ptrs;
#line 417 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 417 "texts.mod"

#line 417 "texts.mod"
  (*pOt_T)=(struct pOt__tag_1_Files*)(pOt_New_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_name))));

#line 418 "texts.mod"
pOt__Epilogue:;
#line 418 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 418 "texts.mod"
  pOt__rm_par((pOt__TypDsc**)pOt_name);
#line 418 "texts.mod"
}
#line 418 "texts.mod"

#line 418 "texts.mod"

#line 421 "texts.mod"

#line 421 "texts.mod"

#line 421 "texts.mod"
extern void pOt_Close_Texts
#line 421 "texts.mod"
#if pOt__ANSI_C
#line 421 "texts.mod"
  (pOt_File_Files pOt_T)
#line 421 "texts.mod"
#else
#line 421 "texts.mod"
  (pOt_T)
#line 421 "texts.mod"
  pOt_File_Files pOt_T;
#line 421 "texts.mod"

#line 421 "texts.mod"
#endif
#line 421 "texts.mod"
{
#line 421 "texts.mod"
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
#line 421 "texts.mod"
  struct {void *next, *vars[0x1];} pOt__gc_strs;
#line 421 "texts.mod"
  pOt__gc_ptrs.next = pOt__gc_root;
#line 421 "texts.mod"
  pOt__gc_strs.next = &pOt__gc_ptrs;
#line 421 "texts.mod"
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
#line 421 "texts.mod"
  pOt__gc_strs.vars[0x0]=pOt_NIL;
#line 421 "texts.mod"
  pOt__gc_ptrs.vars[0x0]=&pOt_T;
#line 421 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
#line 421 "texts.mod"

#line 421 "texts.mod"
  pOt_Close_Files((struct pOt__tag_1_Files*)(pOt_T));

#line 422 "texts.mod"
pOt__Epilogue:;
#line 422 "texts.mod"
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
#line 422 "texts.mod"
}
#line 422 "texts.mod"

#line 422 "texts.mod"
void pOt_Texts__body()
#line 424 "texts.mod"
{
#line 424 "texts.mod"
  static int pOt_Texts__loaded=0;
#line 424 "texts.mod"
  if(!pOt_Texts__loaded){
#line 424 "texts.mod"
    pOt_Texts__loaded=1;
#line 424 "texts.mod"

#line 424 "texts.mod"
    pOt_Files__body();
#line 424 "texts.mod"
    pOt_Reals__body();
#line 424 "texts.mod"

#line 424 "texts.mod"
    pOt__gc_ptrs.next=pOt__gc_root;
#line 424 "texts.mod"
    pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
#line 424 "texts.mod"

#line 424 "texts.mod"

#line 424 "texts.mod"

#line 424 "texts.mod"
  pOt__Epilogue:;
#line 424 "texts.mod"
  }
#line 424 "texts.mod"
}
#line 424 "texts.mod"
