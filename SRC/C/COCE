/* This code is generated by pOt. */

#include <pOtRTL.h>
#include "COCS.h"
#include "COCT.h"
#include "COCQ.h"
#include "COCN.h"
#include "COCJ.h"
#include "COCX.h"

#include "hi.COCE"



pOt_BOOLEAN pOt_inxchk_COCE, pOt_rngchk_COCE, pOt_nilchk_COCE;
static pOt_LONGINT pOt_MinChar_COCE, pOt_MaxChar_COCE, pOt_MinBool_COCE, pOt_MaxBool_COCE, pOt_MinSInt_COCE, pOt_MaxSInt_COCE, pOt_MinInt_COCE, pOt_MaxInt_COCE, pOt_MinLInt_COCE, pOt_MaxLInt_COCE, pOt_MinSet_COCE, pOt_MaxSet_COCE;
static pOt_LONGREAL pOt_MinReal_COCE, pOt_MaxReal_COCE, pOt_MinLReal_COCE, pOt_MaxLReal_COCE;

static struct {void *next, *vars[0x1];} pOt__gc_ptrs = {pOt_NIL,{
  pOt_NIL
}};
static struct {void *next, *vars[0x1];} pOt__gc_strs = {&pOt__gc_ptrs,{
  pOt_NIL
}};




extern void pOt_SetIntType_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_LONGINT pOt_v;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_v=(pOt_LONGINT)((*pOt_x).pOt_intval);
  if((((pOt_MinSInt_COCE<=pOt_v))&&((pOt_v<=pOt_MaxSInt_COCE)))) {
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_sinttyp_COCT);
  } else if((((pOt_MinInt_COCE<=pOt_v))&&((pOt_v<=pOt_MaxInt_COCE)))) {
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_inttyp_COCT);
  } else {
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern pOt_INTEGER pOt_StartObj_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt__retval;
  pOt_INTEGER pOt_qoffs, pOt_np;
  int pOt__gc_enabled_prev;
  pOt__gc_enabled_prev=pOt__gc_enabled;
  pOt__gc_enabled=0;

  pOt_qoffs=(pOt_INTEGER)((*pOt_x).pOt_qoffs);
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt__retval =(pOt_INTEGER)(pOt_qoffs);
  goto pOt__Epilogue;

  pOt__halt(__FILE__,__LINE__,0x11);
pOt__Epilogue:;
  pOt__gc_enabled=pOt__gc_enabled_prev;
  return pOt__retval;
}




extern void pOt_StopObj_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_qoffs)
#else
  (pOt_x, pOt_qoffs)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_INTEGER pOt_qoffs;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*pOt_x).pOt_mode==3)) {
    pOt_DeRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
    (*pOt_x).pOt_mode=1;
  }
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  (*pOt_x).pOt_qoffs=(pOt_INTEGER)(pOt_qoffs);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern pOt_INTEGER pOt_StartExpr_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt__retval;
  pOt_INTEGER pOt_qoffs;
  int pOt__gc_enabled_prev;
  pOt__gc_enabled_prev=pOt__gc_enabled;
  pOt__gc_enabled=0;

  pOt_qoffs=(pOt_INTEGER)((*pOt_x).pOt_qoffs);
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  if(( (*pOt_x).pOt_qoffs==((pOt_INTEGER)(0)))) {
    pOt_Dummy_COCQ();
  }
  pOt__retval =(pOt_INTEGER)(pOt_qoffs);
  goto pOt__Epilogue;

  pOt__halt(__FILE__,__LINE__,0x11);
pOt__Epilogue:;
  pOt__gc_enabled=pOt__gc_enabled_prev;
  return pOt__retval;
}




extern void pOt_StopExpr_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_qoffs)
#else
  (pOt_x, pOt_qoffs)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_INTEGER pOt_qoffs;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(((((*pOt_x).pOt_mode==8))&&(((*pOt_x).pOt_typ!=pOt_notyp_COCT)))) {
    pOt_Drop_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
    pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
    pOt_CConstValue_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  }
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  (*pOt_x).pOt_qoffs=(pOt_INTEGER)(pOt_qoffs);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_StopConstExpr_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_qoffs)
#else
  (pOt_x, pOt_qoffs)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_INTEGER pOt_qoffs;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Drop_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  (*pOt_x).pOt_qoffs=(pOt_INTEGER)(pOt_qoffs);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_StopStringExpr_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_qoffs, pOt_Struct_COCT pOt_typ)
#else
  (pOt_x, pOt_qoffs, pOt_typ)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_INTEGER pOt_qoffs;
  pOt_Struct_COCT pOt_typ;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_typ;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

  if(( (*pOt_x).pOt_typ==pOt_stringtyp_COCT)) {
    if(( (pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)(256),6)==((pOt_LONGINT)(1)))) {
      pOt_Drop_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
      pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
      pOt_CConstValue_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
    }
    pOt_SetStrTD_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)(pOt_typ));
    pOt_DeRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
  }
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  (*pOt_x).pOt_qoffs=(pOt_INTEGER)(pOt_qoffs);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_SubExprPrefix_COCE()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_SubExprPrefix_COCX();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_SubExprSuffix_COCE()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_SubExprSuffix_COCX();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern pOt_INTEGER pOt_HookExpr_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt__retval;
  pOt_INTEGER pOt_qoffs;
  int pOt__gc_enabled_prev;
  pOt__gc_enabled_prev=pOt__gc_enabled;
  pOt__gc_enabled=0;

  pOt_qoffs=(pOt_INTEGER)((*pOt_x).pOt_qoffs);
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt__retval =(pOt_INTEGER)(pOt_qoffs);
  goto pOt__Epilogue;

  pOt__halt(__FILE__,__LINE__,0x11);
pOt__Epilogue:;
  pOt__gc_enabled=pOt__gc_enabled_prev;
  return pOt__retval;
}




extern void pOt_IndexPrefix_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*pOt_x).pOt_mode>=8)) {
    pOt_Mark_COCS((pOt_INTEGER)(127));
  }
  if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==15)) {
    if(( (*pOt_x).pOt_mode==3)) {
      pOt_DeRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
      (*pOt_x).pOt_mode=1;
    }
    pOt_ArrInxPfx_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),pOt_inxchk_COCE);
  } else if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==16)) {
    if(((((*pOt_x).pOt_intval==((pOt_LONGINT)(0))))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp))).pOt_form==1)))) {
      pOt_BytArrInxPfx_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),pOt_inxchk_COCE);
    } else {
      pOt_DynArrInxPfx_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),pOt_inxchk_COCE);
    }
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(82));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Index_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  pOt_INTEGER pOt_f, pOt_n;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form);
  if(!(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form)&(pOt_SET)0x70L)))) {
    pOt_Mark_COCS((pOt_INTEGER)(80));
    (*pOt_y).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_inttyp_COCT);
  }
  if(( (*pOt_y).pOt_mode>11)) {
    pOt_Mark_COCS((pOt_INTEGER)(126));
  }
  if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==15)) {
    pOt_ArrInxSfx_COCJ();
    if(((((*pOt_y).pOt_mode==8))&&((((((pOt_LONGINT)(0))>(*pOt_y).pOt_intval))||(((*pOt_y).pOt_intval>=(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_n)))))) {
      pOt_Mark_COCS((pOt_INTEGER)(81));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp);
    (*pOt_x).pOt_obj=(struct pOt__tag_1_COCT*)(pOt_NIL);
  } else if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==16)) {
    if(((((*pOt_x).pOt_intval==((pOt_LONGINT)(0))))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp))).pOt_form==1)))) {
      pOt_BytArrInxSfx_COCJ();
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp);
      (*pOt_x).pOt_obj=(struct pOt__tag_1_COCT*)(pOt_NIL);
    } else {
      pOt_DynArrInxSfx_COCJ();
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp);
      if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==16)) {
        (*pOt_x).pOt_intval+=(1);
      } else {
        pOt_Cast_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
        pOt_DeRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
        (*pOt_x).pOt_mode=1;
        (*pOt_x).pOt_obj=(struct pOt__tag_1_COCT*)(pOt_NIL);
      }
    }
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Field_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_Object_COCT pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_Object_COCT pOt_y;

#endif
{
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_y;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

  if((((pOt_y!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_y))).pOt_mode==12)))) {
    if(( (*pOt_x).pOt_mode==3)) {
      pOt_DeRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
      (*pOt_x).pOt_mode=1;
    } else if(( (*pOt_x).pOt_mode!=1)) {
      pOt_Mark_COCS((pOt_INTEGER)(127));
    }
    pOt_Field_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_1_COCT*)(pOt_y));
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_y))).pOt_typ);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(83));
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_undftyp_COCT);
  }
  (*pOt_x).pOt_obj=(struct pOt__tag_1_COCT*)(pOt_NIL);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_DeRef_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*pOt_x).pOt_mode>=8)) {
    pOt_Mark_COCS((pOt_INTEGER)(127));
  }
  if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==13)) {
    if(( (*pOt_x).pOt_mode==1)) {
      (*pOt_x).pOt_mode=3;
    } else {
      pOt_DeRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
    }
    if(pOt_nilchk_COCE) {
      pOt_NilPtr_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp);
    (*pOt_x).pOt_obj=(struct pOt__tag_1_COCT*)(pOt_wasderef_COCT);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(84));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_GTT_COCE
#if pOt__ANSI_C
  (pOt_Struct_COCT pOt_t0, pOt_Struct_COCT pOt_t1)
#else
  (pOt_t0, pOt_t1)
  pOt_Struct_COCT pOt_t0, pOt_t1;

#endif
{
  pOt_Struct_COCT pOt_t;
  struct {void *next, *vars[0x4];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x3]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x2]=&pOt_t0;
  pOt__gc_ptrs.vars[0x1]=&pOt_t1;
  pOt__gc_ptrs.vars[0x0]=&pOt_t;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_t=pOt_NIL;

  if(( pOt_t0!=pOt_t1)) {
    pOt_t=(struct pOt__tag_2_COCT*)(pOt_t1);
    for(;;) {
      pOt_t=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_t))).pOt_BaseTyp);
      if((((pOt_t==pOt_NIL))||((pOt_t==pOt_t0)))) break;
    }
    if(( pOt_t==pOt_NIL)) {
      pOt_Mark_COCS((pOt_INTEGER)(85));
    }
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_TypGuard_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==13)) {
    if(( (*pOt_x).pOt_mode==3)) {
      pOt_DeRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
      (*pOt_x).pOt_mode=1;
    }
    if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form==13)) {
      pOt_GTT_COCE((struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp),(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_BaseTyp));
      pOt_TypGuard_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_typchk_COCT);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(86));
    }
  } else if((((((((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==17))&&(((*pOt_x).pOt_obj!=pOt_NIL)))&&(((*pOt_x).pOt_obj!=pOt_wasderef_COCT)))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_obj))).pOt_mode==3)))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form==17)))) {
    pOt_GTT_COCE((struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
    pOt_TypGuard_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_typchk_COCT);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(87));
  }
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_TypTest_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==13)) {
    if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form==13)) {
      pOt_GTT_COCE((struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp),(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_BaseTyp));
      pOt_TypTest_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(86));
    }
  } else if((((((((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==17))&&(((*pOt_x).pOt_obj!=pOt_NIL)))&&(((*pOt_x).pOt_obj!=pOt_wasderef_COCT)))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_obj))).pOt_mode==3)))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form==17)))) {
    pOt_GTT_COCE((struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
    pOt_TypTest_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(87));
  }
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Const_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_CConstValue_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Set00_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  pOt_LONGINT pOt_one;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  (*pOt_x).pOt_mode=11;
  (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_settyp_COCT);
  if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form)&(pOt_SET)0x70L))) {
    if(( (*pOt_y).pOt_mode==8)) {
      (*pOt_x).pOt_mode=8;
      if((((pOt_MinSet_COCE<=(*pOt_y).pOt_intval))&&(((*pOt_y).pOt_intval<=pOt_MaxSet_COCE)))) {
        pOt_one=(pOt_LONGINT)(1);
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt__lsh(pOt_one,(*pOt_y).pOt_intval));
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(202));
      }
    }
    pOt_Set00_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(93));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Set10_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  pOt_LONGINT pOt_all;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  (*pOt_x).pOt_mode=11;
  (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_settyp_COCT);
  if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form)&(pOt_SET)0x70L))) {
    if(( (*pOt_y).pOt_mode==8)) {
      (*pOt_x).pOt_mode=8;
      if((((pOt_MinSet_COCE<=(*pOt_y).pOt_intval))&&(((*pOt_y).pOt_intval<=pOt_MaxSet_COCE)))) {
        pOt_all=(pOt_LONGINT)(-1);
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt__lsh(pOt_all,(*pOt_y).pOt_intval));
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(202));
      }
    }
    pOt_Set10_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(93));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Set11_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y, struct pOt__tag_3_COCT *pOt_z)
#else
  (pOt_x, pOt_y, pOt_z)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y, *pOt_z;

#endif
{
  pOt_LONGINT pOt_s;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_z).pOt_typ))).pOt_form)&(pOt_SET)0x70L))) {
    if(( (*pOt_x).pOt_mode==8)) {
      if(( (*pOt_z).pOt_mode==8)) {
        if(((((*pOt_z).pOt_intval>pOt_MaxSet_COCE))||(((*pOt_z).pOt_intval<((pOt_LONGINT)(0)))))) {
          pOt_Mark_COCS((pOt_INTEGER)(202));
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        } else if(( (*pOt_y).pOt_intval<=(*pOt_z).pOt_intval)) {
          pOt_s=(pOt_LONGINT)(-2);
          (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_LONGINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)(pOt__lsh(pOt_s,(*pOt_z).pOt_intval)),6));
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(((((*pOt_z).pOt_mode==8))&&((((((pOt_LONGINT)(0))>(*pOt_z).pOt_intval))||(((*pOt_z).pOt_intval>pOt_MaxSet_COCE)))))) {
      pOt_Mark_COCS((pOt_INTEGER)(202));
    }
    pOt_Set11_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(93));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_InPrefix_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*pOt_x).pOt_mode>11)) {
    pOt_Mark_COCS((pOt_INTEGER)(126));
  }
  if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form)&(pOt_SET)0x70L))) {
    if(( (*pOt_x).pOt_mode==8)) {
      pOt_InPfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_BOOLEAN)0);
      if((((((pOt_LONGINT)(0))>(*pOt_x).pOt_intval))||(((*pOt_x).pOt_intval>pOt_MaxSet_COCE)))) {
        pOt_Mark_COCS((pOt_INTEGER)(202));
      }
    } else {
      pOt_InPfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
      (*pOt_x).pOt_mode=11;
    }
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(92));
    (*pOt_x).pOt_mode=11;
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_In_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*pOt_y).pOt_mode>11)) {
    pOt_Mark_COCS((pOt_INTEGER)(126));
  }
  if(((((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form)&(pOt_SET)0x70L)))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form==9)))) {
    pOt_InSfx_COCX();
    if(((((*pOt_x).pOt_mode==8))&&(((*pOt_y).pOt_mode==8)))) {
      if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*pOt_x).pOt_intval)&((pOt_SET)(pOt_SET)(*pOt_y).pOt_intval)))) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
      } else {
        (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
      }
    } else {
      (*pOt_x).pOt_mode=11;
    }
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(92));
    (*pOt_x).pOt_mode=11;
  }
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_MOp_COCE
#if pOt__ANSI_C
  (pOt_INTEGER pOt_op, struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_op, pOt_x)
  pOt_INTEGER pOt_op;
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_f;
  pOt_LONGINT pOt_a;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form);
  if(( (*pOt_x).pOt_mode>11)) {
    pOt_Mark_COCS((pOt_INTEGER)(126));
  }
  switch(pOt_op) {
  case 5:
    if(( pOt_f!=((pOt_INTEGER)(2)))) {
      pOt_Mark_COCS((pOt_INTEGER)(94));
      (*pOt_x).pOt_mode=8;
      (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);
    }
  break;
  case 6:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      pOt_MOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(96));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 7:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      pOt_MOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(-(*pOt_x).pOt_intval);
          pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
        } else {
          (*pOt_x).pOt_fltval=(pOt_LONGREAL)(-(*pOt_x).pOt_fltval);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f==((pOt_INTEGER)(9)))) {
      pOt_MOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        pOt_a=(pOt_LONGINT)(-1);
        (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_LONGINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_a),(pOt_LONGINT)((*pOt_x).pOt_intval),6));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(97));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 8:
    if(( pOt_f!=((pOt_INTEGER)(2)))) {
      pOt_Mark_COCS((pOt_INTEGER)(95));
      (*pOt_x).pOt_mode=8;
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);
      (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
    }
  break;
  case 32:
    if(( pOt_f==((pOt_INTEGER)(2)))) {
      pOt_MOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_LONGINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(1),(pOt_LONGINT)((*pOt_x).pOt_intval),6));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(98));
      (*pOt_x).pOt_mode=11;
    }
  break;
  default:;
    pOt__halt(__FILE__,__LINE__,0x10);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_convertII_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_Struct_COCT pOt_typ)
#else
  (pOt_x, pOt_typ)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_Struct_COCT pOt_typ;

#endif
{
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_typ;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

  if(( (*pOt_x).pOt_mode<8)) {
    (*pOt_x).pOt_mode=11;
  }
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_typ);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_convertRI_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_Struct_COCT pOt_typ)
#else
  (pOt_x, pOt_typ)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_Struct_COCT pOt_typ;

#endif
{
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_typ;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

  if(( (*pOt_x).pOt_mode<8)) {
    (*pOt_x).pOt_mode=11;
  }
  if(( (*pOt_x).pOt_mode==8)) {
    (*pOt_x).pOt_fltval=(pOt_LONGREAL)((*pOt_x).pOt_intval);
  }
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_typ);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_convertRR_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*pOt_x).pOt_mode<8)) {
    (*pOt_x).pOt_mode=11;
  }
  (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_lrltyp_COCT);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}



static pOt_INTEGER (*pOt_op_Op_COCE);
static struct pOt__tag_3_COCT *pOt_x_Op_COCE, *pOt_y_Op_COCE;
static pOt_INTEGER (*pOt_f_Op_COCE), (*pOt_g_Op_COCE);
static pOt_Struct_COCT (*pOt_p_Op_COCE), (*pOt_q_Op_COCE), (*pOt_r_Op_COCE);
static pOt_BOOLEAN (*pOt_consts_Op_COCE);
static pOt_SET (*pOt_convert_Op_COCE);

extern void pOt_Op_COCE pOt__ARGS((pOt_INTEGER , struct pOt__tag_3_COCT *, struct pOt__tag_3_COCT *));




static pOt_BOOLEAN pOt_strings_Op_COCE()
{
  pOt_BOOLEAN pOt__retval;
  pOt_BOOLEAN pOt_first, pOt_second;
  int pOt__gc_enabled_prev;
  pOt__gc_enabled_prev=pOt__gc_enabled;
  pOt__gc_enabled=0;

  pOt_first=(((((((((*pOt_f_Op_COCE)==((pOt_INTEGER)(15))))||(((*pOt_f_Op_COCE)==((pOt_INTEGER)(16))))))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x_Op_COCE).pOt_typ))).pOt_BaseTyp))).pOt_form==3))))||(((*pOt_f_Op_COCE)==((pOt_INTEGER)(10))))));
  pOt_second=(((((((((*pOt_g_Op_COCE)==((pOt_INTEGER)(15))))||(((*pOt_g_Op_COCE)==((pOt_INTEGER)(16))))))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y_Op_COCE).pOt_typ))).pOt_BaseTyp))).pOt_form==3))))||(((*pOt_g_Op_COCE)==((pOt_INTEGER)(10))))));
  pOt__retval =(((pOt_first&&pOt_second)||((pOt_first&&(((*pOt_y_Op_COCE).pOt_mode==8)))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y_Op_COCE).pOt_typ))).pOt_form==3))))||(((((*pOt_x_Op_COCE).pOt_mode==8))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x_Op_COCE).pOt_typ))).pOt_form==3)))&&pOt_second));
  goto pOt__Epilogue;

  pOt__halt(__FILE__,__LINE__,0x11);
pOt__Epilogue:;
  pOt__gc_enabled=pOt__gc_enabled_prev;
  return pOt__retval;
}

extern void pOt_Op_COCE
#if pOt__ANSI_C
  (pOt_INTEGER pOt_op, struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_op, pOt_x, pOt_y)
  pOt_INTEGER pOt_op;
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  pOt_INTEGER (*pOt_op_);
  struct pOt__tag_3_COCT *pOt_x_, *pOt_y_;
  pOt_INTEGER pOt_f, (*pOt_f_), pOt_g, (*pOt_g_);
  pOt_Struct_COCT pOt_p, (*pOt_p_), pOt_q, (*pOt_q_), pOt_r, (*pOt_r_);
  pOt_BOOLEAN pOt_consts, (*pOt_consts_);
  pOt_SET pOt_convert, (*pOt_convert_);
  struct {void *next, *vars[0x4];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x3]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x2]=&pOt_p;
  pOt__gc_ptrs.vars[0x1]=&pOt_q;
  pOt__gc_ptrs.vars[0x0]=&pOt_r;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_op_=pOt_op_Op_COCE;
  pOt_op_Op_COCE=&pOt_op;
  pOt_x_=pOt_x_Op_COCE;
  pOt_x_Op_COCE=pOt_x;
  pOt_y_=pOt_y_Op_COCE;
  pOt_y_Op_COCE=pOt_y;
  pOt_f_=pOt_f_Op_COCE;
  pOt_f_Op_COCE=&pOt_f;
  pOt_g_=pOt_g_Op_COCE;
  pOt_g_Op_COCE=&pOt_g;
  pOt_p_=pOt_p_Op_COCE;
  pOt_p_Op_COCE=&pOt_p;
  pOt_p=pOt_NIL;
  pOt_q_=pOt_q_Op_COCE;
  pOt_q_Op_COCE=&pOt_q;
  pOt_q=pOt_NIL;
  pOt_r_=pOt_r_Op_COCE;
  pOt_r_Op_COCE=&pOt_r;
  pOt_r=pOt_NIL;
  pOt_consts_=pOt_consts_Op_COCE;
  pOt_consts_Op_COCE=&pOt_consts;
  pOt_convert_=pOt_convert_Op_COCE;
  pOt_convert_Op_COCE=&pOt_convert;

  if(( (*pOt_x).pOt_mode>11)) {
    pOt_Mark_COCS((pOt_INTEGER)(126));
  }
  if(( (*pOt_y).pOt_mode>11)) {
    pOt_Mark_COCS((pOt_INTEGER)(126));
  }
  pOt_convert=(pOt_SET)0x0L;
  if(( (*pOt_x).pOt_typ!=(*pOt_y).pOt_typ)) {
    pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form);
    pOt_g=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form);
    switch(pOt_f) {
    case 0:
    break;
    case 4:
      if(( pOt_g==((pOt_INTEGER)(5)))) {
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(6)))) {
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(7)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(8)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 5:
      if(( pOt_g==((pOt_INTEGER)(4)))) {
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(6)))) {
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(7)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(8)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 6:
      if(( pOt_g==((pOt_INTEGER)(4)))) {
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(5)))) {
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(7)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(8)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ));
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 7:
      if(( pOt_g==((pOt_INTEGER)(4)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(5)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(6)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(8)))) {
        pOt_convertRR_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 8:
      if(( pOt_g==((pOt_INTEGER)(4)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(5)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(6)))) {
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ));
      } else if(( pOt_g==((pOt_INTEGER)(7)))) {
        pOt_convertRR_COCE((struct pOt__tag_3_COCT*)&(*pOt_y));
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 11:
      if(( pOt_g!=((pOt_INTEGER)(13)))) {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 13:
      if(( pOt_g==((pOt_INTEGER)(13)))) {
        pOt_p=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp);
        pOt_q=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_BaseTyp);
        if(((((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_p))).pOt_form==17))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_q))).pOt_form==17)))) {
          if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_p))).pOt_n<(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_q))).pOt_n)) {
            pOt_r=(struct pOt__tag_2_COCT*)(pOt_p);
            pOt_p=(struct pOt__tag_2_COCT*)(pOt_q);
            pOt_q=(struct pOt__tag_2_COCT*)(pOt_r);
            pOt_convert|=((unsigned long)1<<(1));
            (*pOt_y).pOt_typ=(struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ);
          } else {
            pOt_convert|=((unsigned long)1<<(0));
            (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ);
          }
          for(;;) {
            if((((pOt_p!=pOt_q))&&((pOt_p!=pOt_NIL)))); else break;
            pOt_p=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_p))).pOt_BaseTyp);
          }
          if(( pOt_p==pOt_NIL)) {
            pOt_Mark_COCS((pOt_INTEGER)(100));
          }
        } else {
          pOt_Mark_COCS((pOt_INTEGER)(100));
        }
      } else if(( pOt_g!=((pOt_INTEGER)(11)))) {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 14:
      if(( pOt_g!=((pOt_INTEGER)(11)))) {
        pOt_Mark_COCS((pOt_INTEGER)(100));
      }
    break;
    case 15:
    case 16:
    case 3:
    case 10:
    break;
    case 1:
    case 2:
    case 9:
    case 12:
    case 17:
      pOt_Mark_COCS((pOt_INTEGER)(100));
    break;
    default:;
      pOt__halt(__FILE__,__LINE__,0x10);
    }
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      if(( pOt_f==((pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form)))) {
        pOt_convert|=((unsigned long)1<<(1));
      } else {
        pOt_convert|=((unsigned long)1<<(0));
      }
    }
  }
  pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form);
  pOt_g=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form);
  pOt_consts=((((*pOt_x).pOt_mode==8))&&(((*pOt_y).pOt_mode==8)));
  switch(pOt_op) {
  case 1:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      pOt_NumOp_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_rngchk_COCE);
      if(((((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,pOt_f)&(pOt_SET)0x70L)))&&pOt_consts)) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)((*pOt_y).pOt_intval),6));
        pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f==((pOt_INTEGER)(9)))) {
      pOt_SetOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)(((pOt_LONGINT)(pOt_LONGINT)(((pOt_SET)(pOt_SET)(*pOt_x).pOt_intval)&((pOt_SET)(pOt_SET)(*pOt_y).pOt_intval))));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(101));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 2:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form)&(pOt_SET)0x70L))) {
        pOt_convert=(pOt_convert|(pOt_SET)0x3L);
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)(pOt_realtyp_COCT));
        pOt_convertRI_COCE((struct pOt__tag_3_COCT*)&(*pOt_y),(struct pOt__tag_2_COCT*)(pOt_realtyp_COCT));
      }
      pOt_NumOp_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_rngchk_COCE);
      (*pOt_x).pOt_mode=11;
    } else if(( pOt_f==((pOt_INTEGER)(9)))) {
      pOt_SetOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)(((pOt_LONGINT)(pOt_LONGINT)(((pOt_SET)(pOt_SET)(*pOt_x).pOt_intval)^((pOt_SET)(pOt_SET)(*pOt_y).pOt_intval))));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(102));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 3:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_NumOp_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_rngchk_COCE);
      if(pOt_consts) {
        if(( (*pOt_y).pOt_intval!=((pOt_LONGINT)(0)))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)((*pOt_y).pOt_intval),6));
          pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
        } else {
          pOt_Mark_COCS((pOt_INTEGER)(205));
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(103));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 4:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_NumOp_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_rngchk_COCE);
      if(pOt_consts) {
        if(( (*pOt_y).pOt_intval!=((pOt_LONGINT)(0)))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)((*pOt_y).pOt_intval),6));
          (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ);
        } else {
          pOt_Mark_COCS((pOt_INTEGER)(205));
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(104));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 5:
    pOt_BoolOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
    if(pOt_consts) {
      (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)((*pOt_y).pOt_intval),6));
    } else {
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 6:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      pOt_NumOp_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_rngchk_COCE);
      if(((((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,pOt_f)&(pOt_SET)0x70L)))&&pOt_consts)) {
        (*pOt_x).pOt_intval+=((*pOt_y).pOt_intval);
        pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f==((pOt_INTEGER)(9)))) {
      pOt_SetOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)(((pOt_LONGINT)(pOt_LONGINT)(((pOt_SET)(pOt_SET)(*pOt_x).pOt_intval)|((pOt_SET)(pOt_SET)(*pOt_y).pOt_intval))));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(105));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 7:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      pOt_NumOp_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y),pOt_rngchk_COCE);
      if(((((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,pOt_f)&(pOt_SET)0x70L)))&&pOt_consts)) {
        (*pOt_x).pOt_intval-=((*pOt_y).pOt_intval);
        pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f==((pOt_INTEGER)(9)))) {
      pOt_SetOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)(((pOt_LONGINT)(pOt_LONGINT)(((pOt_SET)(pOt_SET)(*pOt_x).pOt_intval)&~((pOt_SET)(pOt_SET)(*pOt_y).pOt_intval))));
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(106));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 8:
    pOt_BoolOp_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
    if((pOt_consts&&(((*pOt_x).pOt_intval==((pOt_LONGINT)(0)))))) {
      (*pOt_x).pOt_intval=(pOt_LONGINT)((*pOt_y).pOt_intval);
    } else {
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 9:
  case 10:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x6A74L))) {
      pOt_NumRel_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        if(( (((*pOt_x).pOt_intval==(*pOt_y).pOt_intval))==((pOt_op==((pOt_INTEGER)(9)))))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x180L))) {
      pOt_NumRel_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      (*pOt_x).pOt_mode=11;
    } else if(pOt_strings_Op_COCE()) {
      pOt_StrRel_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      (*pOt_x).pOt_mode=11;
    } else if(( ((pOt_f==((pOt_INTEGER)(3))))!=((pOt_g==((pOt_INTEGER)(3)))))) {
      pOt_Mark_COCS((pOt_INTEGER)(100));
      (*pOt_x).pOt_mode=11;
    } else if(( pOt_f==((pOt_INTEGER)(3)))) {
      pOt_CharRel_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        if(( (((*pOt_x).pOt_intval==(*pOt_y).pOt_intval))==((pOt_op==((pOt_INTEGER)(9)))))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(107));
      (*pOt_x).pOt_mode=11;
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);
  break;
  case 11:
  case 14:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_NumRel_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        if(( (((*pOt_x).pOt_intval<(*pOt_y).pOt_intval))==((pOt_op==((pOt_INTEGER)(11)))))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x180L))) {
      pOt_NumRel_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      (*pOt_x).pOt_mode=11;
    } else if(pOt_strings_Op_COCE()) {
      pOt_StrRel_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      (*pOt_x).pOt_mode=11;
    } else if(( ((pOt_f==((pOt_INTEGER)(3))))!=((pOt_g==((pOt_INTEGER)(3)))))) {
      pOt_Mark_COCS((pOt_INTEGER)(100));
      (*pOt_x).pOt_mode=11;
    } else if(( pOt_f==((pOt_INTEGER)(3)))) {
      pOt_CharRel_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        if(( (((*pOt_x).pOt_intval<(*pOt_y).pOt_intval))==((pOt_op==((pOt_INTEGER)(11)))))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(108));
      (*pOt_x).pOt_mode=11;
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);
  break;
  case 12:
  case 13:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_NumRel_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        if(( (((*pOt_x).pOt_intval<=(*pOt_y).pOt_intval))==((pOt_op==((pOt_INTEGER)(12)))))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x180L))) {
      pOt_NumRel_COCX((pOt_INTEGER)(pOt_op),pOt_convert,(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      (*pOt_x).pOt_mode=11;
    } else if(pOt_strings_Op_COCE()) {
      pOt_StrRel_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      (*pOt_x).pOt_mode=11;
    } else if(( ((pOt_f==((pOt_INTEGER)(3))))!=((pOt_g==((pOt_INTEGER)(3)))))) {
      pOt_Mark_COCS((pOt_INTEGER)(100));
      (*pOt_x).pOt_mode=11;
    } else if(( pOt_f==((pOt_INTEGER)(3)))) {
      pOt_CharRel_COCX((pOt_INTEGER)(pOt_op),(struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_3_COCT*)&(*pOt_y));
      if(pOt_consts) {
        if(( (((*pOt_x).pOt_intval<=(*pOt_y).pOt_intval))==((pOt_op==((pOt_INTEGER)(12)))))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        (*pOt_x).pOt_mode=11;
      }
    } else if(( pOt_f!=((pOt_INTEGER)(0)))) {
      pOt_Mark_COCS((pOt_INTEGER)(108));
      (*pOt_x).pOt_mode=11;
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);
  break;
  default:;
    pOt__halt(__FILE__,__LINE__,0x10);
  }

pOt__Epilogue:;
  pOt_op_Op_COCE=pOt_op_;
  pOt_x_Op_COCE=pOt_x_;
  pOt_y_Op_COCE=pOt_y_;
  pOt_f_Op_COCE=pOt_f_;
  pOt_g_Op_COCE=pOt_g_;
  pOt_p_Op_COCE=pOt_p_;
  pOt_q_Op_COCE=pOt_q_;
  pOt_r_Op_COCE=pOt_r_;
  pOt_consts_Op_COCE=pOt_consts_;
  pOt_convert_Op_COCE=pOt_convert_;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_TkFct_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_fctno)
#else
  (pOt_x, pOt_fctno)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_INTEGER pOt_fctno;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_StProcPfx_COCX((pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_StPar1_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_fctno)
#else
  (pOt_x, pOt_fctno)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_INTEGER pOt_fctno;

#endif
{
  pOt_INTEGER pOt_f;
  pOt_LONGINT pOt_s;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form);
  switch(pOt_fctno) {
  case 0:
    if((((pOt_f==((pOt_INTEGER)(4))))&&(((*pOt_x).pOt_mode==8)))) {
      if(( (*pOt_x).pOt_intval<((pOt_LONGINT)(32)))) {
        pOt_Mark_COCS((pOt_INTEGER)(218));
      } else {
        pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(217));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 1:
    if(( (*pOt_x).pOt_mode>=8)) {
      pOt_Mark_COCS((pOt_INTEGER)(112));
    } else if(( pOt_f==((pOt_INTEGER)(13)))) {
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp);
      pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form);
      if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x28000L))) {
        pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(111));
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 2:
    if((((pOt_f==((pOt_INTEGER)(4))))&&(((*pOt_x).pOt_mode==8)))) {
      if((((((pOt_LONGINT)(0))<=(*pOt_x).pOt_intval))&&(((*pOt_x).pOt_intval<((pOt_LONGINT)(16)))))) {
        pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(219));
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(217));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 3:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x1F0L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        switch(pOt_f) {
        case 4:
          if(( (*pOt_x).pOt_intval<((pOt_LONGINT)(0)))) {
            if(( (*pOt_x).pOt_intval!=pOt_MinSInt_COCE)) {
              (*pOt_x).pOt_intval=(pOt_LONGINT)(-(*pOt_x).pOt_intval);
            } else {
              pOt_Mark_COCS((pOt_INTEGER)(203));
            }
          }
        break;
        case 5:
          if(( (*pOt_x).pOt_intval<((pOt_LONGINT)(0)))) {
            if(( (*pOt_x).pOt_intval!=pOt_MinInt_COCE)) {
              (*pOt_x).pOt_intval=(pOt_LONGINT)(-(*pOt_x).pOt_intval);
            } else {
              pOt_Mark_COCS((pOt_INTEGER)(203));
            }
          }
        break;
        case 6:
          if(( (*pOt_x).pOt_intval<((pOt_LONGINT)(0)))) {
            if(( (*pOt_x).pOt_intval!=pOt_MinLInt_COCE)) {
              (*pOt_x).pOt_intval=(pOt_LONGINT)(-(*pOt_x).pOt_intval);
            } else {
              pOt_Mark_COCS((pOt_INTEGER)(203));
            }
          }
        break;
        case 7:
        case 8:
          if(( (*pOt_x).pOt_fltval<((pOt_LONGREAL)((pOt_REAL)0.0)))) {
            (*pOt_x).pOt_intval=(pOt_LONGINT)(-(*pOt_x).pOt_intval);
          }
        break;
        default:;
          pOt__halt(__FILE__,__LINE__,0x10);
        }
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 4:
    if(( pOt_f==((pOt_INTEGER)(3)))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        (*pOt_x).pOt_intval=(pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt__cap((unsigned char)(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((*pOt_x).pOt_intval)))));
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_chartyp_COCT);
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 5:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0xAL))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode!=8)) {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_mode=11;
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_inttyp_COCT);
  break;
  case 6:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x180L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        if((((((pOt_LONGREAL)(pOt_MinLInt_COCE))<=(*pOt_x).pOt_fltval))&&(((*pOt_x).pOt_fltval<=((pOt_LONGREAL)(pOt_MaxLInt_COCE)))))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt__rngchk_li(__FILE__,__LINE__,(*pOt_x).pOt_fltval));
        } else {
          pOt_Mark_COCS((pOt_INTEGER)(203));
        }
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_mode=11;
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
  break;
  case 7:
    if(( (*pOt_x).pOt_mode==13)) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(110));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
    (*pOt_x).pOt_mode=11;
  break;
  case 8:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        if((pOt_BOOLEAN)(0x1&((*pOt_x).pOt_intval))) {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(1);
        } else {
          (*pOt_x).pOt_intval=(pOt_LONGINT)(0);
        }
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_mode=11;
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);
  break;
  case 9:
    if(( (*pOt_x).pOt_mode<8)) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(127));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
    (*pOt_x).pOt_mode=11;
  break;
  case 10:
    if(( (*pOt_x).pOt_mode==13)) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      (*pOt_x).pOt_mode=8;
      switch(pOt_f) {
      case 2:
      case 3:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MinChar_COCE);
      break;
      case 4:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MinSInt_COCE);
      break;
      case 5:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MinInt_COCE);
      break;
      case 6:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MinLInt_COCE);
      break;
      case 7:
        (*pOt_x).pOt_fltval=(pOt_LONGREAL)(pOt_MinReal_COCE);
      break;
      case 8:
        (*pOt_x).pOt_fltval=(pOt_LONGREAL)(pOt_MinLReal_COCE);
      break;
      case 9:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MinSet_COCE);
        (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_inttyp_COCT);
      break;
      case 0:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
        pOt_Mark_COCS((pOt_INTEGER)(111));
      break;
      default:;
        pOt__halt(__FILE__,__LINE__,0x10);
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(110));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 11:
    if(( (*pOt_x).pOt_mode==13)) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      (*pOt_x).pOt_mode=8;
      switch(pOt_f) {
      case 2:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MaxBool_COCE);
      break;
      case 3:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MaxChar_COCE);
      break;
      case 4:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MaxSInt_COCE);
      break;
      case 5:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MaxInt_COCE);
      break;
      case 6:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MaxLInt_COCE);
      break;
      case 7:
        (*pOt_x).pOt_fltval=(pOt_LONGREAL)(pOt_MaxReal_COCE);
      break;
      case 8:
        (*pOt_x).pOt_fltval=(pOt_LONGREAL)(pOt_MaxLReal_COCE);
      break;
      case 9:
        (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_MaxSet_COCE);
        (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_inttyp_COCT);
      break;
      case 0:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
        pOt_Mark_COCS((pOt_INTEGER)(111));
      break;
      default:;
        pOt__halt(__FILE__,__LINE__,0x10);
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(110));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 12:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        if((((((pOt_LONGINT)(0))>(*pOt_x).pOt_intval))||(((*pOt_x).pOt_intval>=((pOt_LONGINT)(256)))))) {
          pOt_Mark_COCS((pOt_INTEGER)(203));
        }
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
        (*pOt_x).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_mode=11;
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_chartyp_COCT);
  break;
  case 13:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x160L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      switch(pOt_f) {
      case 5:
        if(( (*pOt_x).pOt_mode==8)) {
          pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
          if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form!=4)) {
            pOt_Mark_COCS((pOt_INTEGER)(203));
            (*pOt_x).pOt_mode=11;
          }
        } else {
          if(( (*pOt_x).pOt_mode>11)) {
            pOt_Mark_COCS((pOt_INTEGER)(126));
          }
          (*pOt_x).pOt_mode=11;
        }
        (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_sinttyp_COCT);
      break;
      case 6:
        if(( (*pOt_x).pOt_mode==8)) {
          pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
          if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==6)) {
            pOt_Mark_COCS((pOt_INTEGER)(203));
            (*pOt_x).pOt_mode=11;
          }
        } else {
          if(( (*pOt_x).pOt_mode>11)) {
            pOt_Mark_COCS((pOt_INTEGER)(126));
          }
          (*pOt_x).pOt_mode=11;
        }
        (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_inttyp_COCT);
      break;
      case 8:
        if(( (*pOt_x).pOt_mode==8)) {
          if(((((*pOt_x).pOt_fltval>pOt_MaxReal_COCE))||(((*pOt_x).pOt_fltval<pOt_MinReal_COCE)))) {
            pOt_Mark_COCS((pOt_INTEGER)(203));
            (*pOt_x).pOt_mode=11;
          }
        } else {
          if(( (*pOt_x).pOt_mode>11)) {
            pOt_Mark_COCS((pOt_INTEGER)(126));
          }
          (*pOt_x).pOt_mode=11;
        }
        (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_realtyp_COCT);
      break;
      default:;
        pOt__halt(__FILE__,__LINE__,0x10);
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 14:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0xB0L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
      switch(pOt_f) {
      case 4:
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)(pOt_inttyp_COCT));
      break;
      case 5:
        pOt_convertII_COCE((struct pOt__tag_3_COCT*)&(*pOt_x),(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT));
      break;
      case 7:
        pOt_convertRR_COCE((struct pOt__tag_3_COCT*)&(*pOt_x));
      break;
      default:;
        pOt__halt(__FILE__,__LINE__,0x10);
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_mode=11;
    }
  break;
  case 15:
    if((((pOt_f==((pOt_INTEGER)(2))))&&(((*pOt_x).pOt_mode==8)))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 16:
  case 17:
    if(( (*pOt_x).pOt_mode>=8)) {
      pOt_Mark_COCS((pOt_INTEGER)(112));
    } else if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  case 18:
  case 19:
    if(( (*pOt_x).pOt_mode>=8)) {
      pOt_Mark_COCS((pOt_INTEGER)(112));
    } else if(( (*pOt_x).pOt_typ==pOt_settyp_COCT)) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_settyp_COCT);
    }
  break;
  case 20:
    if((((pOt_f==((pOt_INTEGER)(16))))||((pOt_f==((pOt_INTEGER)(15)))))) {
      if(( (*pOt_x).pOt_mode>=8)) {
        pOt_Mark_COCS((pOt_INTEGER)(127));
      }
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(131));
    }
  break;
  case 21:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  case 22:
  case 23:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x270L))) {
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  case 24:
  case 25:
  case 26:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
      } else if(( pOt_f==((pOt_INTEGER)(6)))) {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(111));
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  case 27:
    if(( (*pOt_x).pOt_mode==13)) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(110));
    }
  break;
  case 28:
    if(( (*pOt_x).pOt_mode>=8)) {
      pOt_Mark_COCS((pOt_INTEGER)(112));
    } else if(( pOt_f==((pOt_INTEGER)(13)))) {
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  case 29:
    if((((((((pOt_f==((pOt_INTEGER)(15))))||((pOt_f==((pOt_INTEGER)(16))))))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp))).pOt_form==3))))||((pOt_f==((pOt_INTEGER)(10)))))) {
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  case 30:
    if(( pOt_f==((pOt_INTEGER)(6)))) {
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
      pOt_StPar1Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  default:;
    pOt__halt(__FILE__,__LINE__,0x10);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_StPar2_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_p, struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_fctno)
#else
  (pOt_p, pOt_x, pOt_fctno)
  struct pOt__tag_3_COCT *pOt_p, *pOt_x;
  pOt_INTEGER pOt_fctno;

#endif
{
  pOt_INTEGER pOt_f, pOt_L;
  struct pOt__tag_3_COCT pOt_y;
  pOt_Struct_COCT pOt_typ;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=&pOt_y;
  pOt__gc_ptrs.vars[0x0]=&pOt_typ;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt__init_var((pOt__TypDsc**)&pOt_y,(pOt__TypDsc*)&pOt__td_3_COCT);
  pOt_typ=pOt_NIL;

  pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form);
  if(( pOt_fctno<((pOt_INTEGER)(16)))) {
    pOt_Mark_COCS((pOt_INTEGER)(64));
    goto pOt__Epilogue;
  }
  switch(pOt_fctno) {
  case 16:
  case 17:
    if(( (*pOt_x).pOt_typ!=(*pOt_p).pOt_typ)) {
      if(((((*pOt_x).pOt_mode==8))&&(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form)&(pOt_SET)0x70L))))) {
        pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
        (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*pOt_p).pOt_typ);
      } else {
        pOt_Mark_COCS((pOt_INTEGER)(111));
      }
    } else {
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
    }
    (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 18:
  case 19:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      if(( (*pOt_x).pOt_mode==8)) {
        if(((((*pOt_x).pOt_intval<((pOt_LONGINT)(0))))||((pOt_MaxSet_COCE<(*pOt_x).pOt_intval)))) {
          pOt_Mark_COCS((pOt_INTEGER)(202));
        }
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
      }
      pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
    (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 20:
    (*pOt_p).pOt_mode=11;
    if(((((*pOt_x).pOt_mode==8))&&((pOt_f==((pOt_INTEGER)(4)))))) {
      pOt_L=(pOt_INTEGER)((pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,(*pOt_x).pOt_intval));
      pOt_typ=(struct pOt__tag_2_COCT*)((*pOt_p).pOt_typ);
      for(;;) {
        if((((pOt_L>((pOt_INTEGER)(0))))&&(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form)&(pOt_SET)0x18000L))))); else break;
        pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_BaseTyp);
        pOt_L-=(1);
      }
      if((((pOt_L!=((pOt_INTEGER)(0))))||!(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form)&(pOt_SET)0x18000L))))) {
        pOt_Mark_COCS((pOt_INTEGER)(132));
      } else {
        pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
        if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form==16)) {
          (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
        } else {
          (*pOt_p).pOt_mode=8;
          (*pOt_p).pOt_intval=(pOt_LONGINT)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_n);
          pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_p));
        }
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  case 21:
  case 22:
  case 23:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(((((*pOt_p).pOt_mode==8))&&(((*pOt_x).pOt_mode==8)))) {
        switch(pOt_fctno) {
        case 21:
          (*pOt_p).pOt_intval=(pOt_LONGINT)(pOt__ash((*pOt_p).pOt_intval,(*pOt_x).pOt_intval));
        break;
        case 22:
          (*pOt_p).pOt_intval=(pOt_LONGINT)(pOt__lsh((*pOt_p).pOt_intval,(*pOt_x).pOt_intval));
        break;
        case 23:
          switch((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_p).pOt_typ))).pOt_form) {
          case 4:
            (*pOt_p).pOt_intval=(pOt_LONGINT)(pOt__rot((pOt_INTEGER)pOt__rngchk_si(__FILE__,__LINE__,(pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,(*pOt_p).pOt_intval)),sizeof(pOt_SHORTINT)*8,(*pOt_x).pOt_intval));
          break;
          case 5:
            (*pOt_p).pOt_intval=(pOt_LONGINT)(pOt__rot((pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,(*pOt_p).pOt_intval),sizeof(pOt_INTEGER)*8,(*pOt_x).pOt_intval));
          break;
          case 6:
          case 9:
            (*pOt_p).pOt_intval=(pOt_LONGINT)(pOt__rot((*pOt_p).pOt_intval,sizeof(pOt_LONGINT)*8,(*pOt_x).pOt_intval));
          break;
          default:;
            pOt__halt(__FILE__,__LINE__,0x10);
          }
        break;
        default:;
          pOt__halt(__FILE__,__LINE__,0x10);
        }
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
        (*pOt_p).pOt_mode=11;
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
      (*pOt_p).pOt_mode=11;
    }
  break;
  case 24:
  case 25:
    if(( (*pOt_x).pOt_mode>=8)) {
      pOt_Mark_COCS((pOt_INTEGER)(127));
    } else if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x38000L))) {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    } else {
      pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    }
    (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 26:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
        if(((((*pOt_x).pOt_intval<((pOt_LONGINT)(0))))||((((pOt_LONGINT)(7))<(*pOt_x).pOt_intval)))) {
          pOt_Mark_COCS((pOt_INTEGER)(203));
        }
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
    (*pOt_p).pOt_mode=11;
    (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_booltyp_COCT);
  break;
  case 27:
    pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    if(( (*pOt_x).pOt_mode>11)) {
      pOt_Mark_COCS((pOt_INTEGER)(126));
    }
    (*pOt_x).pOt_typ=(struct pOt__tag_2_COCT*)((*pOt_p).pOt_typ);
    (*pOt_x).pOt_qoffs=(pOt_INTEGER)((*pOt_p).pOt_qoffs);
    pOt__varrec_assign(__FILE__,__LINE__,(pOt__RecTypDsc**)& (*pOt_p),(pOt__RecTypDsc**)&(*pOt_x));
  break;
  case 28:
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*pOt_x).pOt_mode==8)) {
      } else {
        if(( (*pOt_x).pOt_mode>11)) {
          pOt_Mark_COCS((pOt_INTEGER)(126));
        }
      }
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
    (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 29:
    if((((((pOt_f==((pOt_INTEGER)(15))))||((pOt_f==((pOt_INTEGER)(16))))))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp))).pOt_form==3)))) {
      if(( (*pOt_x).pOt_mode>=8)) {
        pOt_Mark_COCS((pOt_INTEGER)(112));
      }
      pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
    (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  break;
  case 30:
    if(( pOt_f==((pOt_INTEGER)(6)))) {
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
      pOt_StPar2Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
  break;
  default:;
    pOt__halt(__FILE__,__LINE__,0x10);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_StPar3_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_p, struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_fctno)
#else
  (pOt_p, pOt_x, pOt_fctno)
  struct pOt__tag_3_COCT *pOt_p, *pOt_x;
  pOt_INTEGER pOt_fctno;

#endif
{
  pOt_INTEGER pOt_f;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_f=(pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form);
  if(( pOt_fctno==((pOt_INTEGER)(30)))) {
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_f)&(pOt_SET)0x70L))) {
      if(( (*pOt_x).pOt_mode>11)) {
        pOt_Mark_COCS((pOt_INTEGER)(126));
      }
      pOt_StPar3Sfx_COCX((struct pOt__tag_3_COCT*)&(*pOt_p),(pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
    } else {
      pOt_Mark_COCS((pOt_INTEGER)(111));
    }
    (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(64));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_StFct_COCE
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_p, pOt_INTEGER pOt_fctno, pOt_INTEGER pOt_parno)
#else
  (pOt_p, pOt_fctno, pOt_parno)
  struct pOt__tag_3_COCT *pOt_p;
  pOt_INTEGER pOt_fctno, pOt_parno;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( pOt_fctno>=((pOt_INTEGER)(16)))) {
    if((((((pOt_fctno==((pOt_INTEGER)(16))))||((pOt_fctno==((pOt_INTEGER)(17))))))&&((pOt_parno==((pOt_INTEGER)(1)))))) {
      pOt_StFakeSfx_COCX((pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_notyp_COCT);
    } else if((((pOt_fctno==((pOt_INTEGER)(20))))&&((pOt_parno==((pOt_INTEGER)(1)))))) {
      pOt_StFakeSfx_COCX((pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);
      if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_p).pOt_typ))).pOt_form==16)) {
        (*pOt_p).pOt_mode=11;
        (*pOt_p).pOt_typ=(struct pOt__tag_2_COCT*)(pOt_linttyp_COCT);
      } else {
        (*pOt_p).pOt_mode=8;
        (*pOt_p).pOt_intval=(pOt_LONGINT)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_p).pOt_typ))).pOt_n);
        pOt_SetIntType_COCE((struct pOt__tag_3_COCT*)&(*pOt_p));
      }
    } else if((((pOt_parno<((pOt_INTEGER)(2))))||(((pOt_fctno==((pOt_INTEGER)(30))))&&((pOt_parno<((pOt_INTEGER)(3))))))) {
      pOt_Mark_COCS((pOt_INTEGER)(65));
    }
  } else if(( pOt_parno<((pOt_INTEGER)(1)))) {
    pOt_Mark_COCS((pOt_INTEGER)(65));
  }
  pOt_StFctSfx_COCX((pOt_INTEGER)(pOt_fctno),pOt_rngchk_COCE);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}

void pOt_COCE__body()
{
  static int pOt_COCE__loaded=0;
  if(!pOt_COCE__loaded){
    pOt_COCE__loaded=1;

    pOt_COCS__body();
    pOt_COCT__body();
    pOt_COCQ__body();
    pOt_COCN__body();
    pOt_COCJ__body();
    pOt_COCX__body();

    pOt__gc_ptrs.next=pOt__gc_root;
    pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;


    pOt_inxchk_COCE=(pOt_BOOLEAN)1;
    pOt_rngchk_COCE=(pOt_BOOLEAN)1;
    pOt_nilchk_COCE=(pOt_BOOLEAN)1;
    pOt_MinChar_COCE=(pOt_LONGINT)(0);
    pOt_MaxChar_COCE=(pOt_LONGINT)(255);
    pOt_MinBool_COCE=(pOt_LONGINT)(0);
    pOt_MaxBool_COCE=(pOt_LONGINT)(1);
    pOt_MinSInt_COCE=(pOt_LONGINT)(-128);
    pOt_MaxSInt_COCE=(pOt_LONGINT)(127);
    pOt_MinInt_COCE=(pOt_LONGINT)(-32768);
    pOt_MaxInt_COCE=(pOt_LONGINT)(32767);
    pOt_MinLInt_COCE=(pOt_LONGINT)((pOt_LONGINT)0x80000000L);
    pOt_MaxLInt_COCE=(pOt_LONGINT)(2147483647L);
    pOt_MinReal_COCE=(pOt_LONGREAL)((pOt_REAL)-3.402823E38);
    pOt_MaxReal_COCE=(pOt_LONGREAL)((pOt_REAL)3.4028230E38);
    pOt_MinLReal_COCE=(pOt_LONGREAL)(-1.79769313486231E308);
    pOt_MaxLReal_COCE=(pOt_LONGREAL)(1.797693134862311E308);
    pOt_MinSet_COCE=(pOt_LONGINT)(0);
    pOt_MaxSet_COCE=(pOt_LONGINT)(31);

  pOt__Epilogue:;
  }
}
