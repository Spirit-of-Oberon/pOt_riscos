/* This code is generated by pOt. */

#include <pOtRTL.h>
#include "Strings.h"
#include "COCS.h"
#include "COCT.h"
#include "COCQ.h"
#include "COCN.h"
#include "COCY.h"
#include "COCO.h"

#include "hi.COCD"


struct pOt__tag_0_COCD {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x4000L];
} ;
pOt__ArrTypDsc pOt__td_0_COCD= {
  1,
  0x4000L, sizeof(pOt_CHAR)
};
struct pOt__tag_1_COCD {
  pOt__PtrArrTypDsc *td;
  pOt_Struct_COCT arr[0x80L];
} ;
pOt__PtrArrTypDsc pOt__td_1_COCD= {
  2,
  0x80L, sizeof(struct pOt__tag_2_COCT*)
};

static pOt_LONGINT pOt_PtrSize_COCD;
static struct pOt__tag_0_COCD pOt_constant_COCD;
static struct pOt__tag_1_COCD pOt_RecTab_COCD;
static pOt_LONGINT pOt_conx_COCD;
static pOt_INTEGER pOt_bofrec_COCD, pOt_nofrec_COCD, pOt_recnum_COCD;

static struct {void *next, *vars[0x1];} pOt__gc_ptrs = {pOt_NIL,{
  pOt_NIL
}};
static struct {void *next, *vars[0x2];} pOt__gc_strs = {&pOt__gc_ptrs,{
  &pOt_RecTab_COCD,
  pOt_NIL
}};




extern void pOt_Init_COCD()
{
  pOt_INTEGER pOt_iofrec;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_conx_COCD=(pOt_LONGINT)(0);
  pOt_bofrec_COCD=(pOt_INTEGER)(0);
  pOt_nofrec_COCD=(pOt_INTEGER)(0);
  pOt_recnum_COCD=(pOt_INTEGER)(0);
  pOt_iofrec=(pOt_INTEGER)(0);
  for(;;) {
    if(( pOt_iofrec!=128)); else break;
    pOt_RecTab_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_iofrec)]=(struct pOt__tag_2_COCT*)(pOt_NIL);
    pOt_iofrec+=(1);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}



static pOt__DynArr *pOt_s_AllocString_COCD;
static struct pOt__tag_3_COCT *pOt_x_AllocString_COCD;
static pOt_LONGINT (*pOt_start_AllocString_COCD), (*pOt_rem_AllocString_COCD);
static pOt_INTEGER (*pOt_i_AllocString_COCD);
static pOt_CHAR (*pOt_ch_AllocString_COCD);

extern void pOt_AllocString_COCD pOt__ARGS((pOt__DynArr *, struct pOt__tag_3_COCT *));




static void pOt_FindString_AllocString_COCD()
{
  pOt_INTEGER pOt_slen, pOt_clen, pOt_i;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  (*pOt_start_AllocString_COCD)=(pOt_LONGINT)(0);
  pOt_slen=(pOt_INTEGER)((pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,pOt_Length_Strings(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_s_AllocString_COCD)))));
  for(;;) {
    if(( (*pOt_start_AllocString_COCD)==pOt_conx_COCD)) {
      goto pOt__LoopLabel_1;
    }
    pOt_clen=(pOt_INTEGER)((pOt_INTEGER)((unsigned char)pOt_constant_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x4000, (*pOt_start_AllocString_COCD))]));
    if(( pOt_slen==pOt_clen)) {
      pOt_i=(pOt_INTEGER)(pOt_slen);
      for(;;) {
        pOt_i-=(1);
        if(( pOt_i==((pOt_INTEGER)(-1)))) {
          goto pOt__LoopLabel_2;
        }
        if(((unsigned char) pOt_constant_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x4000, (pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_start_AllocString_COCD)),(pOt_LONGINT)(pOt_PtrSize_COCD),6)),(pOt_LONGINT)(pOt_i),6))]!=(unsigned char)(*((pOt_CHAR*)(((char *)pOt_s_AllocString_COCD+sizeof(pOt__ArrTypDsc*)+sizeof(pOt_CHAR)*pOt__inxchk(__FILE__,__LINE__,(*(pOt_s_AllocString_COCD))->nofel,pOt_i))))))) {
          goto pOt__LoopLabel_2;
        }
      }
    pOt__LoopLabel_2:;
      if(( pOt_i==((pOt_INTEGER)(-1)))) {
        goto pOt__LoopLabel_1;
      }
    }
    (*pOt_start_AllocString_COCD)+=((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_PtrSize_COCD),(pOt_LONGINT)(pOt_clen),6)),(pOt_LONGINT)(1),6));
    (*pOt_rem_AllocString_COCD)=(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_start_AllocString_COCD)),(pOt_LONGINT)(pOt_PtrSize_COCD),6));
    if(( (*pOt_rem_AllocString_COCD)!=((pOt_LONGINT)(0)))) {
      (*pOt_start_AllocString_COCD)+=((pOt_LONGINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_PtrSize_COCD),(pOt_LONGINT)((*pOt_rem_AllocString_COCD)),6));
    }
  }
pOt__LoopLabel_1:;

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}

extern void pOt_AllocString_COCD
#if pOt__ANSI_C
  (pOt__DynArr *pOt_s, struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_s, pOt_x)
  pOt__DynArr *pOt_s;
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt__DynArr *pOt_s_;
  struct pOt__tag_3_COCT *pOt_x_;
  pOt_LONGINT pOt_start, (*pOt_start_), pOt_rem, (*pOt_rem_);
  pOt_INTEGER pOt_i, (*pOt_i_);
  pOt_CHAR pOt_ch, (*pOt_ch_);
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt_s_=pOt_s_AllocString_COCD;
  pOt_s_AllocString_COCD=pOt_s;
  pOt_x_=pOt_x_AllocString_COCD;
  pOt_x_AllocString_COCD=pOt_x;
  pOt_start_=pOt_start_AllocString_COCD;
  pOt_start_AllocString_COCD=&pOt_start;
  pOt_rem_=pOt_rem_AllocString_COCD;
  pOt_rem_AllocString_COCD=&pOt_rem;
  pOt_i_=pOt_i_AllocString_COCD;
  pOt_i_AllocString_COCD=&pOt_i;
  pOt_ch_=pOt_ch_AllocString_COCD;
  pOt_ch_AllocString_COCD=&pOt_ch;

  pOt_FindString_AllocString_COCD();
  (*pOt_x).pOt_intval+=((pOt_LONGINT)pOt__mulchk(__FILE__,__LINE__,(pOt_LONGINT)(((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_start),(pOt_LONGINT)(1),6))),(pOt_LONGINT)(256),6));
  if(( pOt_start==pOt_conx_COCD)) {
    pOt_i=(pOt_INTEGER)(-1);
    pOt_conx_COCD+=(pOt_PtrSize_COCD);
    for(;;) {
      pOt_i+=(1);
      pOt_ch=(*((pOt_CHAR*)(((char *)pOt_s+sizeof(pOt__ArrTypDsc*)+sizeof(pOt_CHAR)*pOt__inxchk(__FILE__,__LINE__,(*(pOt_s))->nofel,pOt_i)))));
      if(( pOt_conx_COCD>=((pOt_LONGINT)(16384)))) {
        pOt_Mark_COCS((pOt_INTEGER)(230));
        pOt_conx_COCD=(pOt_LONGINT)(0);
      }
      pOt_constant_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x4000, pOt_conx_COCD)]=pOt_ch;
      pOt_conx_COCD+=(1);
      if(((unsigned char) pOt_ch==(unsigned char)'\0')) break;
    }
    pOt_rem=(pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_conx_COCD),(pOt_LONGINT)(pOt_PtrSize_COCD),6));
    if(( pOt_rem!=((pOt_LONGINT)(0)))) {
      pOt_conx_COCD+=((pOt_LONGINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_PtrSize_COCD),(pOt_LONGINT)(pOt_rem),6));
      if(( pOt_conx_COCD>=((pOt_LONGINT)(16384)))) {
        pOt_Mark_COCS((pOt_INTEGER)(230));
        pOt_conx_COCD=(pOt_LONGINT)(0);
      }
    }
    pOt_constant_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x4000, pOt_start)]=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)(pOt_i));
  }

pOt__Epilogue:;
  pOt_s_AllocString_COCD=pOt_s_;
  pOt_x_AllocString_COCD=pOt_x_;
  pOt_start_AllocString_COCD=pOt_start_;
  pOt_rem_AllocString_COCD=pOt_rem_;
  pOt_i_AllocString_COCD=pOt_i_;
  pOt_ch_AllocString_COCD=pOt_ch_;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_2_COCD {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x9L];
} ;
static pOt__ArrTypDsc pOt__td_2_COCD= {
  1,
  0x9L, sizeof(pOt_CHAR)
};

static struct pOt__tag_2_COCD (*pOt_s_InitStrings_COCD);
static pOt_LONGINT (*pOt_i_InitStrings_COCD);

extern void pOt_InitStrings_COCD pOt__ARGS((void));




static void pOt_WriteChar_InitStrings_COCD
#if pOt__ANSI_C
  (pOt_CHAR pOt_c)
#else
  (pOt_c)
  pOt_CHAR pOt_c;

#endif
{
  pOt_INTEGER pOt_i;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, 0)]='\'';
  if((((((unsigned char)pOt_c==(unsigned char)'\\'))||(((unsigned char)pOt_c==(unsigned char)'\'')))||(((unsigned char)pOt_c==(unsigned char)'\"')))) {
    (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, 1)]='\\';
    (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, 2)]=pOt_c;
    pOt_i=(pOt_INTEGER)(3);
  } else if((((((unsigned char)'\0'<=(unsigned char)pOt_c))&&(((unsigned char)pOt_c<=(unsigned char)'\37')))||((((unsigned char)'\177'<=(unsigned char)pOt_c))&&(((unsigned char)pOt_c<=(unsigned char)'\377'))))) {
    (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, 1)]='\\';
    (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, 2)]='\0';
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_s_InitStrings_COCD)));
    pOt_FromLInt_Strings((pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_c)),8,(pOt__ArrTypDsc**)&(*pOt_s_InitStrings_COCD));
    pOt_i=(pOt_INTEGER)(0);
    for(;;) {
      if(((unsigned char) (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, pOt_i)]!=(unsigned char)'\0')); else break;
      pOt_i+=(1);
    }
  } else {
    (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, 1)]=pOt_c;
    pOt_i=(pOt_INTEGER)(2);
  }
  (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, pOt_i)]='\'';
  (*pOt_s_InitStrings_COCD).arr[pOt__inxchk(__FILE__,__LINE__,0x9, (pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(1),5))]='\0';
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_s_InitStrings_COCD)));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}

extern void pOt_InitStrings_COCD()
{
  struct pOt__tag_2_COCD pOt_s, (*pOt_s_);
  pOt_LONGINT pOt_i, (*pOt_i_);
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt_s_=pOt_s_InitStrings_COCD;
  pOt_s_InitStrings_COCD=&pOt_s;
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_2_COCD);
  pOt_i_=pOt_i_InitStrings_COCD;
  pOt_i_InitStrings_COCD=&pOt_i;

  if(( pOt_conx_COCD!=((pOt_LONGINT)(0)))) {
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x0L],&pOt__str_td[0x22]))));
    pOt_FromLInt_Strings((pOt_LONGINT)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_conx_COCD),(pOt_LONGINT)(2048),6)),16,(pOt__ArrTypDsc**)&pOt_s);
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x28L],&pOt__str_td[0x4]))));
    pOt_Wrap_COCO();
    pOt_Indent_COCO();
    pOt_i=(pOt_LONGINT)(0);
    for(;;) {
      if(( pOt_i!=pOt_conx_COCD)); else break;
      pOt_WriteChar_InitStrings_COCD(pOt_constant_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x4000, pOt_i)]);
      pOt_i+=(1);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
      if(( (pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(16),6)==((pOt_LONGINT)(0)))) {
        pOt_Wrap_COCO();
      }
    }
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x3CL],&pOt__str_td[0x1]))));
    pOt_Wrap_COCO();
    pOt_Undent_COCO();
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x44L],&pOt__str_td[0x2]))));
    pOt_Wrap_COCO();
  }

pOt__Epilogue:;
  pOt_s_InitStrings_COCD=pOt_s_;
  pOt_i_InitStrings_COCD=pOt_i_;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_AllocTypDesc_COCD
#if pOt__ANSI_C
  (pOt_Struct_COCT pOt_typ)
#else
  (pOt_typ)
  pOt_Struct_COCT pOt_typ;

#endif
{
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_typ;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

  (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_descr=(pOt_INTEGER)(pOt_recnum_COCD);
  pOt_recnum_COCD+=(1);
  if(((((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form==17))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_n>((pOt_LONGINT)(16)))))) {
    pOt_Mark_COCS((pOt_INTEGER)(233));
  } else if(( pOt_nofrec_COCD<128)) {
    pOt_RecTab_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_nofrec_COCD)]=(struct pOt__tag_2_COCT*)(pOt_typ);
    pOt_nofrec_COCD+=(1);
  } else {
    pOt_Mark_COCS((pOt_INTEGER)(223));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_DeclTypDescs_COCD()
{
  pOt_INTEGER pOt_iofrec;
  pOt_Struct_COCT pOt_typ;
  pOt_INTEGER pOt_np;
  struct pOt__tag_3_COCT pOt_x;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_typ;
  pOt__gc_strs.vars[0x0]=&pOt_x;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_typ=pOt_NIL;
  pOt__init_var((pOt__TypDsc**)&pOt_x,(pOt__TypDsc*)&pOt__td_3_COCT);

  pOt_iofrec=(pOt_INTEGER)(0);
  for(;;) {
    if(( pOt_iofrec!=pOt_nofrec_COCD)); else break;
    pOt_typ=(struct pOt__tag_2_COCT*)(pOt_RecTab_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_iofrec)]);
    if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_ref!=((pOt_INTEGER)(0)))) {
      pOt_Struct_COCY((struct pOt__tag_2_COCT*)(pOt_typ));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x4CL],&pOt__str_td[0x6]))));
      pOt_Separate_COCO();
      switch((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form) {
      case 15:
        switch((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_BaseTyp))).pOt_form) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
          pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x58L],&pOt__str_td[0xE]))));
        break;
        case 13:
        case 14:
          pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x6CL],&pOt__str_td[0x11]))));
        break;
        case 10:
        case 11:
        case 12:
        break;
        case 15:
        case 17:
          pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x84L],&pOt__str_td[0x11]))));
        break;
        case 16:
        break;
        default:;
          pOt__halt(__FILE__,__LINE__,0x10);
        }
      break;
      case 17:
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x9CL],&pOt__str_td[0xE]))));
      break;
      default:;
        pOt__halt(__FILE__,__LINE__,0x10);
      }
      pOt_Separate_COCO();
      pOt_Mark_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_CTDName_COCN((struct pOt__tag_2_COCT*)(pOt_typ),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
      pOt_Release_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xB0L],&pOt__str_td[0x1]))));
      pOt_Wrap_COCO();
    }
    pOt_iofrec+=(1);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_3_COCD {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x9L];
} ;
static pOt__ArrTypDsc pOt__td_3_COCD= {
  1,
  0x9L, sizeof(pOt_CHAR)
};
struct pOt__tag_4_COCD {
  pOt__PtrArrTypDsc *td;
  pOt_Struct_COCT arr[0x10L];
} ;
static pOt__PtrArrTypDsc pOt__td_4_COCD= {
  2,
  0x10L, sizeof(struct pOt__tag_2_COCT*)
};


extern void pOt_InitTypDescs_COCD()
{
  pOt_INTEGER pOt_iofrec;
  pOt_Struct_COCT pOt_typ;
  pOt_INTEGER pOt_np;
  struct pOt__tag_3_COCT pOt_x;
  struct pOt__tag_3_COCD pOt_s;
  pOt_INTEGER pOt_mode, pOt_nstr, pOt_nptr, pOt_npro, pOt_ifld, pOt_nfld;
  pOt_Object_COCT pOt_fld;
  pOt_INTEGER pOt_iext;
  pOt_Struct_COCT pOt_base;
  struct pOt__tag_4_COCD pOt_basetyps;
  struct {void *next, *vars[0x4];} pOt__gc_ptrs;
  struct {void *next, *vars[0x3];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x3]=pOt_NIL;
  pOt__gc_strs.vars[0x2]=pOt_NIL;
  pOt__gc_ptrs.vars[0x2]=&pOt_typ;
  pOt__gc_strs.vars[0x1]=&pOt_x;
  pOt__gc_ptrs.vars[0x1]=&pOt_fld;
  pOt__gc_ptrs.vars[0x0]=&pOt_base;
  pOt__gc_strs.vars[0x0]=&pOt_basetyps;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_typ=pOt_NIL;
  pOt__init_var((pOt__TypDsc**)&pOt_x,(pOt__TypDsc*)&pOt__td_3_COCT);
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_3_COCD);
  pOt_fld=pOt_NIL;
  pOt_base=pOt_NIL;
  pOt__init_var((pOt__TypDsc**)&pOt_basetyps,(pOt__TypDsc*)&pOt__td_4_COCD);

  pOt_iofrec=(pOt_INTEGER)(pOt_bofrec_COCD);
  for(;;) {
    if(( pOt_iofrec!=pOt_nofrec_COCD)); else break;
    pOt_typ=(struct pOt__tag_2_COCT*)(pOt_RecTab_COCD.arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_iofrec)]);
    pOt_Struct_COCY((struct pOt__tag_2_COCT*)(pOt_typ));
    if(( pOt_level_COCT!=((pOt_INTEGER)(0)))) {
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xB8L],&pOt__str_td[0x6]))));
      pOt_Separate_COCO();
    }
    switch((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form) {
    case 15:
      switch((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_BaseTyp))).pOt_form) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 9:
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x58L],&pOt__str_td[0xE]))));
        pOt_mode=(pOt_INTEGER)(1);
      break;
      case 13:
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x6CL],&pOt__str_td[0x11]))));
        pOt_mode=(pOt_INTEGER)(2);
      break;
      case 14:
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x6CL],&pOt__str_td[0x11]))));
        pOt_mode=(pOt_INTEGER)(3);
      break;
      case 10:
      case 11:
      case 12:
      break;
      case 15:
      case 17:
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x84L],&pOt__str_td[0x11]))));
        pOt_mode=(pOt_INTEGER)(4);
      break;
      case 16:
      break;
      default:;
        pOt__halt(__FILE__,__LINE__,0x10);
      }
    break;
    case 17:
      pOt_mode=(pOt_INTEGER)(0);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xC4L],&pOt__str_td[0x8]))));
      pOt_Wrap_COCO();
      pOt_Indent_COCO();
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xD4L],&pOt__str_td[0x11]))));
      pOt_Wrap_COCO();
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xECL],&pOt__str_td[0x11]))));
      pOt_Wrap_COCO();
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x104L],&pOt__str_td[0x25]))));
      pOt_Wrap_COCO();
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x130L],&pOt__str_td[0x26]))));
      pOt_Wrap_COCO();
      pOt_nstr=(pOt_INTEGER)(0);
      pOt_nptr=(pOt_INTEGER)(0);
      pOt_npro=(pOt_INTEGER)(0);
      pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_link);
      for(;;) {
        if(( pOt_fld!=pOt_NIL)); else break;
        if(pOt__cmpss((pOt_CHAR*)& (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_name,&pOt__strcon_buf[0x15CL],0xA)) {
          if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ))).pOt_form)&(pOt_SET)0x28000L))) {
            pOt_nstr+=(1);
          } else if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ))).pOt_form==13)) {
            pOt_nptr+=(1);
          } else if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ))).pOt_form==14)) {
            pOt_npro+=(1);
          }
        }
        pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_next);
      }
      pOt_nfld=(pOt_INTEGER)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_nstr),(pOt_LONGINT)(pOt_nptr),5)),(pOt_LONGINT)(pOt_npro),5));
      if(( pOt_nfld!=((pOt_INTEGER)(0)))) {
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x164L],&pOt__str_td[0x37]))));
        pOt_FromLInt_Strings((pOt_LONGINT)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_nstr),(pOt_LONGINT)(pOt_nptr),5)),(pOt_LONGINT)(pOt_npro),5)),16,(pOt__ArrTypDsc**)&pOt_s);
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1A0L],&pOt__str_td[0x2]))));
        pOt_Wrap_COCO();
      }
      pOt_Undent_COCO();
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1A8L],&pOt__str_td[0x1]))));
    break;
    default:;
      pOt__halt(__FILE__,__LINE__,0x10);
    }
    pOt_Separate_COCO();
    pOt_Mark_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
    pOt_CTDName_COCN((struct pOt__tag_2_COCT*)(pOt_typ),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
    pOt_Release_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1B0L],&pOt__str_td[0x3]))));
    pOt_Wrap_COCO();
    pOt_Indent_COCO();
    pOt_FromLInt_Strings((pOt_LONGINT)(pOt_mode),10,(pOt__ArrTypDsc**)&pOt_s);
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
    pOt_Wrap_COCO();
    switch((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form) {
    case 15:
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1B8L],&pOt__str_td[0x2]))));
      pOt_FromLInt_Strings((pOt_LONGINT)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_n),16,(pOt__ArrTypDsc**)&pOt_s);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1C0L],&pOt__str_td[0x3]))));
      pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_CTSize_COCN((struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_BaseTyp),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
      pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      if(( pOt_mode==((pOt_INTEGER)(4)))) {
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
        pOt_Wrap_COCO();
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1C8L],&pOt__str_td[0xF]))));
        pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
        pOt_CTDName_COCN((struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_BaseTyp),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
        pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      }
      pOt_Wrap_COCO();
    break;
    case 17:
      pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_CTSize_COCN((struct pOt__tag_2_COCT*)(pOt_typ),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
      pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
      pOt_Wrap_COCO();
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1B8L],&pOt__str_td[0x2]))));
      pOt_FromLInt_Strings((pOt_LONGINT)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_n),16,(pOt__ArrTypDsc**)&pOt_s);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1DCL],&pOt__str_td[0x2]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1B8L],&pOt__str_td[0x2]))));
      pOt_FromLInt_Strings((pOt_LONGINT)(pOt_nstr),16,(pOt__ArrTypDsc**)&pOt_s);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1DCL],&pOt__str_td[0x2]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1B8L],&pOt__str_td[0x2]))));
      pOt_FromLInt_Strings((pOt_LONGINT)(pOt_nptr),16,(pOt__ArrTypDsc**)&pOt_s);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1DCL],&pOt__str_td[0x2]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1B8L],&pOt__str_td[0x2]))));
      pOt_FromLInt_Strings((pOt_LONGINT)(pOt_npro),16,(pOt__ArrTypDsc**)&pOt_s);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
      pOt_Wrap_COCO();
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1E4L],&pOt__str_td[0x1]))));
      pOt_iext=(pOt_INTEGER)((pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_n));
      pOt_base=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_BaseTyp);
      for(;;) {
        if(( pOt_iext!=((pOt_INTEGER)(0)))); else break;
        pOt_iext-=(1);
        pOt_basetyps.arr[pOt__inxchk(__FILE__,__LINE__,0x10, pOt_iext)]=(struct pOt__tag_2_COCT*)(pOt_base);
        pOt_base=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_base))).pOt_BaseTyp);
      }
      if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_n!=((pOt_LONGINT)(0)))) {
        for(;;) {
          pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1ECL],&pOt__str_td[0x12]))));
          pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
          pOt_CTDName_COCN((struct pOt__tag_2_COCT*)(pOt_basetyps.arr[pOt__inxchk(__FILE__,__LINE__,0x10, pOt_iext)]),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
          pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
          pOt_iext+=(1);
          if(( pOt_iext==(pOt_LONGINT)pOt__rngchk_i(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_n))) {
            goto pOt__LoopLabel_1;
          }
          pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1DCL],&pOt__str_td[0x2]))));
        }
      pOt__LoopLabel_1:;
      }
      if(( pOt_iext!=((pOt_INTEGER)(16)))) {
        if(( pOt_iext==((pOt_INTEGER)(0)))) {
          pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x204L],&pOt__str_td[0x7]))));
          pOt_iext+=(1);
        }
        for(;;) {
          if(( pOt_iext!=((pOt_INTEGER)(16)))); else break;
          pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x210L],&pOt__str_td[0x9]))));
          pOt_iext+=(1);
        }
      }
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1A8L],&pOt__str_td[0x1]))));
      if(( pOt_nfld!=((pOt_INTEGER)(0)))) {
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
        pOt_Wrap_COCO();
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1E4L],&pOt__str_td[0x1]))));
        pOt_Wrap_COCO();
        pOt_Indent_COCO();
        pOt_x.pOt_mode=12;
        pOt_x.pOt_mnolev=(pOt_INTEGER)(0);
        pOt_ifld=(pOt_INTEGER)(0);
        if(( pOt_nstr!=((pOt_INTEGER)(0)))) {
          pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_link);
          for(;;) {
            if(((pOt__cmpss((pOt_CHAR*)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_name,&pOt__strcon_buf[0x15CL],0xA))&&(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ))).pOt_form)&(pOt_SET)0x28000L))))) {
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x220L],&pOt__str_td[0x11]))));
              pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_CTDenoter_COCN((struct pOt__tag_2_COCT*)(pOt_typ),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
              pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x238L],&pOt__str_td[0x6]))));
              pOt_x.pOt_obj=(struct pOt__tag_1_COCT*)(pOt_fld);
              pOt_x.pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ);
              pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
              pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x244L],&pOt__str_td[0x11]))));
              pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_CTDName_COCN((struct pOt__tag_2_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
              pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1A8L],&pOt__str_td[0x1]))));
              pOt_ifld+=(1);
              if(( pOt_ifld!=pOt_nfld)) {
                pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
              }
            }
            if(( pOt_ifld==pOt_nstr)) {
              goto pOt__LoopLabel_2;
            }
            pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_next);
          }
        pOt__LoopLabel_2:;
          pOt_Wrap_COCO();
        }
        if(( pOt_nptr!=((pOt_INTEGER)(0)))) {
          pOt_nptr+=(pOt_nstr);
          pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_link);
          for(;;) {
            if(((pOt__cmpss((pOt_CHAR*)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_name,&pOt__strcon_buf[0x15CL],0xA))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ))).pOt_form==13)))) {
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x220L],&pOt__str_td[0x11]))));
              pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_CTDenoter_COCN((struct pOt__tag_2_COCT*)(pOt_typ),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
              pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x238L],&pOt__str_td[0x6]))));
              pOt_x.pOt_obj=(struct pOt__tag_1_COCT*)(pOt_fld);
              pOt_x.pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ);
              pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
              pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x25CL],&pOt__str_td[0xA]))));
              pOt_ifld+=(1);
              if(( pOt_ifld!=pOt_nfld)) {
                pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
              }
            }
            if(( pOt_ifld==pOt_nptr)) {
              goto pOt__LoopLabel_3;
            }
            pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_next);
          }
        pOt__LoopLabel_3:;
          pOt_Wrap_COCO();
        }
        if(( pOt_npro!=((pOt_INTEGER)(0)))) {
          pOt_npro+=(pOt_nptr);
          pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_link);
          for(;;) {
            if(((pOt__cmpss((pOt_CHAR*)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_name,&pOt__strcon_buf[0x15CL],0xA))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ))).pOt_form==14)))) {
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x220L],&pOt__str_td[0x11]))));
              pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_CTDenoter_COCN((struct pOt__tag_2_COCT*)(pOt_typ),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
              pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x238L],&pOt__str_td[0x6]))));
              pOt_x.pOt_obj=(struct pOt__tag_1_COCT*)(pOt_fld);
              pOt_x.pOt_typ=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_typ);
              pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
              pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x25CL],&pOt__str_td[0xA]))));
              pOt_ifld+=(1);
              if(( pOt_ifld!=pOt_nfld)) {
                pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
              }
            }
            if(( pOt_ifld==pOt_npro)) {
              goto pOt__LoopLabel_4;
            }
            pOt_fld=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_fld))).pOt_next);
          }
        pOt__LoopLabel_4:;
          pOt_Wrap_COCO();
        }
        pOt_Undent_COCO();
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1A8L],&pOt__str_td[0x1]))));
      }
      pOt_Wrap_COCO();
    break;
    default:;
      pOt__halt(__FILE__,__LINE__,0x10);
    }
    pOt_Undent_COCO();
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x44L],&pOt__str_td[0x2]))));
    pOt_Wrap_COCO();
    pOt_iofrec+=(1);
  }
  if(( pOt_level_COCT==((pOt_INTEGER)(0)))) {
    pOt_bofrec_COCD=(pOt_INTEGER)(pOt_nofrec_COCD);
  } else {
    pOt_nofrec_COCD=(pOt_INTEGER)(pOt_bofrec_COCD);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}

void pOt_COCD__body()
{
  static int pOt_COCD__loaded=0;
  if(!pOt_COCD__loaded){
    pOt_COCD__loaded=1;

    pOt_Strings__body();
    pOt_COCS__body();
    pOt_COCT__body();
    pOt_COCQ__body();
    pOt_COCN__body();
    pOt_COCY__body();
    pOt_COCO__body();

    pOt__gc_ptrs.next=pOt__gc_root;
    pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

    pOt__init_var((pOt__TypDsc**)&pOt_constant_COCD,(pOt__TypDsc*)&pOt__td_0_COCD);
    pOt__init_var((pOt__TypDsc**)&pOt_RecTab_COCD,(pOt__TypDsc*)&pOt__td_1_COCD);

    pOt_PtrSize_COCD=(pOt_LONGINT)(4);

  pOt__Epilogue:;
  }
}
