/* This code is generated by pOt. */

#include <pOtRTL.h>
#include "Strings.h"
#include "Reals.h"
#include "COCT.h"
#include "COCQ.h"
#include "COCN.h"

#include "hi.COCJ"




static struct {void *next, *vars[0x1];} pOt__gc_ptrs = {pOt_NIL,{
  pOt_NIL
}};
static struct {void *next, *vars[0x1];} pOt__gc_strs = {&pOt__gc_ptrs,{
  pOt_NIL
}};




extern void pOt_DeRef_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x0L],&pOt__str_td[0x2]))),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x8L],&pOt__str_td[0x1]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_NilPtr_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x10L],&pOt__str_td[0x2]))),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt_CTDenoter_COCN((struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ),(pOt_INTEGER)(pOt_np),&pOt_np);
  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18L],&pOt__str_td[0x1F]))),(pOt_INTEGER)(pOt_np),&pOt_np);
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x3CL],&pOt__str_td[0x2]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_InRef_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x44L],&pOt__str_td[0x2]))),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x8L],&pOt__str_td[0x1]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Cast_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x10L],&pOt__str_td[0x2]))),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt_CTDenoter_COCN((struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ),(pOt_INTEGER)(pOt_np),&pOt_np);
  if(( (*pOt_x).pOt_mode==3)) {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x4CL],&pOt__str_td[0x3]))),(pOt_INTEGER)(pOt_np),&pOt_np);
  } else {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x54L],&pOt__str_td[0x2]))),(pOt_INTEGER)(pOt_np),&pOt_np);
  }
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x3CL],&pOt__str_td[0x2]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_0_COCJ {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x9L];
} ;
static pOt__ArrTypDsc pOt__td_0_COCJ= {
  1,
  0x9L, sizeof(pOt_CHAR)
};


extern void pOt_ArrInxPfx_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_BOOLEAN pOt_inxchk)
#else
  (pOt_x, pOt_inxchk)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_BOOLEAN pOt_inxchk;

#endif
{
  pOt_LONGINT pOt_len;
  struct pOt__tag_0_COCJ pOt_s;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_0_COCJ);

  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x5CL],&pOt__str_td[0x5]))));
  if(pOt_inxchk) {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x68L],&pOt__str_td[0x20]))));
    pOt_FromLInt_Strings((pOt_LONGINT)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_n),16,(pOt__ArrTypDsc**)&pOt_s);
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x90L],&pOt__str_td[0x2]))));
  } else {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x98L],&pOt__str_td[0x1]))));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_ArrInxSfx_COCJ()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xA0L],&pOt__str_td[0x2]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_1_COCJ {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x9L];
} ;
static pOt__ArrTypDsc pOt__td_1_COCJ= {
  1,
  0x9L, sizeof(pOt_CHAR)
};


extern void pOt_DynArrInxPfx_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_BOOLEAN pOt_inxchk)
#else
  (pOt_x, pOt_inxchk)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_BOOLEAN pOt_inxchk;

#endif
{
  pOt_INTEGER pOt_np;
  struct pOt__tag_1_COCJ pOt_s;
  pOt_Struct_COCT pOt_btyp;
  struct pOt__tag_3_COCT pOt_y;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_btyp;
  pOt__gc_strs.vars[0x0]=&pOt_y;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_1_COCJ);
  pOt_btyp=pOt_NIL;
  pOt__init_var((pOt__TypDsc**)&pOt_y,(pOt__TypDsc*)&pOt__td_3_COCT);

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x98L],&pOt__str_td[0x1]))),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  if(( (*pOt_x).pOt_intval==((pOt_LONGINT)(0)))) {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xA8L],&pOt__str_td[0x8]))),(pOt_INTEGER)(pOt_np),&pOt_np);
  }
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xB8L],&pOt__str_td[0x19]))));
  pOt_btyp=(struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_BaseTyp);
  if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_btyp))).pOt_form==16)) {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xD8L],&pOt__str_td[0x3]))));
    pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);
    if(( (*pOt_x).pOt_intval!=((pOt_LONGINT)(0)))) {
      pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE0L],&pOt__str_td[0x3]))));
      pOt_FromLInt_Strings((pOt_LONGINT)((*pOt_x).pOt_intval),16,(pOt__ArrTypDsc**)&pOt_s);
      pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE8L],&pOt__str_td[0x1]))));
      pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
    }
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xF0L],&pOt__str_td[0xA]))));
  } else {
    pOt_CTSize_COCN((struct pOt__tag_2_COCT*)(pOt_btyp),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);
  }
  if(pOt_inxchk) {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x100L],&pOt__str_td[0x22]))));
    pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);
    if(( (*pOt_x).pOt_intval!=((pOt_LONGINT)(0)))) {
      pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE0L],&pOt__str_td[0x3]))));
      pOt_FromLInt_Strings((pOt_LONGINT)((*pOt_x).pOt_intval),16,(pOt__ArrTypDsc**)&pOt_s);
      pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
    }
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x128L],&pOt__str_td[0xA]))));
  } else {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x138L],&pOt__str_td[0x2]))));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_DynArrInxSfx_COCJ()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x3CL],&pOt__str_td[0x2]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_BytArrInxPfx_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_BOOLEAN pOt_inxchk)
#else
  (pOt_x, pOt_inxchk)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_BOOLEAN pOt_inxchk;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(pOt_inxchk) {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x140L],&pOt__str_td[0x24]))));
    pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x16CL],&pOt__str_td[0x5]))));
  } else {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x178L],&pOt__str_td[0x7]))));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_BytArrInxSfx_COCJ()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x8L],&pOt__str_td[0x1]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Field_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_Object_COCT pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_Object_COCT pOt_y;

#endif
{
  pOt_INTEGER pOt_np, pOt_ix;
  struct pOt__tag_3_COCT pOt_z;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_y;
  pOt__gc_strs.vars[0x0]=&pOt_z;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt__init_var((pOt__TypDsc**)&pOt_z,(pOt__TypDsc*)&pOt__td_3_COCT);

  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x184L],&pOt__str_td[0x1]))));
  pOt_ix=(pOt_INTEGER)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_y))).pOt_mnolev);
  for(;;) {
    if((((pOt_LONGINT)( pOt_ix))!=(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_n)); else break;
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18CL],&pOt__str_td[0x5]))));
    pOt_ix+=(1);
  }
  pOt_z.pOt_mode=12;
  pOt_z.pOt_obj=(struct pOt__tag_1_COCT*)(pOt_y);
  pOt_z.pOt_mnolev=(pOt_INTEGER)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_y))).pOt_mnolev);
  pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&pOt_z,(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_2_COCJ {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x9L];
} ;
static pOt__ArrTypDsc pOt__td_2_COCJ= {
  1,
  0x9L, sizeof(pOt_CHAR)
};


extern void pOt_TypGuard_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y, pOt_BOOLEAN pOt_typchk)
#else
  (pOt_x, pOt_y, pOt_typchk)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;
  pOt_BOOLEAN pOt_typchk;

#endif
{
  pOt_INTEGER pOt_np;
  struct pOt__tag_2_COCJ pOt_s;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_2_COCJ);

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x10L],&pOt__str_td[0x2]))),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_y),(pOt_INTEGER)(pOt_np),&pOt_np);
  if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form==17)) {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x198L],&pOt__str_td[0x2]))),(pOt_INTEGER)(pOt_np),&pOt_np);
  } else {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x8L],&pOt__str_td[0x1]))),(pOt_INTEGER)(pOt_np),&pOt_np);
  }
  if(pOt_typchk) {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1A0L],&pOt__str_td[0x30]))),(pOt_INTEGER)(pOt_np),&pOt_np);
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1D8L],&pOt__str_td[0x13]))));
    if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form==17)) {
      pOt_CTDName_COCN((struct pOt__tag_2_COCT*)((*pOt_y).pOt_typ),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);
    } else {
      pOt_CTDName_COCN((struct pOt__tag_2_COCT*)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_BaseTyp),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);
    }
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1F0L],&pOt__str_td[0x3]))));
    if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_form==17)) {
      pOt_FromLInt_Strings((pOt_LONGINT)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_n),16,(pOt__ArrTypDsc**)&pOt_s);
    } else {
      pOt_FromLInt_Strings((pOt_LONGINT)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_y).pOt_typ))).pOt_BaseTyp))).pOt_n),16,(pOt__ArrTypDsc**)&pOt_s);
    }
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE8L],&pOt__str_td[0x1]))));
  } else {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x98L],&pOt__str_td[0x1]))),(pOt_INTEGER)(pOt_np),&pOt_np);
  }
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x3CL],&pOt__str_td[0x2]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_3_COCJ {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x80L];
} ;
static pOt__ArrTypDsc pOt__td_3_COCJ= {
  1,
  0x80L, sizeof(pOt_CHAR)
};

static struct pOt__tag_3_COCT *pOt_x_CConstValue_COCJ;
static pOt_INTEGER (*pOt_pos_CConstValue_COCJ), *pOt_nextpos_CConstValue_COCJ;
static struct pOt__tag_3_COCJ (*pOt_CConstBuf_CConstValue_COCJ);

extern void pOt_CConstValue_COCJ pOt__ARGS((struct pOt__tag_3_COCT *, pOt_INTEGER , pOt_INTEGER *));




static void pOt_WriteChar_CConstValue_COCJ
#if pOt__ANSI_C
  (pOt_CHAR pOt_c)
#else
  (pOt_c)
  pOt_CHAR pOt_c;

#endif
{
  pOt_INTEGER pOt_i;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, 0)]='\'';
  if((((((unsigned char)pOt_c==(unsigned char)'\\'))||(((unsigned char)pOt_c==(unsigned char)'\'')))||(((unsigned char)pOt_c==(unsigned char)'\"')))) {
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, 1)]='\\';
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, 2)]=pOt_c;
    pOt_i=(pOt_INTEGER)(3);
  } else if((((((unsigned char)'\0'<=(unsigned char)pOt_c))&&(((unsigned char)pOt_c<=(unsigned char)'\37')))||((((unsigned char)'\177'<=(unsigned char)pOt_c))&&(((unsigned char)pOt_c<=(unsigned char)'\377'))))) {
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, 1)]='\\';
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, 2)]='\0';
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    pOt_FromLInt_Strings((pOt_LONGINT)((pOt_INTEGER)((unsigned char)pOt_c)),8,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ));
    pOt_i=(pOt_INTEGER)(0);
    for(;;) {
      if(((unsigned char) (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_i)]!=(unsigned char)'\0')); else break;
      pOt_i+=(1);
    }
  } else {
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, 1)]=pOt_c;
    pOt_i=(pOt_INTEGER)(2);
  }
  (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_i)]='\'';
  (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, (pOt_INTEGER)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_i),(pOt_LONGINT)(1),5))]='\0';
  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_WriteLInt_CConstValue_COCJ
#if pOt__ANSI_C
  (pOt_INTEGER pOt_form, pOt_LONGINT pOt_li)
#else
  (pOt_form, pOt_li)
  pOt_INTEGER pOt_form;
  pOt_LONGINT pOt_li;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( pOt_form==((pOt_INTEGER)(2)))) {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1F8L],&pOt__str_td[0xD]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  } else if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, pOt_form)&(pOt_SET)0x6000L))) {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x20CL],&pOt__str_td[0x7]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  }
  if(( pOt_li!=(pOt_LONGINT)0x80000000L)) {
    pOt_FromLInt_Strings((pOt_LONGINT)(pOt_li),10,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ));
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    if(( pOt_form==((pOt_INTEGER)(6)))) {
      pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE8L],&pOt__str_td[0x1]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    }
  } else {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x218L],&pOt__str_td[0xD]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    pOt_FromLInt_Strings((pOt_LONGINT)(pOt_li),16,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ));
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x22CL],&pOt__str_td[0x2]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE8L],&pOt__str_td[0x1]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_WriteLReal_CConstValue_COCJ
#if pOt__ANSI_C
  (pOt_INTEGER pOt_form, pOt_LONGREAL pOt_lr)
#else
  (pOt_form, pOt_lr)
  pOt_INTEGER pOt_form;
  pOt_LONGREAL pOt_lr;

#endif
{
  pOt_INTEGER pOt_expo;
  pOt_LONGINT pOt_mant;
  pOt_INTEGER pOt_i, pOt_len;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  switch(pOt_form) {
  case 7:
    pOt_len=(pOt_INTEGER)(9);
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x234L],&pOt__str_td[0xA]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  break;
  case 8:
    pOt_len=(pOt_INTEGER)(17);
  break;
  default:;
    pOt__halt(__FILE__,__LINE__,0x10);
  }
  if(( pOt_lr!=((pOt_LONGREAL)(0)))) {
    pOt_i=(pOt_INTEGER)(0);
    if(( pOt_lr<((pOt_LONGREAL)((pOt_REAL)0.0)))) {
      (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_i)]='-';
      pOt_i+=(1);
      pOt_lr=(pOt_LONGREAL)(-pOt_lr);
    }
    pOt_expo=(pOt_INTEGER)(0);
    if(( pOt_lr>((pOt_LONGREAL)((pOt_REAL)1.0000000)))) {
      for(;;) {
        if(( pOt_lr>=((pOt_LONGREAL)((pOt_REAL)1.0000000E1)))); else break;
        pOt_lr=(pOt_LONGREAL)(pOt_lr/((pOt_LONGREAL)((pOt_REAL)1.0000000E1)));
        pOt_expo+=(1);
      }
    } else {
      for(;;) {
        if(( pOt_lr<((pOt_LONGREAL)((pOt_REAL)1.0000000)))); else break;
        pOt_lr=(pOt_LONGREAL)(pOt_lr*((pOt_LONGREAL)((pOt_REAL)1.0000000E1)));
        pOt_expo-=(1);
      }
    }
    pOt_mant=(pOt_LONGINT)(pOt__rngchk_li(__FILE__,__LINE__,pOt_lr));
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_i)]=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_mant),(pOt_LONGINT)(48),6)));
    pOt_i+=(1);
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_i)]='.';
    pOt_i+=(1);
    for(;;) {
      if(( pOt_i!=pOt_len)); else break;
      pOt_lr=(pOt_LONGREAL)((pOt_lr-((pOt_LONGREAL)(pOt_mant)))*((pOt_LONGREAL)((pOt_REAL)1.0000000E1)));
      pOt_mant=(pOt_LONGINT)(pOt__rngchk_li(__FILE__,__LINE__,pOt_lr));
      (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_i)]=(pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_mant),(pOt_LONGINT)(48),6)));
      pOt_i+=(1);
    }
    (*pOt_CConstBuf_CConstValue_COCJ).arr[pOt__inxchk(__FILE__,__LINE__,0x80, pOt_i)]='\0';
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    if(( pOt_expo!=((pOt_INTEGER)(0)))) {
      pOt_FromLInt_Strings((pOt_LONGINT)(pOt_expo),10,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ));
      pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x244L],&pOt__str_td[0x1]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
      pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
    }
  } else {
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x24CL],&pOt__str_td[0x3]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_WriteSet_CConstValue_COCJ
#if pOt__ANSI_C
  (pOt_LONGINT pOt_s)
#else
  (pOt_s)
  pOt_LONGINT pOt_s;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x254L],&pOt__str_td[0xB]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  pOt_FromLInt_Strings((pOt_LONGINT)(pOt_s),16,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ));
  pOt_Append_Strings((pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE8L],&pOt__str_td[0x1]))));
  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_WriteString_CConstValue_COCJ
#if pOt__ANSI_C
  (pOt_LONGINT pOt_inx)
#else
  (pOt_inx)
  pOt_LONGINT pOt_inx;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x264L],&pOt__str_td[0x13]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  pOt_FromLInt_Strings((pOt_LONGINT)((pOt_LONGINT)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)(pOt_inx),(pOt_LONGINT)(1),6)),16,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ));
  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_CConstBuf_CConstValue_COCJ)),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));
  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x27CL],&pOt__str_td[0x2]))),(pOt_INTEGER)((*pOt_nextpos_CConstValue_COCJ)),&(*pOt_nextpos_CConstValue_COCJ));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}

extern void pOt_CConstValue_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_INTEGER pOt_pos, pOt_INTEGER *pOt_nextpos)
#else
  (pOt_x, pOt_pos, pOt_nextpos)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_INTEGER pOt_pos, *pOt_nextpos;

#endif
{
  struct pOt__tag_3_COCT *pOt_x_;
  pOt_INTEGER (*pOt_pos_), *pOt_nextpos_;
  struct pOt__tag_3_COCJ pOt_CConstBuf, (*pOt_CConstBuf_);
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt_x_=pOt_x_CConstValue_COCJ;
  pOt_x_CConstValue_COCJ=pOt_x;
  pOt_pos_=pOt_pos_CConstValue_COCJ;
  pOt_pos_CConstValue_COCJ=&pOt_pos;
  pOt_nextpos_=pOt_nextpos_CConstValue_COCJ;
  pOt_nextpos_CConstValue_COCJ=pOt_nextpos;
  pOt_CConstBuf_=pOt_CConstBuf_CConstValue_COCJ;
  pOt_CConstBuf_CConstValue_COCJ=&pOt_CConstBuf;
  pOt__init_var((pOt__TypDsc**)&pOt_CConstBuf,(pOt__TypDsc*)&pOt__td_3_COCJ);

  (*pOt_nextpos)=(pOt_INTEGER)(pOt_pos);
  switch((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form) {
  break;
  case 3:
    pOt_WriteChar_CConstValue_COCJ((pOt_CHAR)pOt__rngchk_cn(__FILE__,__LINE__,(unsigned char)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)(256),6))));
  break;
  case 2:
  case 4:
  case 5:
  case 6:
  case 13:
  case 14:
    pOt_WriteLInt_CConstValue_COCJ((pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form),(pOt_LONGINT)((*pOt_x).pOt_intval));
  break;
  case 7:
  case 8:
    pOt_WriteLReal_CConstValue_COCJ((pOt_INTEGER)((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form),(pOt_LONGREAL)((*pOt_x).pOt_fltval));
  break;
  case 9:
    pOt_WriteSet_CConstValue_COCJ((pOt_LONGINT)((*pOt_x).pOt_intval));
  break;
  case 10:
    if(( ((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)(256),6))==((pOt_LONGINT)(0)))) {
      pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_nextpos)),&(*pOt_nextpos));
    } else {
      pOt_WriteString_CConstValue_COCJ((pOt_LONGINT)((pOt_LONGINT)pOt__divchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)(256),6)));
    }
  break;
  case 11:
    pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x284L],&pOt__str_td[0x7]))),(pOt_INTEGER)((*pOt_nextpos)),&(*pOt_nextpos));
  break;
  default:;
    pOt__halt(__FILE__,__LINE__,0x10);
  }

pOt__Epilogue:;
  pOt_x_CConstValue_COCJ=pOt_x_;
  pOt_pos_CConstValue_COCJ=pOt_pos_;
  pOt_nextpos_CConstValue_COCJ=pOt_nextpos_;
  pOt_CConstBuf_CConstValue_COCJ=pOt_CConstBuf_;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_4_COCJ {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x5L];
} ;
static pOt__ArrTypDsc pOt__td_4_COCJ= {
  1,
  0x5L, sizeof(pOt_CHAR)
};


extern void pOt_SetStrTD_COCJ
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_Struct_COCT pOt_typ)
#else
  (pOt_x, pOt_typ)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_Struct_COCT pOt_typ;

#endif
{
  pOt_INTEGER pOt_np;
  struct pOt__tag_4_COCJ pOt_s;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_typ;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_4_COCJ);

  pOt_Prepend_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x290L],&pOt__str_td[0x10]))),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2A8L],&pOt__str_td[0x2]))));
  if((((pOt_typ!=pOt_NIL))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_typ))).pOt_form==15)))) {
    pOt_CTDName_COCN((struct pOt__tag_2_COCT*)(pOt_typ),(pOt_INTEGER)(pOt_cslen_COCQ),&pOt_np);
  } else {
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2B0L],&pOt__str_td[0xE]))));
    pOt_FromLInt_Strings((pOt_LONGINT)((pOt_LONGINT)pOt__modchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_x).pOt_intval),(pOt_LONGINT)(256),6)),16,(pOt__ArrTypDsc**)&pOt_s);
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
    pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2C4L],&pOt__str_td[0x1]))));
  }
  pOt_Append_COCQ(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x8L],&pOt__str_td[0x1]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}

void pOt_COCJ__body()
{
  static int pOt_COCJ__loaded=0;
  if(!pOt_COCJ__loaded){
    pOt_COCJ__loaded=1;

    pOt_Strings__body();
    pOt_Reals__body();
    pOt_COCT__body();
    pOt_COCQ__body();
    pOt_COCN__body();

    pOt__gc_ptrs.next=pOt__gc_root;
    pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;



  pOt__Epilogue:;
  }
}
