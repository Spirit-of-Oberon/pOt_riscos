/* This code is generated by pOt. */

#include <pOtRTL.h>
#include "Strings.h"
#include "Files.h"
#include "COCS.h"
#include "COCT.h"
#include "COCD.h"
#include "COCQ.h"
#include "COCN.h"
#include "COCJ.h"
#include "COCO.h"
#include "COCH.h"
#include "COCY.h"

#include "hi.COCC"



pOt_BOOLEAN pOt_tempsafe_COCC;

static struct {void *next, *vars[0x1];} pOt__gc_ptrs = {pOt_NIL,{
  pOt_NIL
}};
static struct {void *next, *vars[0x1];} pOt__gc_strs = {&pOt__gc_ptrs,{
  pOt_NIL
}};




static void pOt_Logo_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutComment_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x0L],&pOt__str_td[0x1E]))));
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_TermStmt_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x24L],&pOt__str_td[0x1]))));
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_OpenScope_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2CL],&pOt__str_td[0x1]))));
  pOt_Wrap_COCO();
  pOt_Indent_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CloseScope_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Undent_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x34L],&pOt__str_td[0x1]))));
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




static void pOt_InitVar_COCC
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  if(( (*pOt_x).pOt_typ!=pOt_undftyp_COCT)) {
    pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
    pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
    if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form)&(pOt_SET)0x6000L))) {
      pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x3CL],&pOt__str_td[0x8]))));
      pOt_TermStmt_COCC();
    } else if(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__, (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*pOt_x).pOt_typ))).pOt_form)&(pOt_SET)0x28000L))) {
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x4CL],&pOt__str_td[0x1E]))));
      pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x70L],&pOt__str_td[0x10]))));
      pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
      pOt_CTDName_COCN((struct pOt__tag_2_COCT*)((*pOt_x).pOt_typ),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
      pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x88L],&pOt__str_td[0x1]))));
      pOt_TermStmt_COCC();
    } else {
      pOt_Drop_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
    }
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_OuterPrologue_COCC
#if pOt__ANSI_C
  (pOt_Object_COCT pOt_proc, pOt_BOOLEAN pOt_big)
#else
  (pOt_proc, pOt_big)
  pOt_Object_COCT pOt_proc;
  pOt_BOOLEAN pOt_big;

#endif
{
  pOt_Object_COCT pOt_obj, pOt_firstvar;
  struct {void *next, *vars[0x4];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x3]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x2]=&pOt_proc;
  pOt__gc_ptrs.vars[0x1]=&pOt_obj;
  pOt__gc_ptrs.vars[0x0]=&pOt_firstvar;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_obj=pOt_NIL;
  pOt_firstvar=pOt_NIL;

  pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_next);
  pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_NIL);
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==8)) {
      pOt_ConstObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(0));
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    } else if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==13)) {
      pOt_TypeObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj));
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    } else if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=3)) {
      if((pOt_big&&((pOt_firstvar==pOt_NIL)))) {
        pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_obj);
      }
      for(;;) {
        pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
        if((((pOt_obj==pOt_NIL))||(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode>3)))) break;
      }
    }
  }
  pOt_Wrap_COCO();
  pOt_InitTypDescs_COCD();
  pOt_Wrap_COCO();
  pOt_obj=(struct pOt__tag_1_COCT*)(pOt_firstvar);
  pOt_StartVOList_COCY();
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=3)) {
      for(;;) {
        pOt_VarObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(1));
        pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
        if((((pOt_obj==pOt_NIL))||(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode>3)))) break;
      }
    } else {
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    }
  }
  pOt_StopVOList_COCY();
  pOt_Wrap_COCO();
  if(pOt_big) {
    pOt_ProcObj_COCY((struct pOt__tag_1_COCT*)(pOt_proc),(pOt_INTEGER)(1));
    pOt_Wrap_COCO();
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_ForwardDeclaration_COCC
#if pOt__ANSI_C
  (pOt_Object_COCT pOt_proc)
#else
  (pOt_proc)
  pOt_Object_COCT pOt_proc;

#endif
{
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x0]=&pOt_proc;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

  pOt_ProcObj_COCY((struct pOt__tag_1_COCT*)(pOt_proc),(pOt_INTEGER)(1));
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_InnerPrologue_COCC
#if pOt__ANSI_C
  (pOt_Object_COCT pOt_proc, pOt_BOOLEAN pOt_big)
#else
  (pOt_proc, pOt_big)
  pOt_Object_COCT pOt_proc;
  pOt_BOOLEAN pOt_big;

#endif
{
  pOt_Object_COCT pOt_firstvar, pOt_obj;
  pOt_INTEGER pOt_np;
  struct pOt__tag_3_COCT pOt_x;
  pOt_INTEGER pOt_nptr, pOt_nstr;
  struct {void *next, *vars[0x4];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x3]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_ptrs.vars[0x2]=&pOt_proc;
  pOt__gc_ptrs.vars[0x1]=&pOt_firstvar;
  pOt__gc_ptrs.vars[0x0]=&pOt_obj;
  pOt__gc_strs.vars[0x0]=&pOt_x;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_firstvar=pOt_NIL;
  pOt_obj=pOt_NIL;
  pOt__init_var((pOt__TypDsc**)&pOt_x,(pOt__TypDsc*)&pOt__td_3_COCT);

  pOt_ProcObj_COCY((struct pOt__tag_1_COCT*)(pOt_proc),(pOt_INTEGER)(0));
  pOt_OpenScope_COCC();
  if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_proc))).pOt_typ!=pOt_notyp_COCT)) {
    pOt_RetObj_COCY((struct pOt__tag_1_COCT*)(pOt_proc));
  }
  pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_next);
  pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_NIL);
  pOt_nptr=(pOt_INTEGER)(0);
  pOt_nstr=(pOt_INTEGER)(0);
  pOt_StartVOList_COCY();
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=3)) {
      if(( pOt_firstvar==pOt_NIL)) {
        pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_obj);
      }
      for(;;) {
        if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==1)) {
          if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_form==13)) {
            pOt_nptr+=(1);
          } else if(((((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_form)&(pOt_SET)0x38000L)))&&pOt_HasPtr_COCT((struct pOt__tag_2_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ)))) {
            pOt_nstr+=(1);
          }
        }
        if(!pOt_IsParam_COCT((struct pOt__tag_1_COCT*)(pOt_obj))) {
          pOt_VarObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(0));
        }
        if(pOt_big) {
          pOt_VarObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(2));
        }
        pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
        if((((pOt_obj==pOt_NIL))||(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode>3)))) break;
      }
    } else {
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    }
  }
  pOt_StopVOList_COCY();
  if((pOt_tempsafe_COCC&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_proc))).pOt_typ!=pOt_notyp_COCT)))) {
    pOt_GCLock_COCY();
  } else {
    pOt_GCNode_COCY((pOt_INTEGER)(pOt_nptr),(pOt_INTEGER)(pOt_nstr),(struct pOt__tag_1_COCT*)(pOt_firstvar));
  }
  if(( pOt_firstvar!=pOt_NIL)) {
    pOt_obj=(struct pOt__tag_1_COCT*)(pOt_firstvar);
    for(;;) {
      if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=3)) {
        for(;;) {
          pOt_ObjToItem_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(struct pOt__tag_3_COCT*)&pOt_x);
          if(pOt_big) {
            pOt_level_COCT-=(1);
            pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_CObjBaseName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
            pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_level_COCT+=(1);
            pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x90L],&pOt__str_td[0x1]))));
            pOt_level_COCT+=(1);
            pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_CObjBaseName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
            pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_level_COCT-=(1);
            pOt_TermStmt_COCC();
            pOt_level_COCT+=(1);
            pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_CObjBaseName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
            pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_level_COCT-=(1);
            if(( pOt_x.pOt_mode==1)) {
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x98L],&pOt__str_td[0x2]))));
            } else {
              pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x90L],&pOt__str_td[0x1]))));
            }
            pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_CObjBaseName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
            pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
            pOt_TermStmt_COCC();
          }
          if(!pOt_IsParam_COCT((struct pOt__tag_1_COCT*)(pOt_obj))) {
            pOt_InitVar_COCC((struct pOt__tag_3_COCT*)&pOt_x);
          }
          pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
          if((((pOt_obj==pOt_NIL))||(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode>3)))) break;
        }
      } else {
        pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
      }
      if((((pOt_obj==pOt_NIL))||(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode>13)))) break;
    }
  }
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Epilogue_COCC
#if pOt__ANSI_C
  (pOt_Object_COCT pOt_proc, pOt_BOOLEAN pOt_big)
#else
  (pOt_proc, pOt_big)
  pOt_Object_COCT pOt_proc;
  pOt_BOOLEAN pOt_big;

#endif
{
  pOt_Object_COCT pOt_obj;
  pOt_INTEGER pOt_np;
  struct pOt__tag_3_COCT pOt_x;
  struct {void *next, *vars[0x3];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x2]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_ptrs.vars[0x1]=&pOt_proc;
  pOt__gc_ptrs.vars[0x0]=&pOt_obj;
  pOt__gc_strs.vars[0x0]=&pOt_x;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_obj=pOt_NIL;
  pOt__init_var((pOt__TypDsc**)&pOt_x,(pOt__TypDsc*)&pOt__td_3_COCT);

  pOt_Wrap_COCO();
  if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_proc))).pOt_typ!=pOt_notyp_COCT)) {
    pOt_Trap_COCH(17);
    pOt_TermStmt_COCC();
  }
  pOt_Undent_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xA0L],&pOt__str_td[0xE]))));
  pOt_TermStmt_COCC();
  pOt_Indent_COCO();
  if(pOt_big) {
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_next);
    for(;;) {
      if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
      if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=3)) {
        pOt_ObjToItem_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(struct pOt__tag_3_COCT*)&pOt_x);
        pOt_level_COCT+=(1);
        pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
        pOt_CObjBaseName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
        pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
        pOt_level_COCT-=(1);
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x90L],&pOt__str_td[0x1]))));
        pOt_level_COCT-=(1);
        pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
        pOt_CObjBaseName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
        pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
        pOt_level_COCT+=(1);
        pOt_TermStmt_COCC();
      }
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    }
  }
  if((pOt_tempsafe_COCC&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_proc))).pOt_typ!=pOt_notyp_COCT)))) {
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xB4L],&pOt__str_td[0x24]))));
  } else {
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xE0L],&pOt__str_td[0x38]))));
  }
  pOt_TermStmt_COCC();
  pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_next);
  for(;;) {
    if(pOt_IsParam_COCT((struct pOt__tag_1_COCT*)(pOt_obj))); else break;
    if(((((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==1))&&(((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_form)&(pOt_SET)0x38000L))))) {
      pOt_ObjToItem_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(struct pOt__tag_3_COCT*)&pOt_x);
      pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&pOt_x,(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
      if(((((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_form==16))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_BaseTyp))).pOt_form==1)))) {
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x120L],&pOt__str_td[0x11]))));
      } else {
        pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x138L],&pOt__str_td[0x1B]))));
      }
      pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x88L],&pOt__str_td[0x1]))));
      pOt_TermStmt_COCC();
    }
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_proc))).pOt_typ!=pOt_notyp_COCT)) {
    pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
    pOt_CRetName_COCN((pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x158L],&pOt__str_td[0x6]))));
    pOt_Separate_COCO();
    pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
    pOt_TermStmt_COCC();
  }
  pOt_CloseScope_COCC();
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_ModulePrologue_COCC()
{
  pOt_Object_COCT pOt_obj, pOt_firstvar;
  pOt_INTEGER pOt_nptr, pOt_nstr;
  struct {void *next, *vars[0x3];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x2]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x1]=&pOt_obj;
  pOt__gc_ptrs.vars[0x0]=&pOt_firstvar;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_obj=pOt_NIL;
  pOt_firstvar=pOt_NIL;

  pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_next);
  pOt_Logo_COCC();
  pOt_Wrap_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x164L],&pOt__str_td[0x13]))));
  pOt_Wrap_COCO();
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==19)))); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mnolev!=((pOt_INTEGER)(0)))) {
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x17CL],&pOt__str_td[0x9]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18CL],&pOt__str_td[0x1]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_GlbMod_COCT.arr[pOt__inxchk(__FILE__,__LINE__,0x40, (pOt_INTEGER)pOt__subchk(__FILE__,__LINE__,(pOt_LONGINT)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mnolev),(pOt_LONGINT)(1),5))]))).pOt_name));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x194L],&pOt__str_td[0x2]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18CL],&pOt__str_td[0x1]))));
      pOt_Wrap_COCO();
    }
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  pOt_Wrap_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x17CL],&pOt__str_td[0x9]))));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18CL],&pOt__str_td[0x1]))));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x19CL],&pOt__str_td[0x3]))));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_name));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18CL],&pOt__str_td[0x1]))));
  pOt_Wrap_COCO();
  pOt_Wrap_COCO();
  pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_NIL);
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==8)) {
      pOt_ConstObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(0));
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    } else if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==13)) {
      pOt_TypeObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj));
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    } else if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==1)) {
      if(( pOt_firstvar==pOt_NIL)) {
        pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_obj);
      }
      for(;;) {
        pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
        if((((pOt_obj==pOt_NIL))||(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode!=1)))) break;
      }
    }
  }
  pOt_Wrap_COCO();
  pOt_InitTypDescs_COCD();
  pOt_Wrap_COCO();
  pOt_nptr=(pOt_INTEGER)(0);
  pOt_nstr=(pOt_INTEGER)(0);
  pOt_obj=(struct pOt__tag_1_COCT*)(pOt_firstvar);
  pOt_StartVOList_COCY();
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==1)) {
      if(( (*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_form==13)) {
        pOt_nptr+=(1);
      } else if(((((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_form)&(pOt_SET)0x38000L)))&&pOt_HasPtr_COCT((struct pOt__tag_2_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ)))) {
        pOt_nstr+=(1);
      }
      pOt_VarObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(0));
    }
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  pOt_StopVOList_COCY();
  pOt_Wrap_COCO();
  pOt_GCNode_COCY((pOt_INTEGER)(pOt_nptr),(pOt_INTEGER)(pOt_nstr),(struct pOt__tag_1_COCT*)(pOt_firstvar));
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_BodyPrologue_COCC()
{
  pOt_INTEGER pOt_np;
  struct pOt__tag_3_COCT pOt_x;
  pOt_Object_COCT pOt_obj;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=&pOt_x;
  pOt__gc_ptrs.vars[0x0]=&pOt_obj;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt__init_var((pOt__TypDsc**)&pOt_x,(pOt__TypDsc*)&pOt__td_3_COCT);
  pOt_obj=pOt_NIL;

  pOt_BodyObj_COCY((struct pOt__tag_1_COCT*)(pOt_topScope_COCT),(pOt_INTEGER)(0));
  pOt_OpenScope_COCC();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1A4L],&pOt__str_td[0xB]))));
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
  pOt_CBodyFlagName_COCN((struct pOt__tag_1_COCT*)(pOt_topScope_COCT),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1B4L],&pOt__str_td[0x3]))));
  pOt_Wrap_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1BCL],&pOt__str_td[0x4]))));
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
  pOt_CBodyFlagName_COCN((struct pOt__tag_1_COCT*)(pOt_topScope_COCT),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x88L],&pOt__str_td[0x1]))));
  pOt_OpenScope_COCC();
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
  pOt_CBodyFlagName_COCN((struct pOt__tag_1_COCT*)(pOt_topScope_COCT),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1C8L],&pOt__str_td[0x2]))));
  pOt_TermStmt_COCC();
  pOt_Wrap_COCO();
  pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_next);
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==19)))); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mnolev!=((pOt_INTEGER)(0)))) {
      pOt_Link_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_CBodyName_COCN((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(pOt_x.pOt_qoffs),&pOt_np);
      pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&pOt_x);
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1D0L],&pOt__str_td[0x2]))));
      pOt_TermStmt_COCC();
    }
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  pOt_Wrap_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1D8L],&pOt__str_td[0x1E]))));
  pOt_TermStmt_COCC();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x1FCL],&pOt__str_td[0x34]))));
  pOt_TermStmt_COCC();
  pOt_Wrap_COCO();
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(((((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=3))&&!pOt_IsParam_COCT((struct pOt__tag_1_COCT*)(pOt_obj)))) {
      pOt_ObjToItem_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(struct pOt__tag_3_COCT*)&pOt_x);
      pOt_InitVar_COCC((struct pOt__tag_3_COCT*)&pOt_x);
    }
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_BodyEpilogue_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Wrap_COCO();
  pOt_Undent_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0xA0L],&pOt__str_td[0xE]))));
  pOt_TermStmt_COCC();
  pOt_Indent_COCO();
  pOt_CloseScope_COCC();
  pOt_CloseScope_COCC();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Result_COCC
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x)
#else
  (pOt_x)
  struct pOt__tag_3_COCT *pOt_x;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_CRetName_COCN((pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Return_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x238L],&pOt__str_td[0x12]))));
  pOt_TermStmt_COCC();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Loop_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x250L],&pOt__str_td[0x7]))));
  pOt_Separate_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_LoopCondPfx_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x25CL],&pOt__str_td[0x3]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_LoopCondSfx_COCC
#if pOt__ANSI_C
  (pOt_BOOLEAN pOt_cont)
#else
  (pOt_cont)
  pOt_BOOLEAN pOt_cont;

#endif
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x88L],&pOt__str_td[0x1]))));
  if(pOt_cont) {
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x264L],&pOt__str_td[0x6]))));
  }
  pOt_Separate_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x270L],&pOt__str_td[0x5]))));
  pOt_TermStmt_COCC();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}


struct pOt__tag_0_COCC {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x9L];
} ;
static pOt__ArrTypDsc pOt__td_0_COCC= {
  1,
  0x9L, sizeof(pOt_CHAR)
};


extern void pOt_LoopLabel_COCC
#if pOt__ANSI_C
  (pOt_INTEGER pOt_loopno)
#else
  (pOt_loopno)
  pOt_INTEGER pOt_loopno;

#endif
{
  struct pOt__tag_0_COCC pOt_s;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_0_COCC);

  pOt_Undent_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x27CL],&pOt__str_td[0xF]))));
  pOt_FromLInt_Strings((pOt_LONGINT)(pOt_loopno),16,(pOt__ArrTypDsc**)&pOt_s);
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x290L],&pOt__str_td[0x1]))));
  pOt_TermStmt_COCC();
  pOt_Indent_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_With_COCC
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, pOt_Object_COCT pOt_wobj)
#else
  (pOt_x, pOt_wobj)
  struct pOt__tag_3_COCT *pOt_x;
  pOt_Object_COCT pOt_wobj;

#endif
{
  pOt_INTEGER pOt_np;
  struct {void *next, *vars[0x2];} pOt__gc_ptrs;
  struct {void *next, *vars[0x2];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x1]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_x;
  pOt__gc_ptrs.vars[0x0]=&pOt_wobj;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;

  pOt_StartVOList_COCY();
  pOt_VarObj_COCY((struct pOt__tag_1_COCT*)(pOt_wobj),(pOt_INTEGER)(0));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x298L],&pOt__str_td[0x2]))));
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  if(( (*pOt_x).pOt_mode==1)) {
    pOt_InRef_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
    (*pOt_x).pOt_mode=3;
  }
  pOt_Cast_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt_VarObj_COCY((struct pOt__tag_1_COCT*)(pOt_wobj),(pOt_INTEGER)(0));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x90L],&pOt__str_td[0x1]))));
  pOt_ObjToItem_COCY((struct pOt__tag_1_COCT*)(pOt_wobj),(struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt_CObjName_COCN((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
  pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2A0L],&pOt__str_td[0x1]))));
  pOt_StopVOList_COCY();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
  pOt__rm_par((pOt__TypDsc**)pOt_x);
}


struct pOt__tag_1_COCC {
  pOt__ArrTypDsc *td;
  pOt_CHAR arr[0x9L];
} ;
static pOt__ArrTypDsc pOt__td_1_COCC= {
  1,
  0x9L, sizeof(pOt_CHAR)
};


extern void pOt_Exit_COCC
#if pOt__ANSI_C
  (pOt_INTEGER pOt_loopno)
#else
  (pOt_loopno)
  pOt_INTEGER pOt_loopno;

#endif
{
  struct pOt__tag_1_COCC pOt_s;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__init_var((pOt__TypDsc**)&pOt_s,(pOt__TypDsc*)&pOt__td_1_COCC);

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2A8L],&pOt__str_td[0x14]))));
  pOt_FromLInt_Strings((pOt_LONGINT)(pOt_loopno),16,(pOt__ArrTypDsc**)&pOt_s);
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&pOt_s));
  pOt_TermStmt_COCC();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CasePfx_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2C4L],&pOt__str_td[0x7]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CaseSfx_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x88L],&pOt__str_td[0x1]))));
  pOt_Separate_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CaseLabelList_COCC
#if pOt__ANSI_C
  (struct pOt__tag_3_COCT *pOt_x, struct pOt__tag_3_COCT *pOt_y)
#else
  (pOt_x, pOt_y)
  struct pOt__tag_3_COCT *pOt_x, *pOt_y;

#endif
{
  pOt_LONGINT pOt_first, pOt_last;
  pOt_INTEGER pOt_np;
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Undent_COCO();
  pOt_first=(pOt_LONGINT)((*pOt_x).pOt_intval);
  pOt_last=(pOt_LONGINT)((pOt_LONGINT)pOt__addchk(__FILE__,__LINE__,(pOt_LONGINT)((*pOt_y).pOt_intval),(pOt_LONGINT)(1),6));
  for(;;) {
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2D0L],&pOt__str_td[0x4]))));
    pOt_Separate_COCO();
    pOt_Link_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
    pOt_CConstValue_COCJ((struct pOt__tag_3_COCT*)&(*pOt_x),(pOt_INTEGER)((*pOt_x).pOt_qoffs),&pOt_np);
    pOt_Unlink_COCQ((struct pOt__tag_3_COCT*)&(*pOt_x));
    pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x290L],&pOt__str_td[0x1]))));
    pOt_Wrap_COCO();
    (*pOt_x).pOt_intval+=(1);
    if(( (*pOt_x).pOt_intval==pOt_last)) break;
  }
  (*pOt_x).pOt_intval=(pOt_LONGINT)(pOt_first);
  pOt_Indent_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CaseBar_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Undent_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x270L],&pOt__str_td[0x5]))));
  pOt_TermStmt_COCC();
  pOt_Indent_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CaseElse_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Undent_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x270L],&pOt__str_td[0x5]))));
  pOt_TermStmt_COCC();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2DCL],&pOt__str_td[0x8]))));
  pOt_TermStmt_COCC();
  pOt_Indent_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_IfPfx_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x25CL],&pOt__str_td[0x3]))));

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_IfSfx_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x88L],&pOt__str_td[0x1]))));
  pOt_Separate_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_Else_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Undent_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2ECL],&pOt__str_td[0x6]))));
  pOt_Separate_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CExport_COCC()
{
  pOt_Object_COCT pOt_obj, pOt_firstvar, pOt_firstproc;
  pOt_INTEGER pOt_im;
  struct {void *next, *vars[0x4];} pOt__gc_ptrs;
  struct {void *next, *vars[0x1];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x3]=pOt_NIL;
  pOt__gc_strs.vars[0x0]=pOt_NIL;
  pOt__gc_ptrs.vars[0x2]=&pOt_obj;
  pOt__gc_ptrs.vars[0x1]=&pOt_firstvar;
  pOt__gc_ptrs.vars[0x0]=&pOt_firstproc;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_obj=pOt_NIL;
  pOt_firstvar=pOt_NIL;
  pOt_firstproc=pOt_NIL;

  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x2F8L],&pOt__str_td[0xC]))));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_name));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x30CL],&pOt__str_td[0x5]))));
  pOt_Wrap_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x318L],&pOt__str_td[0xC]))));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_name));
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x30CL],&pOt__str_td[0x5]))));
  pOt_Wrap_COCO();
  pOt_Logo_COCC();
  pOt_Wrap_COCO();
  pOt_im=(pOt_INTEGER)(0);
  for(;;) {
    if(( pOt_im!=pOt_nofGmod_COCT)); else break;
    if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_GlbMod_COCT.arr[pOt__inxchk(__FILE__,__LINE__,0x40, pOt_im)]))).pOt_mode!=0)) {
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x17CL],&pOt__str_td[0x9]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18CL],&pOt__str_td[0x1]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_GlbMod_COCT.arr[pOt__inxchk(__FILE__,__LINE__,0x40, pOt_im)]))).pOt_name));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x194L],&pOt__str_td[0x2]))));
      pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x18CL],&pOt__str_td[0x1]))));
      pOt_Wrap_COCO();
    }
    pOt_im+=(1);
  }
  pOt_Wrap_COCO();
  pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_topScope_COCT))).pOt_next);
  pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_NIL);
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==19)))); else break;
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(((((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==13))&&(((*((struct pOt__tag_2_COCT*)pOt__nilchk(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_typ))).pOt_ref!=((pOt_INTEGER)(0)))))) {
      pOt_TypeObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj));
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    } else if(((((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==8))&&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_marked)) {
      pOt_ConstObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(3));
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    } else if(( (*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==1)) {
      if(( pOt_firstvar==pOt_NIL)) {
        pOt_firstvar=(struct pOt__tag_1_COCT*)(pOt_obj);
      }
      for(;;) {
        pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
        if((((pOt_obj==pOt_NIL))||(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode!=1)))) break;
      }
    } else {
      pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
    }
  }
  pOt_Wrap_COCO();
  pOt_firstproc=(struct pOt__tag_1_COCT*)(pOt_obj);
  pOt_DeclTypDescs_COCD();
  pOt_Wrap_COCO();
  pOt_obj=(struct pOt__tag_1_COCT*)(pOt_firstvar);
  pOt_StartVOList_COCY();
  for(;;) {
    if((((pOt_obj!=pOt_NIL))&&(((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode<=13)))); else break;
    if(((((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode==1))&&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_marked)) {
      pOt_VarObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(3));
    }
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  pOt_StopVOList_COCY();
  pOt_Wrap_COCO();
  pOt_obj=(struct pOt__tag_1_COCT*)(pOt_firstproc);
  for(;;) {
    if(( pOt_obj!=pOt_NIL)); else break;
    if(((((unsigned long)0!=((unsigned long)1<<pOt__rngchk_se(__FILE__,__LINE__,(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_mode)&(pOt_SET)0x68000L)))&&(*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_marked)) {
      pOt_ProcObj_COCY((struct pOt__tag_1_COCT*)(pOt_obj),(pOt_INTEGER)(3));
    }
    pOt_obj=(struct pOt__tag_1_COCT*)((*((struct pOt__tag_1_COCT*)pOt__nilchk(__FILE__,__LINE__,pOt_obj))).pOt_next);
  }
  pOt_BodyObj_COCY((struct pOt__tag_1_COCT*)(pOt_topScope_COCT),(pOt_INTEGER)(3));
  pOt_Wrap_COCO();
  pOt_PutSeq_COCO(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt__set_str_td(&pOt__strcon_buf[0x32CL],&pOt__str_td[0x6]))));
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_CommitCExport_COCC
#if pOt__ANSI_C
  (pOt__DynArr *pOt_TmpFName, pOt__DynArr *pOt_FName, pOt_BOOLEAN *pOt_newHF)
#else
  (pOt_TmpFName, pOt_FName, pOt_newHF)
  pOt__DynArr *pOt_TmpFName, *pOt_FName;
  pOt_BOOLEAN *pOt_newHF;

#endif
{
  pOt_File_Files pOt_oldFile, pOt_newFile;
  struct pOt__tag_2_Files pOt_oldRider, pOt_newRider;
  pOt_CHAR pOt_ch0, pOt_ch1;
  pOt_INTEGER pOt_res;
  struct {void *next, *vars[0x3];} pOt__gc_ptrs;
  struct {void *next, *vars[0x3];} pOt__gc_strs;
  pOt__gc_ptrs.next = pOt__gc_root;
  pOt__gc_strs.next = &pOt__gc_ptrs;
  pOt__gc_ptrs.vars[0x2]=pOt_NIL;
  pOt__gc_strs.vars[0x2]=pOt_NIL;
  pOt__gc_ptrs.vars[0x1]=&pOt_oldFile;
  pOt__gc_ptrs.vars[0x0]=&pOt_newFile;
  pOt__gc_strs.vars[0x1]=&pOt_oldRider;
  pOt__gc_strs.vars[0x0]=&pOt_newRider;
  pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;
  pOt_oldFile=pOt_NIL;
  pOt_newFile=pOt_NIL;
  pOt__init_var((pOt__TypDsc**)&pOt_oldRider,(pOt__TypDsc*)&pOt__td_2_Files);
  pOt__init_var((pOt__TypDsc**)&pOt_newRider,(pOt__TypDsc*)&pOt__td_2_Files);

  pOt_newFile=(struct pOt__tag_1_Files*)(pOt_Old_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_TmpFName))));
  pOt_oldFile=(struct pOt__tag_1_Files*)(pOt_Old_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_FName))));
  if(( pOt_oldFile!=pOt_NIL)) {
    pOt_Set_Files((struct pOt__tag_2_Files*)&pOt_oldRider,(struct pOt__tag_1_Files*)(pOt_oldFile),(pOt_LONGINT)(0));
    pOt_Set_Files((struct pOt__tag_2_Files*)&pOt_newRider,(struct pOt__tag_1_Files*)(pOt_newFile),(pOt_LONGINT)(0));
    for(;;) {
      pOt_Read_Files((struct pOt__tag_2_Files*)&pOt_oldRider,(pOt_BYTE_SYSTEM*)&pOt_ch0);
      pOt_Read_Files((struct pOt__tag_2_Files*)&pOt_newRider,(pOt_BYTE_SYSTEM*)&pOt_ch1);
      if(((((unsigned char)pOt_ch0!=(unsigned char)pOt_ch1))||pOt_newRider.pOt_eof)) break;
    }
    if((pOt_oldRider.pOt_eof&&pOt_newRider.pOt_eof)) {
      (*pOt_newHF)=(pOt_BOOLEAN)0;
    } else if(!(*pOt_newHF)) {
      pOt_Mark_COCS((pOt_INTEGER)(156));
    }
    pOt_Close_Files((struct pOt__tag_1_Files*)(pOt_oldFile));
  } else {
    (*pOt_newHF)=(pOt_BOOLEAN)1;
  }
  pOt_Close_Files((struct pOt__tag_1_Files*)(pOt_newFile));
  if((*pOt_newHF)) {
    pOt_Delete_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_FName)),&pOt_res);
    pOt_Rename_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_TmpFName)),pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_FName)),&pOt_res);
  } else {
    pOt_Delete_Files(pOt__dup_arr(__FILE__,__LINE__,(pOt__ArrTypDsc**)&(*pOt_TmpFName)),&pOt_res);
  }
  if(( pOt_res>((pOt_INTEGER)(1)))) {
    pOt__halt(__FILE__,__LINE__,33);
  }

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}




extern void pOt_InitData_COCC()
{
  struct {void*next;} pOt__gc_ptrs;
  pOt__gc_ptrs.next = pOt__gc_root;

  pOt_Logo_COCC();
  pOt_Wrap_COCO();
  pOt_InitStrings_COCD();
  pOt_Wrap_COCO();

pOt__Epilogue:;
  pOt__gc_root=(struct pOt__tag_gc_node*)pOt__gc_ptrs.next;
}

void pOt_COCC__body()
{
  static int pOt_COCC__loaded=0;
  if(!pOt_COCC__loaded){
    pOt_COCC__loaded=1;

    pOt_Strings__body();
    pOt_Files__body();
    pOt_COCS__body();
    pOt_COCT__body();
    pOt_COCD__body();
    pOt_COCQ__body();
    pOt_COCN__body();
    pOt_COCJ__body();
    pOt_COCO__body();
    pOt_COCH__body();
    pOt_COCY__body();

    pOt__gc_ptrs.next=pOt__gc_root;
    pOt__gc_root=(struct pOt__tag_gc_node*)&pOt__gc_strs;


    pOt_tempsafe_COCC=(pOt_BOOLEAN)1;

  pOt__Epilogue:;
  }
}
